	.text
	.file	"<stdin>"
	.globl	f2                              // -- Begin function f2
	.p2align	2
	.type	f2,@function
f2:                                     // @f2
// %bb.0:                               // %b0
	{
		r17:16 = combine(r1,r2)
		memd(r29+#-16) = r17:16
		allocframe(#24)
	}                                       // 8-byte Folded Spill
	{
		r1:0 = combine(r0,r16)
	}
	{
		call f1
		r2 = add(r29,#12)
	}
	{
		loop0(.LBB0_1,#2)
		r1:0 = combine(#0,##150995968)
	}
.Ltmp0:                                 // Block address taken
.LBB0_1:                                // %b1
                                        // =>This Inner Loop Header: Depth=1
	{
		m0 = r0
		r4 = r17
		r2 = memw(r16+#0)
		r3 = memw(r17+#0)
	}
	{
		r6 = add(r1,r3)
		memw(r4++#4:circ(m0)) = r2
	}
	{
		r5 = memw(r16++#4)
	}
	{
		r1 = memw(r4+#0)
	}
	{
		r1 += add(r6,r5)
		nop
	} :endloop0
// %bb.2:                               // %b2
	{
		call f0
		r0 = ##g0
		memw(r29+#0) = r1
	}
	{
		r17:16 = memd(r29+#16)
		dealloc_return
	}                                       // 8-byte Folded Reload
.Lfunc_end0:
	.size	f2, .Lfunc_end0-f2
                                        // -- End function
	.hidden	g0
	.section	".note.GNU-stack","",@progbits
