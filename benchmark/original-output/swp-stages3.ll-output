SU(0):   %2:intregs = PHI %13:intregs, %bb.1, %4:intregs, %bb.2
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 6
  Successors:
    SU(5): Data Latency=0 Reg=%2
    SU(8): Anti Latency=1
SU(1):   %3:intregs = PHI %8:intregs, %bb.1, %6:intregs, %bb.2
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 12
  Successors:
    SU(2): Data Latency=0 Reg=%3
    SU(2): Anti Latency=1
SU(2):   %14:intregs, %6:intregs = L2_loadrh_pi %3:intregs(tied-def 1), 2 :: (load 2 from %ir.v5, !tbaa !0)
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 11
  Predecessors:
    SU(1): Data Latency=0 Reg=%3
    SU(1): Anti Latency=1
  Successors:
    SU(3): Data Latency=2 Reg=%14
    SU(9): Ord  Latency=0 Memory
SU(3):   %15:intregs = A2_aslh %14:intregs
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 3
  Height             : 9
  Predecessors:
    SU(2): Data Latency=2 Reg=%14
  Successors:
    SU(4): Data Latency=1 Reg=%15
SU(4):   %16:intregs = S2_asr_r_r_sat %15:intregs, %17:intregs, implicit-def dead $usr_ovf
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 8
  Predecessors:
    SU(3): Data Latency=1 Reg=%15
  Successors:
    SU(5): Data Latency=2 Reg=%16
SU(5):   %19:intregs = M2_mpy_nac_sat_ll_s1 %16:intregs(tied-def 0), %2:intregs, %20:intregs, implicit-def dead $usr_ovf
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 6
  Predecessors:
    SU(4): Data Latency=2 Reg=%16
    SU(0): Data Latency=0 Reg=%2
  Successors:
    SU(6): Data Latency=2 Reg=%19
SU(6):   %21:intregs = S2_asl_r_r_sat %19:intregs, %22:intregs, implicit-def dead $usr_ovf
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 4
  Predecessors:
    SU(5): Data Latency=2 Reg=%19
  Successors:
    SU(7): Data Latency=2 Reg=%21
SU(7):   %24:intregs = A2_addsat %21:intregs, %23:intregs, implicit-def dead $usr_ovf
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 2
  Predecessors:
    SU(6): Data Latency=2 Reg=%21
  Successors:
    SU(9): Data Latency=2 Reg=%24
    SU(8): Data Latency=2 Reg=%24
SU(8):   %4:intregs = A2_asrh %24:intregs
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 12
  Height             : 0
  Predecessors:
    SU(7): Data Latency=2 Reg=%24
    SU(0): Anti Latency=1
SU(9):   S2_storerf_io %7:intregs, 0, %24:intregs :: (store 2 into %ir.a0, !tbaa !0)
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 12
  Height             : 0
  Predecessors:
    SU(7): Data Latency=2 Reg=%24
    SU(2): Ord  Latency=0 Memory
ExitSU:   ENDLOOP0 %bb.2, implicit-def $pc, implicit-def $lc0, implicit $sa0, implicit $lc0
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
calculateResMII:
Trying to reserve resource for 1 cycles for 
  %14:intregs, %6:intregs = L2_loadrh_pi %3:intregs(tied-def 1), 2 :: (load 2 from %ir.v5, !tbaa !0)
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %16:intregs = S2_asr_r_r_sat %15:intregs, %17:intregs, implicit-def dead $usr_ovf
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %19:intregs = M2_mpy_nac_sat_ll_s1 %16:intregs(tied-def 0), %2:intregs, %20:intregs, implicit-def dead $usr_ovf
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %21:intregs = S2_asl_r_r_sat %19:intregs, %22:intregs, implicit-def dead $usr_ovf
ReservedCycles:0, NumCycles:1
Trying to reserve resource for 1 cycles for 
  S2_storerf_io %7:intregs, 0, %24:intregs :: (store 2 into %ir.a0, !tbaa !0)
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %4:intregs = A2_asrh %24:intregs
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %24:intregs = A2_addsat %21:intregs, %23:intregs, implicit-def dead $usr_ovf
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %15:intregs = A2_aslh %14:intregs
ReservedCycles:1, NumCycles:1
Return Res MII:2
MII = 11 MAX_II = 21 (rec=11, res=2)
SU(1):   %3:intregs = PHI %8:intregs, %bb.1, %6:intregs, %bb.2
SU(2):   %14:intregs, %6:intregs = L2_loadrh_pi %3:intregs(tied-def 1), 2 :: (load 2 from %ir.v5, !tbaa !0)
SU(3):   %15:intregs = A2_aslh %14:intregs
SU(4):   %16:intregs = S2_asr_r_r_sat %15:intregs, %17:intregs, implicit-def dead $usr_ovf
SU(0):   %2:intregs = PHI %13:intregs, %bb.1, %4:intregs, %bb.2
SU(5):   %19:intregs = M2_mpy_nac_sat_ll_s1 %16:intregs(tied-def 0), %2:intregs, %20:intregs, implicit-def dead $usr_ovf
SU(6):   %21:intregs = S2_asl_r_r_sat %19:intregs, %22:intregs, implicit-def dead $usr_ovf
SU(7):   %24:intregs = A2_addsat %21:intregs, %23:intregs, implicit-def dead $usr_ovf
SU(8):   %4:intregs = A2_asrh %24:intregs
SU(9):   S2_storerf_io %7:intregs, 0, %24:intregs :: (store 2 into %ir.a0, !tbaa !0)
	Node 0:
	   ASAP = 0
	   ALAP = 5
	   MOV  = 5
	   D    = 0
	   H    = 6
	   ZLD  = 0
	   ZLH  = 1
	Node 1:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 12
	   ZLD  = 0
	   ZLH  = 2
	Node 2:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 1
	   H    = 11
	   ZLD  = 1
	   ZLH  = 1
	Node 3:
	   ASAP = 2
	   ALAP = 2
	   MOV  = 0
	   D    = 3
	   H    = 9
	   ZLD  = 0
	   ZLH  = 0
	Node 4:
	   ASAP = 3
	   ALAP = 3
	   MOV  = 0
	   D    = 4
	   H    = 8
	   ZLD  = 0
	   ZLH  = 0
	Node 5:
	   ASAP = 5
	   ALAP = 5
	   MOV  = 0
	   D    = 6
	   H    = 6
	   ZLD  = 1
	   ZLH  = 0
	Node 6:
	   ASAP = 7
	   ALAP = 7
	   MOV  = 0
	   D    = 8
	   H    = 4
	   ZLD  = 0
	   ZLH  = 0
	Node 7:
	   ASAP = 9
	   ALAP = 9
	   MOV  = 0
	   D    = 10
	   H    = 2
	   ZLD  = 0
	   ZLH  = 0
	Node 8:
	   ASAP = 11
	   ALAP = 11
	   MOV  = 0
	   D    = 12
	   H    = 0
	   ZLD  = 0
	   ZLH  = 0
	Node 9:
	   ASAP = 11
	   ALAP = 11
	   MOV  = 0
	   D    = 12
	   H    = 0
	   ZLD  = 2
	   ZLH  = 0
  Rec NodeSet Num nodes 5 rec 7 mov 5 depth 12 col 0
   SU(0) %2:intregs = PHI %13:intregs, %bb.1, %4:intregs, %bb.2
   SU(5) %19:intregs = M2_mpy_nac_sat_ll_s1 %16:intregs(tied-def 0), %2:intregs, %20:intregs, implicit-def dead $usr_ovf
   SU(6) %21:intregs = S2_asl_r_r_sat %19:intregs, %22:intregs, implicit-def dead $usr_ovf
   SU(7) %24:intregs = A2_addsat %21:intregs, %23:intregs, implicit-def dead $usr_ovf
   SU(8) %4:intregs = A2_asrh %24:intregs

  Rec NodeSet Num nodes 2 rec 1 mov 0 depth 1 col 0
   SU(1) %3:intregs = PHI %8:intregs, %bb.1, %6:intregs, %bb.2
   SU(2) %14:intregs, %6:intregs = L2_loadrh_pi %3:intregs(tied-def 1), 2 :: (load 2 from %ir.v5, !tbaa !0)

  Rec NodeSet Num nodes 7 rec 11 mov 0 depth 12 col 0
   SU(2) %14:intregs, %6:intregs = L2_loadrh_pi %3:intregs(tied-def 1), 2 :: (load 2 from %ir.v5, !tbaa !0)
   SU(3) %15:intregs = A2_aslh %14:intregs
   SU(4) %16:intregs = S2_asr_r_r_sat %15:intregs, %17:intregs, implicit-def dead $usr_ovf
   SU(5) %19:intregs = M2_mpy_nac_sat_ll_s1 %16:intregs(tied-def 0), %2:intregs, %20:intregs, implicit-def dead $usr_ovf
   SU(6) %21:intregs = S2_asl_r_r_sat %19:intregs, %22:intregs, implicit-def dead $usr_ovf
   SU(7) %24:intregs = A2_addsat %21:intregs, %23:intregs, implicit-def dead $usr_ovf
   SU(9) S2_storerf_io %7:intregs, 0, %24:intregs :: (store 2 into %ir.a0, !tbaa !0)

  NodeSet Num nodes 7 rec 11 mov 0 depth 12 col 0
   SU(2) %14:intregs, %6:intregs = L2_loadrh_pi %3:intregs(tied-def 1), 2 :: (load 2 from %ir.v5, !tbaa !0)
   SU(3) %15:intregs = A2_aslh %14:intregs
   SU(4) %16:intregs = S2_asr_r_r_sat %15:intregs, %17:intregs, implicit-def dead $usr_ovf
   SU(5) %19:intregs = M2_mpy_nac_sat_ll_s1 %16:intregs(tied-def 0), %2:intregs, %20:intregs, implicit-def dead $usr_ovf
   SU(6) %21:intregs = S2_asl_r_r_sat %19:intregs, %22:intregs, implicit-def dead $usr_ovf
   SU(7) %24:intregs = A2_addsat %21:intregs, %23:intregs, implicit-def dead $usr_ovf
   SU(9) S2_storerf_io %7:intregs, 0, %24:intregs :: (store 2 into %ir.a0, !tbaa !0)

  NodeSet Num nodes 2 rec 7 mov 5 depth 12 col 0
   SU(0) %2:intregs = PHI %13:intregs, %bb.1, %4:intregs, %bb.2
   SU(8) %4:intregs = A2_asrh %24:intregs

  NodeSet Num nodes 1 rec 1 mov 0 depth 1 col 0
   SU(1) %3:intregs = PHI %8:intregs, %bb.1, %6:intregs, %bb.2

NodeSet size 7
  Bottom up (default) 9 7 6 5 4 3 2 
   Switching order to top down 
Done with Nodeset
NodeSet size 2
  Top down (intersect) 8 0 
   Switching order to bottom up 
Done with Nodeset
NodeSet size 1
  Bottom up (preds) 1 
   Switching order to top down 
Done with Nodeset
Node order:  9  7  6  5  4  3  2  8  0  1 
Try to schedule with 11

Inst (9)   S2_storerf_io %7:intregs, 0, %24:intregs :: (store 2 into %ir.a0, !tbaa !0)

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 11 and 21 II: 11
	insert at cycle 11   S2_storerf_io %7:intregs, 0, %24:intregs :: (store 2 into %ir.a0, !tbaa !0)

Inst (7)   %24:intregs = A2_addsat %21:intregs, %23:intregs, implicit-def dead $usr_ovf

	es: 80000000 ls:        9 me: 7fffffff ms: 80000000
Trying to insert node between 9 and -1 II: 11
	insert at cycle 9   %24:intregs = A2_addsat %21:intregs, %23:intregs, implicit-def dead $usr_ovf

Inst (6)   %21:intregs = S2_asl_r_r_sat %19:intregs, %22:intregs, implicit-def dead $usr_ovf

	es: 80000000 ls:        7 me: 7fffffff ms: 80000000
Trying to insert node between 7 and -3 II: 11
	insert at cycle 7   %21:intregs = S2_asl_r_r_sat %19:intregs, %22:intregs, implicit-def dead $usr_ovf

Inst (5)   %19:intregs = M2_mpy_nac_sat_ll_s1 %16:intregs(tied-def 0), %2:intregs, %20:intregs, implicit-def dead $usr_ovf

	es: 80000000 ls:        5 me: 7fffffff ms: 80000000
Trying to insert node between 5 and -5 II: 11
	insert at cycle 5   %19:intregs = M2_mpy_nac_sat_ll_s1 %16:intregs(tied-def 0), %2:intregs, %20:intregs, implicit-def dead $usr_ovf

Inst (4)   %16:intregs = S2_asr_r_r_sat %15:intregs, %17:intregs, implicit-def dead $usr_ovf

	es: 80000000 ls:        3 me: 7fffffff ms: 80000000
Trying to insert node between 3 and -7 II: 11
	insert at cycle 3   %16:intregs = S2_asr_r_r_sat %15:intregs, %17:intregs, implicit-def dead $usr_ovf

Inst (3)   %15:intregs = A2_aslh %14:intregs

	es: 80000000 ls:        2 me: 7fffffff ms: 80000000
Trying to insert node between 2 and -8 II: 11
	insert at cycle 2   %15:intregs = A2_aslh %14:intregs

Inst (2)   %14:intregs, %6:intregs = L2_loadrh_pi %3:intregs(tied-def 1), 2 :: (load 2 from %ir.v5, !tbaa !0)

	es: 80000000 ls:        0 me: 7fffffff ms:        1
	Can't schedule
Try to schedule with 12

Inst (9)   S2_storerf_io %7:intregs, 0, %24:intregs :: (store 2 into %ir.a0, !tbaa !0)

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 11 and 22 II: 12
	insert at cycle 11   S2_storerf_io %7:intregs, 0, %24:intregs :: (store 2 into %ir.a0, !tbaa !0)

Inst (7)   %24:intregs = A2_addsat %21:intregs, %23:intregs, implicit-def dead $usr_ovf

	es: 80000000 ls:        9 me: 7fffffff ms: 80000000
Trying to insert node between 9 and -2 II: 12
	insert at cycle 9   %24:intregs = A2_addsat %21:intregs, %23:intregs, implicit-def dead $usr_ovf

Inst (6)   %21:intregs = S2_asl_r_r_sat %19:intregs, %22:intregs, implicit-def dead $usr_ovf

	es: 80000000 ls:        7 me: 7fffffff ms: 80000000
Trying to insert node between 7 and -4 II: 12
	insert at cycle 7   %21:intregs = S2_asl_r_r_sat %19:intregs, %22:intregs, implicit-def dead $usr_ovf

Inst (5)   %19:intregs = M2_mpy_nac_sat_ll_s1 %16:intregs(tied-def 0), %2:intregs, %20:intregs, implicit-def dead $usr_ovf

	es: 80000000 ls:        5 me: 7fffffff ms: 80000000
Trying to insert node between 5 and -6 II: 12
	insert at cycle 5   %19:intregs = M2_mpy_nac_sat_ll_s1 %16:intregs(tied-def 0), %2:intregs, %20:intregs, implicit-def dead $usr_ovf

Inst (4)   %16:intregs = S2_asr_r_r_sat %15:intregs, %17:intregs, implicit-def dead $usr_ovf

	es: 80000000 ls:        3 me: 7fffffff ms: 80000000
Trying to insert node between 3 and -8 II: 12
	insert at cycle 3   %16:intregs = S2_asr_r_r_sat %15:intregs, %17:intregs, implicit-def dead $usr_ovf

Inst (3)   %15:intregs = A2_aslh %14:intregs

	es: 80000000 ls:        2 me: 7fffffff ms: 80000000
Trying to insert node between 2 and -9 II: 12
	insert at cycle 2   %15:intregs = A2_aslh %14:intregs

Inst (2)   %14:intregs, %6:intregs = L2_loadrh_pi %3:intregs(tied-def 1), 2 :: (load 2 from %ir.v5, !tbaa !0)

	es: 80000000 ls:        0 me: 7fffffff ms:        0
Trying to insert node between 0 and 0 II: 12
	insert at cycle 0   %14:intregs, %6:intregs = L2_loadrh_pi %3:intregs(tied-def 1), 2 :: (load 2 from %ir.v5, !tbaa !0)

Inst (8)   %4:intregs = A2_asrh %24:intregs

	es:        b ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 11 and 22 II: 12
	insert at cycle 11   %4:intregs = A2_asrh %24:intregs

Inst (0)   %2:intregs = PHI %13:intregs, %bb.1, %4:intregs, %bb.2

	es:        0 ls:        5 me: 7fffffff ms: 80000000
Trying to insert node between 5 and 0 II: 12
	insert at cycle 5   %2:intregs = PHI %13:intregs, %bb.1, %4:intregs, %bb.2

Inst (1)   %3:intregs = PHI %8:intregs, %bb.1, %6:intregs, %bb.2

	es: fffffff5 ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between 0 and -11 II: 12
	insert at cycle 0   %3:intregs = PHI %8:intregs, %bb.1, %6:intregs, %bb.2
Schedule Found? 1 (II=13)
cycle 0 (0) (1) %3:intregs = PHI %8:intregs, %bb.1, %6:intregs, %bb.2

cycle 0 (0) (2) %14:intregs, %6:intregs = L2_loadrh_pi %3:intregs(tied-def 1), 2 :: (load 2 from %ir.v5, !tbaa !0)

cycle 2 (0) (3) %15:intregs = A2_aslh %14:intregs

cycle 3 (0) (4) %16:intregs = S2_asr_r_r_sat %15:intregs, %17:intregs, implicit-def dead $usr_ovf

cycle 5 (0) (0) %2:intregs = PHI %13:intregs, %bb.1, %4:intregs, %bb.2

cycle 5 (0) (5) %19:intregs = M2_mpy_nac_sat_ll_s1 %16:intregs(tied-def 0), %2:intregs, %20:intregs, implicit-def dead $usr_ovf

cycle 7 (0) (6) %21:intregs = S2_asl_r_r_sat %19:intregs, %22:intregs, implicit-def dead $usr_ovf

cycle 9 (0) (7) %24:intregs = A2_addsat %21:intregs, %23:intregs, implicit-def dead $usr_ovf

cycle 11 (0) (9) S2_storerf_io %7:intregs, 0, %24:intregs :: (store 2 into %ir.a0, !tbaa !0)

cycle 11 (0) (8) %4:intregs = A2_asrh %24:intregs

No schedule found, return
	.text
	.file	"<stdin>"
	.globl	f0                              // -- Begin function f0
	.p2align	4
	.type	f0,@function
f0:                                     // @f0
// %bb.0:                               // %b0
	{
		p0 = cmp.gt(r2,#0)
		if (!p0.new) jumpr:nt r31
	}
.LBB0_1:                                // %b1
	{
		loop0(.LBB0_2,r2)
		r3 = ##32768
	}
                                        // implicit-def: $r2
	.p2align	4
.Ltmp0:                                 // Block address taken
.LBB0_2:                                // %b2
                                        // =>This Inner Loop Header: Depth=1
	{
		r4 = memh(r1++#2)
	}
	{
		r4 = aslh(r4)
	}
	{
		r4 = asr(r4,r0):sat
	}
	{
		r4 -= mpy(r2.l,r0.l):<<1:sat
	}
	{
		r2 = asl(r4,r0):sat
	}
	{
		r4 = add(r2,r3):sat
	}
	{
		r2 = asrh(r4)
		memh(r0+#0) = r4.h
	} :endloop0
// %bb.3:                               // %b3
	{
		jumpr r31
	}
.Lfunc_end0:
	.size	f0, .Lfunc_end0-f0
                                        // -- End function
	.section	".note.GNU-stack","",@progbits
