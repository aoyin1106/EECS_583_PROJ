SU(0):   %2:intregs = PHI %0:intregs, %bb.1, %6:intregs, %bb.2
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 2
  Successors:
    SU(10): Data Latency=0 Reg=%2
    SU(2): Data Latency=0 Reg=%2
    SU(10): Anti Latency=1
SU(1):   %3:intregs = PHI %1:intregs, %bb.1, %7:intregs, %bb.2
  # preds left       : 0
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 1
  Successors:
    SU(11): Data Latency=0 Reg=%3
    SU(9): Data Latency=0 Reg=%3
    SU(7): Data Latency=0 Reg=%3
    SU(6): Data Latency=0 Reg=%3
    SU(5): Data Latency=0 Reg=%3
    SU(11): Anti Latency=1
SU(2):   %18:intregs = L2_loadrub_io %2:intregs, -1 :: (load 1 from %ir.cgep12, !tbaa !0)
  # preds left       : 1
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Predecessors:
    SU(0): Data Latency=0 Reg=%2
  Successors:
    SU(4): Data Latency=2 Reg=%18
    SU(9): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
SU(3):   %19:intregs = L2_loadrub_io %9:intregs, 0 :: (load 1 from %ir.a1, !tbaa !0)
  # preds left       : 0
  # succs left       : 5
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 2
  Successors:
    SU(4): Data Latency=2 Reg=%19
    SU(9): Ord  Latency=0 Memory
    SU(8): Ord  Latency=0 Memory
    SU(6): Ord  Latency=0 Memory
    SU(5): Ord  Latency=0 Memory
SU(4):   %20:intregs = S2_asl_i_r_or %18:intregs(tied-def 0), %19:intregs, 8
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(3): Data Latency=2 Reg=%19
    SU(2): Data Latency=2 Reg=%18
  Successors:
    SU(6): Data Latency=0 Reg=%20
SU(5):   S2_storeri_io %11:intregs, 0, %3:intregs :: (store 4 into %ir.a3, !tbaa !3)
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
    SU(1): Data Latency=0 Reg=%3
  Successors:
    SU(8): Ord  Latency=0 Memory
SU(6):   S2_storerh_io %3:intregs, -2, %20:intregs :: (store 2 into %ir.cgep11, !tbaa !5)
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 0
  Predecessors:
    SU(4): Data Latency=0 Reg=%20
    SU(3): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
    SU(1): Data Latency=0 Reg=%3
SU(7):   %21:intregs = A2_addi %3:intregs, 2
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(1): Data Latency=0 Reg=%3
  Successors:
    SU(8): Data Latency=0 Reg=%21
SU(8):   S2_storeri_io %12:intregs, 0, %21:intregs :: (store 4 into %ir.a4, !tbaa !3)
  # preds left       : 4
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(7): Data Latency=0 Reg=%21
    SU(5): Ord  Latency=0 Memory
    SU(3): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
SU(9):   S4_storeirh_io %3:intregs, 0, 0 :: (store 2 into %ir.lsr.iv, !tbaa !5)
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 0
  Predecessors:
    SU(3): Ord  Latency=0 Memory
    SU(2): Ord  Latency=0 Memory
    SU(1): Data Latency=0 Reg=%3
SU(10):   %6:intregs = A2_addi %2:intregs, 8
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(0): Data Latency=0 Reg=%2
    SU(0): Anti Latency=1
SU(11):   %7:intregs = A2_addi %3:intregs, 4
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(1): Data Latency=0 Reg=%3
    SU(1): Anti Latency=1
ExitSU:   ENDLOOP0 %bb.2, implicit-def $pc, implicit-def $lc0, implicit $sa0, implicit $lc0
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
calculateResMII:
Trying to reserve resource for 1 cycles for 
  %18:intregs = L2_loadrub_io %2:intregs, -1 :: (load 1 from %ir.cgep12, !tbaa !0)
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %20:intregs = S2_asl_i_r_or %18:intregs(tied-def 0), %19:intregs, 8
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  S2_storeri_io %12:intregs, 0, %21:intregs :: (store 4 into %ir.a4, !tbaa !3)
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %19:intregs = L2_loadrub_io %9:intregs, 0 :: (load 1 from %ir.a1, !tbaa !0)
ReservedCycles:0, NumCycles:1
Trying to reserve resource for 1 cycles for 
  S2_storerh_io %3:intregs, -2, %20:intregs :: (store 2 into %ir.cgep11, !tbaa !5)
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  S4_storeirh_io %3:intregs, 0, 0 :: (store 2 into %ir.lsr.iv, !tbaa !5)
ReservedCycles:0, NumCycles:1
Trying to reserve resource for 1 cycles for 
  S2_storeri_io %11:intregs, 0, %3:intregs :: (store 4 into %ir.a3, !tbaa !3)
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %7:intregs = A2_addi %3:intregs, 4
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %21:intregs = A2_addi %3:intregs, 2
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %6:intregs = A2_addi %2:intregs, 8
ReservedCycles:1, NumCycles:1
Return Res MII:3
MII = 3 MAX_II = 13 (rec=2, res=3)
SU(3):   %19:intregs = L2_loadrub_io %9:intregs, 0 :: (load 1 from %ir.a1, !tbaa !0)
SU(0):   %2:intregs = PHI %0:intregs, %bb.1, %6:intregs, %bb.2
SU(2):   %18:intregs = L2_loadrub_io %2:intregs, -1 :: (load 1 from %ir.cgep12, !tbaa !0)
SU(4):   %20:intregs = S2_asl_i_r_or %18:intregs(tied-def 0), %19:intregs, 8
SU(1):   %3:intregs = PHI %1:intregs, %bb.1, %7:intregs, %bb.2
SU(6):   S2_storerh_io %3:intregs, -2, %20:intregs :: (store 2 into %ir.cgep11, !tbaa !5)
SU(7):   %21:intregs = A2_addi %3:intregs, 2
SU(5):   S2_storeri_io %11:intregs, 0, %3:intregs :: (store 4 into %ir.a3, !tbaa !3)
SU(8):   S2_storeri_io %12:intregs, 0, %21:intregs :: (store 4 into %ir.a4, !tbaa !3)
SU(9):   S4_storeirh_io %3:intregs, 0, 0 :: (store 2 into %ir.lsr.iv, !tbaa !5)
SU(10):   %6:intregs = A2_addi %2:intregs, 8
SU(11):   %7:intregs = A2_addi %3:intregs, 4
	Node 0:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 2
	   ZLD  = 0
	   ZLH  = 3
	Node 1:
	   ASAP = 0
	   ALAP = 2
	   MOV  = 2
	   D    = 0
	   H    = 1
	   ZLD  = 0
	   ZLH  = 2
	Node 2:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 2
	   ZLD  = 1
	   ZLH  = 2
	Node 3:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 2
	   ZLD  = 0
	   ZLH  = 2
	Node 4:
	   ASAP = 2
	   ALAP = 2
	   MOV  = 0
	   D    = 2
	   H    = 0
	   ZLD  = 0
	   ZLH  = 1
	Node 5:
	   ASAP = 0
	   ALAP = 2
	   MOV  = 2
	   D    = 0
	   H    = 0
	   ZLD  = 2
	   ZLH  = 1
	Node 6:
	   ASAP = 2
	   ALAP = 2
	   MOV  = 0
	   D    = 2
	   H    = 0
	   ZLD  = 2
	   ZLH  = 0
	Node 7:
	   ASAP = 0
	   ALAP = 2
	   MOV  = 2
	   D    = 0
	   H    = 0
	   ZLD  = 1
	   ZLH  = 1
	Node 8:
	   ASAP = 0
	   ALAP = 2
	   MOV  = 2
	   D    = 0
	   H    = 0
	   ZLD  = 3
	   ZLH  = 0
	Node 9:
	   ASAP = 0
	   ALAP = 2
	   MOV  = 2
	   D    = 0
	   H    = 0
	   ZLD  = 2
	   ZLH  = 0
	Node 10:
	   ASAP = 0
	   ALAP = 2
	   MOV  = 2
	   D    = 1
	   H    = 0
	   ZLD  = 1
	   ZLH  = 0
	Node 11:
	   ASAP = 0
	   ALAP = 2
	   MOV  = 2
	   D    = 1
	   H    = 0
	   ZLD  = 1
	   ZLH  = 0
  Rec NodeSet Num nodes 2 rec 1 mov 2 depth 1 col 0
   SU(0) %2:intregs = PHI %0:intregs, %bb.1, %6:intregs, %bb.2
   SU(10) %6:intregs = A2_addi %2:intregs, 8

  Rec NodeSet Num nodes 2 rec 1 mov 2 depth 1 col 0
   SU(1) %3:intregs = PHI %1:intregs, %bb.1, %7:intregs, %bb.2
   SU(11) %7:intregs = A2_addi %3:intregs, 4

  Rec NodeSet Num nodes 3 rec 2 mov 0 depth 2 col 0
   SU(2) %18:intregs = L2_loadrub_io %2:intregs, -1 :: (load 1 from %ir.cgep12, !tbaa !0)
   SU(4) %20:intregs = S2_asl_i_r_or %18:intregs(tied-def 0), %19:intregs, 8
   SU(6) S2_storerh_io %3:intregs, -2, %20:intregs :: (store 2 into %ir.cgep11, !tbaa !5)

  Rec NodeSet Num nodes 6 rec 2 mov 2 depth 2 col 0
   SU(3) %19:intregs = L2_loadrub_io %9:intregs, 0 :: (load 1 from %ir.a1, !tbaa !0)
   SU(4) %20:intregs = S2_asl_i_r_or %18:intregs(tied-def 0), %19:intregs, 8
   SU(6) S2_storerh_io %3:intregs, -2, %20:intregs :: (store 2 into %ir.cgep11, !tbaa !5)
   SU(9) S4_storeirh_io %3:intregs, 0, 0 :: (store 2 into %ir.lsr.iv, !tbaa !5)
   SU(8) S2_storeri_io %12:intregs, 0, %21:intregs :: (store 4 into %ir.a4, !tbaa !3)
   SU(5) S2_storeri_io %11:intregs, 0, %3:intregs :: (store 4 into %ir.a3, !tbaa !3)

  NodeSet Num nodes 3 rec 2 mov 0 depth 2 col 0
   SU(2) %18:intregs = L2_loadrub_io %2:intregs, -1 :: (load 1 from %ir.cgep12, !tbaa !0)
   SU(4) %20:intregs = S2_asl_i_r_or %18:intregs(tied-def 0), %19:intregs, 8
   SU(6) S2_storerh_io %3:intregs, -2, %20:intregs :: (store 2 into %ir.cgep11, !tbaa !5)

  NodeSet Num nodes 4 rec 2 mov 2 depth 2 col 0
   SU(3) %19:intregs = L2_loadrub_io %9:intregs, 0 :: (load 1 from %ir.a1, !tbaa !0)
   SU(9) S4_storeirh_io %3:intregs, 0, 0 :: (store 2 into %ir.lsr.iv, !tbaa !5)
   SU(8) S2_storeri_io %12:intregs, 0, %21:intregs :: (store 4 into %ir.a4, !tbaa !3)
   SU(5) S2_storeri_io %11:intregs, 0, %3:intregs :: (store 4 into %ir.a3, !tbaa !3)

  NodeSet Num nodes 2 rec 1 mov 2 depth 1 col 0
   SU(0) %2:intregs = PHI %0:intregs, %bb.1, %6:intregs, %bb.2
   SU(10) %6:intregs = A2_addi %2:intregs, 8

  NodeSet Num nodes 3 rec 1 mov 2 depth 1 col 0
   SU(1) %3:intregs = PHI %1:intregs, %bb.1, %7:intregs, %bb.2
   SU(11) %7:intregs = A2_addi %3:intregs, 4
   SU(7) %21:intregs = A2_addi %3:intregs, 2

NodeSet size 3
  Bottom up (default) 6 4 2 
   Switching order to top down 
Done with Nodeset
NodeSet size 4
  Top down (succs) 5 9 8 
   Switching order to bottom up 3 
   Switching order to top down 
Done with Nodeset
NodeSet size 2
  Bottom up (default) 10 0 
   Switching order to top down 
Done with Nodeset
NodeSet size 3
  Bottom up (preds) 7 1 11 
   Switching order to top down 
Done with Nodeset
Node order:  6  4  2  5  9  8  3  10  0  7  1  11 
Try to schedule with 3

Inst (6)   S2_storerh_io %3:intregs, -2, %20:intregs :: (store 2 into %ir.cgep11, !tbaa !5)

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 2 and 4 II: 3
	insert at cycle 2   S2_storerh_io %3:intregs, -2, %20:intregs :: (store 2 into %ir.cgep11, !tbaa !5)

Inst (4)   %20:intregs = S2_asl_i_r_or %18:intregs(tied-def 0), %19:intregs, 8

	es: 80000000 ls:        2 me: 7fffffff ms: 80000000
Trying to insert node between 2 and 0 II: 3
	insert at cycle 2   %20:intregs = S2_asl_i_r_or %18:intregs(tied-def 0), %19:intregs, 8

Inst (2)   %18:intregs = L2_loadrub_io %2:intregs, -1 :: (load 1 from %ir.cgep12, !tbaa !0)

	es: 80000000 ls:        0 me: 7fffffff ms:        0
Trying to insert node between 0 and 0 II: 3
	insert at cycle 0   %18:intregs = L2_loadrub_io %2:intregs, -1 :: (load 1 from %ir.cgep12, !tbaa !0)

Inst (5)   S2_storeri_io %11:intregs, 0, %3:intregs :: (store 4 into %ir.a3, !tbaa !3)

	es:        0 ls: 7fffffff me:        2 ms: 80000000
Trying to insert node between 0 and 2 II: 3
	insert at cycle 0   S2_storeri_io %11:intregs, 0, %3:intregs :: (store 4 into %ir.a3, !tbaa !3)

Inst (9)   S4_storeirh_io %3:intregs, 0, 0 :: (store 2 into %ir.lsr.iv, !tbaa !5)

	es:        0 ls: 7fffffff me:        2 ms: 80000000
Trying to insert node between 0 and 2 II: 3
	failed to insert at cycle 0   S4_storeirh_io %3:intregs, 0, 0 :: (store 2 into %ir.lsr.iv, !tbaa !5)
	insert at cycle 1   S4_storeirh_io %3:intregs, 0, 0 :: (store 2 into %ir.lsr.iv, !tbaa !5)

Inst (8)   S2_storeri_io %12:intregs, 0, %21:intregs :: (store 4 into %ir.a4, !tbaa !3)

	es:        0 ls: 7fffffff me:        2 ms: 80000000
Trying to insert node between 0 and 2 II: 3
	failed to insert at cycle 0   S2_storeri_io %12:intregs, 0, %21:intregs :: (store 4 into %ir.a4, !tbaa !3)
	insert at cycle 1   S2_storeri_io %12:intregs, 0, %21:intregs :: (store 4 into %ir.a4, !tbaa !3)

Inst (3)   %19:intregs = L2_loadrub_io %9:intregs, 0 :: (load 1 from %ir.a1, !tbaa !0)

	es: 80000000 ls:        0 me: 7fffffff ms:        0
Trying to insert node between 0 and 0 II: 3
	failed to insert at cycle 0   %19:intregs = L2_loadrub_io %9:intregs, 0 :: (load 1 from %ir.a1, !tbaa !0)
	Can't schedule
Try to schedule with 4

Inst (6)   S2_storerh_io %3:intregs, -2, %20:intregs :: (store 2 into %ir.cgep11, !tbaa !5)

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 2 and 5 II: 4
	insert at cycle 2   S2_storerh_io %3:intregs, -2, %20:intregs :: (store 2 into %ir.cgep11, !tbaa !5)

Inst (4)   %20:intregs = S2_asl_i_r_or %18:intregs(tied-def 0), %19:intregs, 8

	es: 80000000 ls:        2 me: 7fffffff ms: 80000000
Trying to insert node between 2 and -1 II: 4
	insert at cycle 2   %20:intregs = S2_asl_i_r_or %18:intregs(tied-def 0), %19:intregs, 8

Inst (2)   %18:intregs = L2_loadrub_io %2:intregs, -1 :: (load 1 from %ir.cgep12, !tbaa !0)

	es: 80000000 ls:        0 me: 7fffffff ms: ffffffff
Trying to insert node between 0 and -1 II: 4
	insert at cycle 0   %18:intregs = L2_loadrub_io %2:intregs, -1 :: (load 1 from %ir.cgep12, !tbaa !0)

Inst (5)   S2_storeri_io %11:intregs, 0, %3:intregs :: (store 4 into %ir.a3, !tbaa !3)

	es:        0 ls: 7fffffff me:        3 ms: 80000000
Trying to insert node between 0 and 3 II: 4
	insert at cycle 0   S2_storeri_io %11:intregs, 0, %3:intregs :: (store 4 into %ir.a3, !tbaa !3)

Inst (9)   S4_storeirh_io %3:intregs, 0, 0 :: (store 2 into %ir.lsr.iv, !tbaa !5)

	es:        0 ls: 7fffffff me:        3 ms: 80000000
Trying to insert node between 0 and 3 II: 4
	failed to insert at cycle 0   S4_storeirh_io %3:intregs, 0, 0 :: (store 2 into %ir.lsr.iv, !tbaa !5)
	insert at cycle 1   S4_storeirh_io %3:intregs, 0, 0 :: (store 2 into %ir.lsr.iv, !tbaa !5)

Inst (8)   S2_storeri_io %12:intregs, 0, %21:intregs :: (store 4 into %ir.a4, !tbaa !3)

	es:        0 ls: 7fffffff me:        3 ms: 80000000
Trying to insert node between 0 and 3 II: 4
	failed to insert at cycle 0   S2_storeri_io %12:intregs, 0, %21:intregs :: (store 4 into %ir.a4, !tbaa !3)
	insert at cycle 1   S2_storeri_io %12:intregs, 0, %21:intregs :: (store 4 into %ir.a4, !tbaa !3)

Inst (3)   %19:intregs = L2_loadrub_io %9:intregs, 0 :: (load 1 from %ir.a1, !tbaa !0)

	es: 80000000 ls:        0 me: 7fffffff ms: ffffffff
Trying to insert node between 0 and -1 II: 4
	failed to insert at cycle 0   %19:intregs = L2_loadrub_io %9:intregs, 0 :: (load 1 from %ir.a1, !tbaa !0)
	insert at cycle -1   %19:intregs = L2_loadrub_io %9:intregs, 0 :: (load 1 from %ir.a1, !tbaa !0)

Inst (10)   %6:intregs = A2_addi %2:intregs, 8

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -1 and 2 II: 4
	insert at cycle -1   %6:intregs = A2_addi %2:intregs, 8

Inst (0)   %2:intregs = PHI %0:intregs, %bb.1, %6:intregs, %bb.2

	es: fffffffc ls: ffffffff me: 7fffffff ms: 80000000
Trying to insert node between -1 and -4 II: 4
	insert at cycle -1   %2:intregs = PHI %0:intregs, %bb.1, %6:intregs, %bb.2

Inst (7)   %21:intregs = A2_addi %3:intregs, 2

	es: 80000000 ls:        1 me: 7fffffff ms: 80000000
Trying to insert node between 1 and -2 II: 4
	insert at cycle 1   %21:intregs = A2_addi %3:intregs, 2

Inst (1)   %3:intregs = PHI %1:intregs, %bb.1, %7:intregs, %bb.2

	es: 80000000 ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between 0 and -3 II: 4
	insert at cycle 0   %3:intregs = PHI %1:intregs, %bb.1, %7:intregs, %bb.2

Inst (11)   %7:intregs = A2_addi %3:intregs, 4

	es:        0 ls:        3 me: 7fffffff ms: 80000000
Trying to insert node between 0 and 3 II: 4
	insert at cycle 0   %7:intregs = A2_addi %3:intregs, 4
Schedule Found? 1 (II=5)
cycle -1 (0) (0) %2:intregs = PHI %0:intregs, %bb.1, %6:intregs, %bb.2

cycle -1 (0) (3) %19:intregs = L2_loadrub_io %9:intregs, 0 :: (load 1 from %ir.a1, !tbaa !0)

cycle -1 (0) (10) %6:intregs = A2_addi %2:intregs, 8

cycle 0 (0) (1) %3:intregs = PHI %1:intregs, %bb.1, %7:intregs, %bb.2

cycle 0 (0) (2) %18:intregs = L2_loadrub_io %2:intregs, -1 :: (load 1 from %ir.cgep12, !tbaa !0)

cycle 0 (0) (5) S2_storeri_io %11:intregs, 0, %3:intregs :: (store 4 into %ir.a3, !tbaa !3)

cycle 0 (0) (11) %7:intregs = A2_addi %3:intregs, 4

cycle 1 (0) (7) %21:intregs = A2_addi %3:intregs, 2

cycle 1 (0) (9) S4_storeirh_io %3:intregs, 0, 0 :: (store 2 into %ir.lsr.iv, !tbaa !5)

cycle 1 (0) (8) S2_storeri_io %12:intregs, 0, %21:intregs :: (store 4 into %ir.a4, !tbaa !3)

cycle 2 (0) (4) %20:intregs = S2_asl_i_r_or %18:intregs(tied-def 0), %19:intregs, 8

cycle 2 (0) (6) S2_storerh_io %3:intregs, -2, %20:intregs :: (store 2 into %ir.cgep11, !tbaa !5)

No schedule found, return
	.text
	.file	"<stdin>"
	.globl	f0                              // -- Begin function f0
	.p2align	4
	.type	f0,@function
f0:                                     // @f0
// %bb.0:                               // %b0
	{
		r6 = memb(r1+#0)
	}
	{
		p0 = cmp.eq(r6,#1)
		if (!p0.new) jumpr:nt r31
	}
.LBB0_1:                                // %b1.preheader
	{
		r0 = add(r0,#46)
		r5 = add(r5,#7)
		r2 = add(r2,#2)
	}
	{
		r5 = lsr(r5,#3)
	}
	{
		loop0(.LBB0_2,r5)
	}
	.p2align	4
.Ltmp0:                                 // Block address taken
.LBB0_2:                                // %b1
                                        // =>This Inner Loop Header: Depth=1
	{
		r7 = add(r2,#2)
		r0 = add(r0,#8)
		r5 = memub(r0+#-1)
		r6 = memub(r1+#0)
	}
	{
		memw(r3+#0) = r2
		memh(r2+#0) = #0
	}
	{
		r5 |= asl(r6,#8)
		r2 = add(r2,#4)
		memh(r2+#-2) = r5.new
	}
	{
		nop
		memw(r4+#0) = r7
	} :endloop0
// %bb.3:                               // %b2
	{
		jumpr r31
	}
.Lfunc_end0:
	.size	f0, .Lfunc_end0-f0
                                        // -- End function
	.section	".note.GNU-stack","",@progbits
