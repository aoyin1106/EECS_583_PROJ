SU(0):   %7:intregs = PHI %6:intregs, %bb.1, %19:intregs, %bb.2
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 1
  Successors:
    SU(10): Data Latency=0 Reg=%7
    SU(10): Anti Latency=1
SU(1):   %8:intregs = PHI %5:intregs, %bb.1, %20:intregs, %bb.2
  # preds left       : 0
  # succs left       : 6
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 1
  Successors:
    SU(11): Data Latency=0 Reg=%8
    SU(9): Data Latency=0 Reg=%8
    SU(8): Data Latency=0 Reg=%8
    SU(7): Data Latency=0 Reg=%8
    SU(6): Data Latency=0 Reg=%8
    SU(11): Anti Latency=1
SU(2):   %63:intregs = PHI %81:intregs, %bb.1, %82:intregs, %bb.2
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 1
  Successors:
    SU(9): Data Latency=0 Reg=%63
    SU(12): Anti Latency=1
SU(3):   %67:intregs = PHI %83:intregs, %bb.1, %84:intregs, %bb.2
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 1
  Successors:
    SU(8): Data Latency=0 Reg=%67
    SU(13): Anti Latency=1
SU(4):   %70:intregs = PHI %85:intregs, %bb.1, %86:intregs, %bb.2
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 1
  Successors:
    SU(7): Data Latency=0 Reg=%70
    SU(14): Anti Latency=1
SU(5):   %75:intregs = PHI %87:intregs, %bb.1, %88:intregs, %bb.2
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 1
  Successors:
    SU(6): Data Latency=0 Reg=%75
    SU(15): Anti Latency=1
SU(6):   S2_storerh_io %8:intregs, 0, %75:intregs :: (store (s16) into %ir.add.ptr11.phi)
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Predecessors:
    SU(5): Data Latency=0 Reg=%75
    SU(1): Data Latency=0 Reg=%8
  Successors:
    SU(10): Ord  Latency=1 Memory
    SU(10): Ord  Latency=0 Artificial
SU(7):   S2_storerf_io %8:intregs, 2, %70:intregs :: (store (s16) into %ir.cgep7)
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Predecessors:
    SU(4): Data Latency=0 Reg=%70
    SU(1): Data Latency=0 Reg=%8
  Successors:
    SU(10): Ord  Latency=1 Memory
    SU(10): Ord  Latency=0 Artificial
SU(8):   S2_storerh_io %8:intregs, 4, %67:intregs :: (store (s16) into %ir.cgep8)
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Predecessors:
    SU(3): Data Latency=0 Reg=%67
    SU(1): Data Latency=0 Reg=%8
  Successors:
    SU(10): Ord  Latency=1 Memory
    SU(10): Ord  Latency=0 Artificial
SU(9):   S2_storerf_io %8:intregs, 6, %63:intregs :: (store (s16) into %ir.cgep9)
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Predecessors:
    SU(2): Data Latency=0 Reg=%63
    SU(1): Data Latency=0 Reg=%8
  Successors:
    SU(10): Ord  Latency=1 Memory
    SU(10): Ord  Latency=0 Artificial
SU(10):   %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)
  # preds left       : 10
  # succs left       : 4
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(9): Ord  Latency=1 Memory
    SU(8): Ord  Latency=1 Memory
    SU(7): Ord  Latency=1 Memory
    SU(6): Ord  Latency=1 Memory
    SU(0): Data Latency=0 Reg=%7
    SU(0): Anti Latency=1
    SU(9): Ord  Latency=0 Artificial
    SU(8): Ord  Latency=0 Artificial
    SU(7): Ord  Latency=0 Artificial
    SU(6): Ord  Latency=0 Artificial
  Successors:
    SU(15): Data Latency=0 Reg=%32
    SU(14): Data Latency=0 Reg=%32
    SU(13): Data Latency=0 Reg=%32
    SU(12): Data Latency=0 Reg=%32
SU(11):   %20:intregs = A2_addi %8:intregs, 8
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(1): Data Latency=0 Reg=%8
    SU(1): Anti Latency=1
SU(12):   %82:intregs = COPY %32.isub_hi:doubleregs
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(10): Data Latency=0 Reg=%32
    SU(2): Anti Latency=1
SU(13):   %84:intregs = COPY %32.isub_hi:doubleregs
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(10): Data Latency=0 Reg=%32
    SU(3): Anti Latency=1
SU(14):   %86:intregs = COPY %32.isub_lo:doubleregs
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(10): Data Latency=0 Reg=%32
    SU(4): Anti Latency=1
SU(15):   %88:intregs = COPY %32.isub_lo:doubleregs
  # preds left       : 2
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 1
  Height             : 0
  Predecessors:
    SU(10): Data Latency=0 Reg=%32
    SU(5): Anti Latency=1
ExitSU:   ENDLOOP0 %bb.2, implicit-def $pc, implicit-def $lc0, implicit $sa0, implicit $lc0
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
calculateResMII:
Trying to reserve resource for 1 cycles for 
  S2_storerh_io %8:intregs, 0, %75:intregs :: (store (s16) into %ir.add.ptr11.phi)
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  S2_storerh_io %8:intregs, 4, %67:intregs :: (store (s16) into %ir.cgep8)
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  S2_storerf_io %8:intregs, 2, %70:intregs :: (store (s16) into %ir.cgep7)
ReservedCycles:0, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  S2_storerf_io %8:intregs, 6, %63:intregs :: (store (s16) into %ir.cgep9)
ReservedCycles:0, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %20:intregs = A2_addi %8:intregs, 8
ReservedCycles:1, NumCycles:1
Return Res MII:3
MII = 3 MAX_II = 13 (rec=2, res=3)
SU(1):   %8:intregs = PHI %5:intregs, %bb.1, %20:intregs, %bb.2
SU(11):   %20:intregs = A2_addi %8:intregs, 8
SU(2):   %63:intregs = PHI %81:intregs, %bb.1, %82:intregs, %bb.2
SU(9):   S2_storerf_io %8:intregs, 6, %63:intregs :: (store (s16) into %ir.cgep9)
SU(3):   %67:intregs = PHI %83:intregs, %bb.1, %84:intregs, %bb.2
SU(8):   S2_storerh_io %8:intregs, 4, %67:intregs :: (store (s16) into %ir.cgep8)
SU(4):   %70:intregs = PHI %85:intregs, %bb.1, %86:intregs, %bb.2
SU(7):   S2_storerf_io %8:intregs, 2, %70:intregs :: (store (s16) into %ir.cgep7)
SU(5):   %75:intregs = PHI %87:intregs, %bb.1, %88:intregs, %bb.2
SU(6):   S2_storerh_io %8:intregs, 0, %75:intregs :: (store (s16) into %ir.add.ptr11.phi)
SU(0):   %7:intregs = PHI %6:intregs, %bb.1, %19:intregs, %bb.2
SU(10):   %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)
SU(12):   %82:intregs = COPY %32.isub_hi:doubleregs
SU(13):   %84:intregs = COPY %32.isub_hi:doubleregs
SU(14):   %86:intregs = COPY %32.isub_lo:doubleregs
SU(15):   %88:intregs = COPY %32.isub_lo:doubleregs
	Node 0:
	   ASAP = 0
	   ALAP = 1
	   MOV  = 1
	   D    = 0
	   H    = 1
	   ZLD  = 0
	   ZLH  = 2
	Node 1:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 1
	   ZLD  = 0
	   ZLH  = 3
	Node 2:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 1
	   ZLD  = 0
	   ZLH  = 3
	Node 3:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 1
	   ZLD  = 0
	   ZLH  = 3
	Node 4:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 1
	   ZLD  = 0
	   ZLH  = 3
	Node 5:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 1
	   ZLD  = 0
	   ZLH  = 3
	Node 6:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 1
	   ZLD  = 1
	   ZLH  = 2
	Node 7:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 1
	   ZLD  = 1
	   ZLH  = 2
	Node 8:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 1
	   ZLD  = 1
	   ZLH  = 2
	Node 9:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 1
	   ZLD  = 1
	   ZLH  = 2
	Node 10:
	   ASAP = 1
	   ALAP = 1
	   MOV  = 0
	   D    = 1
	   H    = 0
	   ZLD  = 2
	   ZLH  = 1
	Node 11:
	   ASAP = 0
	   ALAP = 1
	   MOV  = 1
	   D    = 1
	   H    = 0
	   ZLD  = 1
	   ZLH  = 0
	Node 12:
	   ASAP = 1
	   ALAP = 1
	   MOV  = 0
	   D    = 1
	   H    = 0
	   ZLD  = 3
	   ZLH  = 0
	Node 13:
	   ASAP = 1
	   ALAP = 1
	   MOV  = 0
	   D    = 1
	   H    = 0
	   ZLD  = 3
	   ZLH  = 0
	Node 14:
	   ASAP = 1
	   ALAP = 1
	   MOV  = 0
	   D    = 1
	   H    = 0
	   ZLD  = 3
	   ZLH  = 0
	Node 15:
	   ASAP = 1
	   ALAP = 1
	   MOV  = 0
	   D    = 1
	   H    = 0
	   ZLD  = 3
	   ZLH  = 0
  Rec NodeSet Num nodes 2 rec 1 mov 1 depth 1 col 0
   SU(0) %7:intregs = PHI %6:intregs, %bb.1, %19:intregs, %bb.2
   SU(10) %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)

  Rec NodeSet Num nodes 2 rec 1 mov 1 depth 1 col 0
   SU(1) %8:intregs = PHI %5:intregs, %bb.1, %20:intregs, %bb.2
   SU(11) %20:intregs = A2_addi %8:intregs, 8

  Rec NodeSet Num nodes 4 rec 2 mov 0 depth 1 col 0
   SU(2) %63:intregs = PHI %81:intregs, %bb.1, %82:intregs, %bb.2
   SU(9) S2_storerf_io %8:intregs, 6, %63:intregs :: (store (s16) into %ir.cgep9)
   SU(10) %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)
   SU(12) %82:intregs = COPY %32.isub_hi:doubleregs

  Rec NodeSet Num nodes 4 rec 2 mov 0 depth 1 col 0
   SU(3) %67:intregs = PHI %83:intregs, %bb.1, %84:intregs, %bb.2
   SU(8) S2_storerh_io %8:intregs, 4, %67:intregs :: (store (s16) into %ir.cgep8)
   SU(10) %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)
   SU(13) %84:intregs = COPY %32.isub_hi:doubleregs

  Rec NodeSet Num nodes 4 rec 2 mov 0 depth 1 col 0
   SU(4) %70:intregs = PHI %85:intregs, %bb.1, %86:intregs, %bb.2
   SU(7) S2_storerf_io %8:intregs, 2, %70:intregs :: (store (s16) into %ir.cgep7)
   SU(10) %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)
   SU(14) %86:intregs = COPY %32.isub_lo:doubleregs

  Rec NodeSet Num nodes 4 rec 2 mov 0 depth 1 col 0
   SU(5) %75:intregs = PHI %87:intregs, %bb.1, %88:intregs, %bb.2
   SU(6) S2_storerh_io %8:intregs, 0, %75:intregs :: (store (s16) into %ir.add.ptr11.phi)
   SU(10) %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)
   SU(15) %88:intregs = COPY %32.isub_lo:doubleregs

  NodeSet Num nodes 4 rec 2 mov 0 depth 1 col 0
   SU(2) %63:intregs = PHI %81:intregs, %bb.1, %82:intregs, %bb.2
   SU(9) S2_storerf_io %8:intregs, 6, %63:intregs :: (store (s16) into %ir.cgep9)
   SU(10) %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)
   SU(12) %82:intregs = COPY %32.isub_hi:doubleregs

  NodeSet Num nodes 3 rec 2 mov 0 depth 1 col 0
   SU(3) %67:intregs = PHI %83:intregs, %bb.1, %84:intregs, %bb.2
   SU(8) S2_storerh_io %8:intregs, 4, %67:intregs :: (store (s16) into %ir.cgep8)
   SU(13) %84:intregs = COPY %32.isub_hi:doubleregs

  NodeSet Num nodes 3 rec 2 mov 0 depth 1 col 0
   SU(4) %70:intregs = PHI %85:intregs, %bb.1, %86:intregs, %bb.2
   SU(7) S2_storerf_io %8:intregs, 2, %70:intregs :: (store (s16) into %ir.cgep7)
   SU(14) %86:intregs = COPY %32.isub_lo:doubleregs

  NodeSet Num nodes 3 rec 2 mov 0 depth 1 col 0
   SU(5) %75:intregs = PHI %87:intregs, %bb.1, %88:intregs, %bb.2
   SU(6) S2_storerh_io %8:intregs, 0, %75:intregs :: (store (s16) into %ir.add.ptr11.phi)
   SU(15) %88:intregs = COPY %32.isub_lo:doubleregs

  NodeSet Num nodes 1 rec 1 mov 1 depth 1 col 0
   SU(0) %7:intregs = PHI %6:intregs, %bb.1, %19:intregs, %bb.2

  NodeSet Num nodes 2 rec 1 mov 1 depth 1 col 0
   SU(1) %8:intregs = PHI %5:intregs, %bb.1, %20:intregs, %bb.2
   SU(11) %20:intregs = A2_addi %8:intregs, 8

NodeSet size 4
  Bottom up (default) 12 10 9 2 
   Switching order to top down 
Done with Nodeset
NodeSet size 3
  Top down (intersect) 13 3 8 
   Switching order to bottom up 
Done with Nodeset
NodeSet size 3
  Top down (intersect) 14 4 7 
   Switching order to bottom up 
Done with Nodeset
NodeSet size 3
  Top down (intersect) 15 5 6 
   Switching order to bottom up 
Done with Nodeset
NodeSet size 1
  Top down (succs) 0 
   Switching order to bottom up 
Done with Nodeset
NodeSet size 2
  Bottom up (preds) 1 11 
   Switching order to top down 
Done with Nodeset
Node order:  12  10  9  2  13  3  8  14  4  7  15  5  6  0  1  11 
Try to schedule with 3

Inst (12)   %82:intregs = COPY %32.isub_hi:doubleregs

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 1 and 3 II: 3
	insert at cycle 1   %82:intregs = COPY %32.isub_hi:doubleregs

Inst (10)   %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)

	es: 80000000 ls:        1 me: 7fffffff ms: 80000000
Trying to insert node between 1 and -1 II: 3
	insert at cycle 1   %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)

Inst (9)   S2_storerf_io %8:intregs, 6, %63:intregs :: (store (s16) into %ir.cgep9)

	es: 80000000 ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between 0 and -2 II: 3
	insert at cycle 0   S2_storerf_io %8:intregs, 6, %63:intregs :: (store (s16) into %ir.cgep9)

Inst (2)   %63:intregs = PHI %81:intregs, %bb.1, %82:intregs, %bb.2

	es: ffffffff ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between 0 and -1 II: 3
	insert at cycle -1   %63:intregs = PHI %81:intregs, %bb.1, %82:intregs, %bb.2

Inst (13)   %84:intregs = COPY %32.isub_hi:doubleregs

	es:        1 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 1 and 3 II: 3
	insert at cycle 2   %84:intregs = COPY %32.isub_hi:doubleregs

Inst (3)   %67:intregs = PHI %83:intregs, %bb.1, %84:intregs, %bb.2

	es:        0 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 0 and 2 II: 3
	insert at cycle 2   %67:intregs = PHI %83:intregs, %bb.1, %84:intregs, %bb.2

Inst (8)   S2_storerh_io %8:intregs, 4, %67:intregs :: (store (s16) into %ir.cgep8)

	es:        2 ls:        0 me: 7fffffff ms: 80000000
	Can't schedule
Try to schedule with 4

Inst (12)   %82:intregs = COPY %32.isub_hi:doubleregs

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 1 and 4 II: 4
	insert at cycle 1   %82:intregs = COPY %32.isub_hi:doubleregs

Inst (10)   %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)

	es: 80000000 ls:        1 me: 7fffffff ms: 80000000
Trying to insert node between 1 and -2 II: 4
	insert at cycle 1   %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)

Inst (9)   S2_storerf_io %8:intregs, 6, %63:intregs :: (store (s16) into %ir.cgep9)

	es: 80000000 ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between 0 and -3 II: 4
	insert at cycle 0   S2_storerf_io %8:intregs, 6, %63:intregs :: (store (s16) into %ir.cgep9)

Inst (2)   %63:intregs = PHI %81:intregs, %bb.1, %82:intregs, %bb.2

	es: fffffffe ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between 0 and -2 II: 4
	insert at cycle -1   %63:intregs = PHI %81:intregs, %bb.1, %82:intregs, %bb.2

Inst (13)   %84:intregs = COPY %32.isub_hi:doubleregs

	es:        1 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 1 and 4 II: 4
	insert at cycle 2   %84:intregs = COPY %32.isub_hi:doubleregs

Inst (3)   %67:intregs = PHI %83:intregs, %bb.1, %84:intregs, %bb.2

	es: ffffffff ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -1 and 2 II: 4
	insert at cycle -1   %67:intregs = PHI %83:intregs, %bb.1, %84:intregs, %bb.2

Inst (8)   S2_storerh_io %8:intregs, 4, %67:intregs :: (store (s16) into %ir.cgep8)

	es: ffffffff ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between -1 and 0 II: 4
	insert at cycle -1   S2_storerh_io %8:intregs, 4, %67:intregs :: (store (s16) into %ir.cgep8)

Inst (14)   %86:intregs = COPY %32.isub_lo:doubleregs

	es:        1 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 1 and 4 II: 4
	insert at cycle 2   %86:intregs = COPY %32.isub_lo:doubleregs

Inst (4)   %70:intregs = PHI %85:intregs, %bb.1, %86:intregs, %bb.2

	es: ffffffff ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -1 and 2 II: 4
	insert at cycle 2   %70:intregs = PHI %85:intregs, %bb.1, %86:intregs, %bb.2

Inst (7)   S2_storerf_io %8:intregs, 2, %70:intregs :: (store (s16) into %ir.cgep7)

	es:        2 ls:        0 me: 7fffffff ms: 80000000
	Can't schedule
Try to schedule with 5

Inst (12)   %82:intregs = COPY %32.isub_hi:doubleregs

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 1 and 5 II: 5
	insert at cycle 1   %82:intregs = COPY %32.isub_hi:doubleregs

Inst (10)   %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)

	es: 80000000 ls:        1 me: 7fffffff ms: 80000000
Trying to insert node between 1 and -3 II: 5
	insert at cycle 1   %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)

Inst (9)   S2_storerf_io %8:intregs, 6, %63:intregs :: (store (s16) into %ir.cgep9)

	es: 80000000 ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between 0 and -4 II: 5
	insert at cycle 0   S2_storerf_io %8:intregs, 6, %63:intregs :: (store (s16) into %ir.cgep9)

Inst (2)   %63:intregs = PHI %81:intregs, %bb.1, %82:intregs, %bb.2

	es: fffffffd ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between 0 and -3 II: 5
	insert at cycle -1   %63:intregs = PHI %81:intregs, %bb.1, %82:intregs, %bb.2

Inst (13)   %84:intregs = COPY %32.isub_hi:doubleregs

	es:        1 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 1 and 5 II: 5
	insert at cycle 2   %84:intregs = COPY %32.isub_hi:doubleregs

Inst (3)   %67:intregs = PHI %83:intregs, %bb.1, %84:intregs, %bb.2

	es: fffffffe ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -2 and 2 II: 5
	insert at cycle -2   %67:intregs = PHI %83:intregs, %bb.1, %84:intregs, %bb.2

Inst (8)   S2_storerh_io %8:intregs, 4, %67:intregs :: (store (s16) into %ir.cgep8)

	es: fffffffe ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between -2 and 0 II: 5
	insert at cycle -2   S2_storerh_io %8:intregs, 4, %67:intregs :: (store (s16) into %ir.cgep8)

Inst (14)   %86:intregs = COPY %32.isub_lo:doubleregs

	es:        1 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 1 and 5 II: 5
	insert at cycle 2   %86:intregs = COPY %32.isub_lo:doubleregs

Inst (4)   %70:intregs = PHI %85:intregs, %bb.1, %86:intregs, %bb.2

	es: fffffffe ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -2 and 2 II: 5
	insert at cycle -1   %70:intregs = PHI %85:intregs, %bb.1, %86:intregs, %bb.2

Inst (7)   S2_storerf_io %8:intregs, 2, %70:intregs :: (store (s16) into %ir.cgep7)

	es: ffffffff ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between -1 and 0 II: 5
	insert at cycle -1   S2_storerf_io %8:intregs, 2, %70:intregs :: (store (s16) into %ir.cgep7)

Inst (15)   %88:intregs = COPY %32.isub_lo:doubleregs

	es:        1 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 1 and 5 II: 5
	insert at cycle 2   %88:intregs = COPY %32.isub_lo:doubleregs

Inst (5)   %75:intregs = PHI %87:intregs, %bb.1, %88:intregs, %bb.2

	es: fffffffe ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -2 and 2 II: 5
	insert at cycle 2   %75:intregs = PHI %87:intregs, %bb.1, %88:intregs, %bb.2

Inst (6)   S2_storerh_io %8:intregs, 0, %75:intregs :: (store (s16) into %ir.add.ptr11.phi)

	es:        2 ls:        0 me: 7fffffff ms: 80000000
	Can't schedule
Try to schedule with 6

Inst (12)   %82:intregs = COPY %32.isub_hi:doubleregs

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 1 and 6 II: 6
	insert at cycle 1   %82:intregs = COPY %32.isub_hi:doubleregs

Inst (10)   %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)

	es: 80000000 ls:        1 me: 7fffffff ms: 80000000
Trying to insert node between 1 and -4 II: 6
	insert at cycle 1   %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)

Inst (9)   S2_storerf_io %8:intregs, 6, %63:intregs :: (store (s16) into %ir.cgep9)

	es: 80000000 ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between 0 and -5 II: 6
	insert at cycle 0   S2_storerf_io %8:intregs, 6, %63:intregs :: (store (s16) into %ir.cgep9)

Inst (2)   %63:intregs = PHI %81:intregs, %bb.1, %82:intregs, %bb.2

	es: fffffffc ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between 0 and -4 II: 6
	insert at cycle -1   %63:intregs = PHI %81:intregs, %bb.1, %82:intregs, %bb.2

Inst (13)   %84:intregs = COPY %32.isub_hi:doubleregs

	es:        1 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 1 and 6 II: 6
	insert at cycle 2   %84:intregs = COPY %32.isub_hi:doubleregs

Inst (3)   %67:intregs = PHI %83:intregs, %bb.1, %84:intregs, %bb.2

	es: fffffffd ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -3 and 2 II: 6
	insert at cycle -3   %67:intregs = PHI %83:intregs, %bb.1, %84:intregs, %bb.2

Inst (8)   S2_storerh_io %8:intregs, 4, %67:intregs :: (store (s16) into %ir.cgep8)

	es: fffffffd ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between -3 and 0 II: 6
	insert at cycle -3   S2_storerh_io %8:intregs, 4, %67:intregs :: (store (s16) into %ir.cgep8)

Inst (14)   %86:intregs = COPY %32.isub_lo:doubleregs

	es:        1 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 1 and 6 II: 6
	insert at cycle 2   %86:intregs = COPY %32.isub_lo:doubleregs

Inst (4)   %70:intregs = PHI %85:intregs, %bb.1, %86:intregs, %bb.2

	es: fffffffd ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -3 and 2 II: 6
	insert at cycle -2   %70:intregs = PHI %85:intregs, %bb.1, %86:intregs, %bb.2

Inst (7)   S2_storerf_io %8:intregs, 2, %70:intregs :: (store (s16) into %ir.cgep7)

	es: fffffffe ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between -2 and 0 II: 6
	insert at cycle -2   S2_storerf_io %8:intregs, 2, %70:intregs :: (store (s16) into %ir.cgep7)

Inst (15)   %88:intregs = COPY %32.isub_lo:doubleregs

	es:        1 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 1 and 6 II: 6
	insert at cycle 2   %88:intregs = COPY %32.isub_lo:doubleregs

Inst (5)   %75:intregs = PHI %87:intregs, %bb.1, %88:intregs, %bb.2

	es: fffffffd ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -3 and 2 II: 6
	insert at cycle -1   %75:intregs = PHI %87:intregs, %bb.1, %88:intregs, %bb.2

Inst (6)   S2_storerh_io %8:intregs, 0, %75:intregs :: (store (s16) into %ir.add.ptr11.phi)

	es: ffffffff ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between -1 and 0 II: 6
	insert at cycle -1   S2_storerh_io %8:intregs, 0, %75:intregs :: (store (s16) into %ir.add.ptr11.phi)

Inst (0)   %7:intregs = PHI %6:intregs, %bb.1, %19:intregs, %bb.2

	es: fffffffc ls:        1 me: 7fffffff ms: 80000000
Trying to insert node between 1 and -4 II: 6
	insert at cycle -4   %7:intregs = PHI %6:intregs, %bb.1, %19:intregs, %bb.2

Inst (1)   %8:intregs = PHI %5:intregs, %bb.1, %20:intregs, %bb.2

	es: 80000000 ls: fffffffd me: 7fffffff ms: 80000000
Trying to insert node between -3 and -8 II: 6
	insert at cycle -4   %8:intregs = PHI %5:intregs, %bb.1, %20:intregs, %bb.2

Inst (11)   %20:intregs = A2_addi %8:intregs, 8

	es: fffffffc ls:        1 me: 7fffffff ms: 80000000
Trying to insert node between -4 and 1 II: 6
	insert at cycle -4   %20:intregs = A2_addi %8:intregs, 8
Schedule Found? 1 (II=6)
cycle -4 (0) (0) %7:intregs = PHI %6:intregs, %bb.1, %19:intregs, %bb.2

cycle -4 (0) (1) %8:intregs = PHI %5:intregs, %bb.1, %20:intregs, %bb.2

cycle -4 (1) (13) %84:intregs = COPY %32.isub_hi:doubleregs

cycle -4 (1) (14) %86:intregs = COPY %32.isub_lo:doubleregs

cycle -4 (1) (15) %88:intregs = COPY %32.isub_lo:doubleregs

cycle -4 (0) (11) %20:intregs = A2_addi %8:intregs, 8

cycle -3 (0) (3) %67:intregs = PHI %83:intregs, %bb.1, %84:intregs, %bb.2

cycle -3 (0) (8) S2_storerh_io %8:intregs, 4, %67:intregs :: (store (s16) into %ir.cgep8)

cycle -2 (0) (4) %70:intregs = PHI %85:intregs, %bb.1, %86:intregs, %bb.2

cycle -2 (0) (7) S2_storerf_io %8:intregs, 2, %70:intregs :: (store (s16) into %ir.cgep7)

cycle -1 (0) (2) %63:intregs = PHI %81:intregs, %bb.1, %82:intregs, %bb.2

cycle -1 (0) (5) %75:intregs = PHI %87:intregs, %bb.1, %88:intregs, %bb.2

cycle -1 (0) (6) S2_storerh_io %8:intregs, 0, %75:intregs :: (store (s16) into %ir.add.ptr11.phi)

cycle 0 (0) (9) S2_storerf_io %8:intregs, 6, %63:intregs :: (store (s16) into %ir.cgep9)

cycle 1 (0) (10) %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)

cycle 1 (0) (12) %82:intregs = COPY %32.isub_hi:doubleregs

[stage 0 @-4c] %7:intregs = PHI %6:intregs, %bb.1, %19:intregs, %bb.2
[stage 0 @-4c] %8:intregs = PHI %5:intregs, %bb.1, %20:intregs, %bb.2
[stage 1 @-4c] %84:intregs = COPY %32.isub_hi:doubleregs
[stage 1 @-4c] %86:intregs = COPY %32.isub_lo:doubleregs
[stage 1 @-4c] %88:intregs = COPY %32.isub_lo:doubleregs
[stage 0 @-4c] %20:intregs = A2_addi %8:intregs, 8
[stage 0 @-3c] %67:intregs = PHI %83:intregs, %bb.1, %84:intregs, %bb.2
[stage 0 @-3c] S2_storerh_io %8:intregs, 4, %67:intregs :: (store (s16) into %ir.cgep8)
[stage 0 @-2c] %70:intregs = PHI %85:intregs, %bb.1, %86:intregs, %bb.2
[stage 0 @-2c] S2_storerf_io %8:intregs, 2, %70:intregs :: (store (s16) into %ir.cgep7)
[stage 0 @-1c] %63:intregs = PHI %81:intregs, %bb.1, %82:intregs, %bb.2
[stage 0 @-1c] %75:intregs = PHI %87:intregs, %bb.1, %88:intregs, %bb.2
[stage 0 @-1c] S2_storerh_io %8:intregs, 0, %75:intregs :: (store (s16) into %ir.add.ptr11.phi)
[stage 0 @0c] S2_storerf_io %8:intregs, 6, %63:intregs :: (store (s16) into %ir.cgep9)
[stage 0 @1c] %32:doubleregs, %19:intregs = L2_loadrd_pi %7:intregs(tied-def 1), 8 :: (load (s64) from %ir.lsr.iv)
[stage 0 @1c] %82:intregs = COPY %32.isub_hi:doubleregs
Dynamic: TC > 1
	.text
	.file	"<stdin>"
	.globl	foo                             // -- Begin function foo
	.p2align	4
	.type	foo,@function
foo:                                    // @foo
// %bb.0:                               // %entry
	{
		p0 = cmp.eq(r1,#0); if (p0.new) jump:nt .LBB0_3
	}
// %bb.1:                               // %for.body.preheader
	{
		r3 = addasl(r3,r2,#1)
		r2 = add(r1,#-1)
		p0 = cmp.gtu(r1,#1)
		r5:4 = memd(r0++#8)
	}
	{
		loop0(.LBB0_2,r2)
		r1 = add(r3,#8)
	}
	{
		memh(r3+#4) = r5
		memh(r3+#2) = r4.h
	}
	{
		memh(r3+#0) = r4
		memh(r3+#6) = r5.h
	}
	{
		if (!p0) jumpr:nt r31
		r3:2 = memd(r0++#8)
	}
	.p2align	4
.Ltmp0:                                 // Block address taken
.LBB0_2:                                // %for.body
                                        // =>This Inner Loop Header: Depth=1
	{
		memh(r1+#4) = r3
		memh(r1+#2) = r2.h
	}
	{
		r1 = add(r1,#8)
		memh(r1+#0) = r2
		memh(r1+#6) = r3.h
	}
	{
		nop
		r3:2 = memd(r0++#8)
	} :endloop0
.LBB0_3:                                // %for.end
	{
		jumpr r31
	}
.Lfunc_end0:
	.size	foo, .Lfunc_end0-foo
                                        // -- End function
	.section	".note.GNU-stack","",@progbits
