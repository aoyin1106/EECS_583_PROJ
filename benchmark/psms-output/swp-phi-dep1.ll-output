SU(0):   %22:intregs = PHI %9:intregs, %bb.3, %40:intregs, %bb.4
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 12
  Successors:
    SU(11): Data Latency=0 Reg=%22
    SU(11): Anti Latency=1
SU(1):   %23:intregs = PHI %10:intregs, %bb.3, %39:intregs, %bb.4
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 11
  Successors:
    SU(12): Data Latency=0 Reg=%23
    SU(12): Anti Latency=1
SU(2):   %24:intregs = PHI %11:intregs, %bb.3, %38:intregs, %bb.4
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 1
  Successors:
    SU(28): Data Latency=0 Reg=%24
    SU(28): Anti Latency=1
SU(3):   %25:intregs = PHI %12:intregs, %bb.3, %37:intregs, %bb.4
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 13
  Successors:
    SU(10): Data Latency=0 Reg=%25
    SU(10): Anti Latency=1
SU(4):   %27:intregs = PHI %16:intregs, %bb.3, %33:intregs, %bb.4
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 13
  Successors:
    SU(13): Data Latency=0 Reg=%27
    SU(5): Data Latency=0 Reg=%27
    SU(10): Anti Latency=1
SU(5):   %28:intregs = PHI %17:intregs, %bb.3, %27:intregs, %bb.4
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 10
  Predecessors:
    SU(4): Data Latency=0 Reg=%27
  Successors:
    SU(19): Data Latency=0 Reg=%28
    SU(14): Data Latency=0 Reg=%28
SU(6):   %29:intregs = PHI %18:intregs, %bb.3, %35:intregs, %bb.4
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 11
  Successors:
    SU(13): Data Latency=0 Reg=%29
    SU(7): Data Latency=0 Reg=%29
    SU(12): Anti Latency=1
SU(7):   %30:intregs = PHI %19:intregs, %bb.3, %29:intregs, %bb.4
  # preds left       : 1
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 9
  Predecessors:
    SU(6): Data Latency=0 Reg=%29
  Successors:
    SU(20): Data Latency=0 Reg=%30
    SU(15): Data Latency=0 Reg=%30
SU(8):   %31:intregs = PHI %20:intregs, %bb.3, %34:intregs, %bb.4
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 12
  Successors:
    SU(9): Data Latency=0 Reg=%31
    SU(11): Anti Latency=1
SU(9):   %32:intregs = PHI %21:intregs, %bb.3, %31:intregs, %bb.4
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 9
  Predecessors:
    SU(8): Data Latency=0 Reg=%31
  Successors:
    SU(18): Data Latency=0 Reg=%32
SU(10):   %33:intregs, %37:intregs = L2_loadrub_pi %25:intregs(tied-def 1), 1 :: (load (s8) from %ir.v35, !tbaa !0)
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 12
  Predecessors:
    SU(3): Data Latency=0 Reg=%25
    SU(4): Anti Latency=1
    SU(3): Anti Latency=1
  Successors:
    SU(19): Data Latency=2 Reg=%33
    SU(14): Data Latency=2 Reg=%33
SU(11):   %34:intregs, %40:intregs = L2_loadrub_pi %22:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv9, !tbaa !0)
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 11
  Predecessors:
    SU(0): Data Latency=0 Reg=%22
    SU(8): Anti Latency=1
    SU(0): Anti Latency=1
  Successors:
    SU(18): Data Latency=2 Reg=%34
SU(12):   %35:intregs, %39:intregs = L2_loadrub_pi %23:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv3, !tbaa !0)
  # preds left       : 3
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 10
  Predecessors:
    SU(1): Data Latency=0 Reg=%23
    SU(6): Anti Latency=1
    SU(1): Anti Latency=1
  Successors:
    SU(22): Data Latency=2 Reg=%35
    SU(16): Data Latency=2 Reg=%35
SU(13):   %69:intregs = A2_sub %27:intregs, %29:intregs
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 8
  Predecessors:
    SU(6): Data Latency=0 Reg=%29
    SU(4): Data Latency=0 Reg=%27
  Successors:
    SU(17): Data Latency=1 Reg=%69
SU(14):   %70:intregs = A2_add %33:intregs, %28:intregs
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 3
  Height             : 10
  Predecessors:
    SU(10): Data Latency=2 Reg=%33
    SU(5): Data Latency=0 Reg=%28
  Successors:
    SU(15): Data Latency=1 Reg=%70
SU(15):   %71:intregs = A2_sub %70:intregs, %30:intregs
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 9
  Predecessors:
    SU(14): Data Latency=1 Reg=%70
    SU(7): Data Latency=0 Reg=%30
  Successors:
    SU(16): Data Latency=1 Reg=%71
SU(16):   %72:intregs = A2_sub %71:intregs, %35:intregs
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 8
  Predecessors:
    SU(15): Data Latency=1 Reg=%71
    SU(12): Data Latency=2 Reg=%35
  Successors:
    SU(17): Data Latency=1 Reg=%72
SU(17):   %73:intregs = S2_addasl_rrri %72:intregs, %69:intregs, 1
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 6
  Height             : 7
  Predecessors:
    SU(16): Data Latency=1 Reg=%72
    SU(13): Data Latency=1 Reg=%69
  Successors:
    SU(23): Data Latency=2 Reg=%73
SU(18):   %75:intregs = A2_sub %32:intregs, %34:intregs
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 3
  Height             : 9
  Predecessors:
    SU(11): Data Latency=2 Reg=%34
    SU(9): Data Latency=0 Reg=%32
  Successors:
    SU(21): Data Latency=1 Reg=%75
SU(19):   %76:intregs = A2_sub %28:intregs, %33:intregs
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 3
  Height             : 10
  Predecessors:
    SU(10): Data Latency=2 Reg=%33
    SU(5): Data Latency=0 Reg=%28
  Successors:
    SU(20): Data Latency=1 Reg=%76
SU(20):   %77:intregs = A2_add %76:intregs, %30:intregs
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 9
  Predecessors:
    SU(19): Data Latency=1 Reg=%76
    SU(7): Data Latency=0 Reg=%30
  Successors:
    SU(21): Data Latency=1 Reg=%77
SU(21):   %78:intregs = S2_addasl_rrri %77:intregs, %75:intregs, 1
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 8
  Predecessors:
    SU(20): Data Latency=1 Reg=%77
    SU(18): Data Latency=1 Reg=%75
  Successors:
    SU(22): Data Latency=2 Reg=%78
SU(22):   %79:intregs = A2_sub %78:intregs, %35:intregs
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 7
  Height             : 6
  Predecessors:
    SU(21): Data Latency=2 Reg=%78
    SU(12): Data Latency=2 Reg=%35
  Successors:
    SU(24): Data Latency=1 Reg=%79
SU(23):   %80:intregs = A2_abs %73:intregs
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 5
  Predecessors:
    SU(17): Data Latency=2 Reg=%73
  Successors:
    SU(25): Data Latency=2 Reg=%80
SU(24):   %81:intregs = A2_abs %79:intregs
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 8
  Height             : 5
  Predecessors:
    SU(22): Data Latency=1 Reg=%79
  Successors:
    SU(25): Data Latency=2 Reg=%81
SU(25):   %82:intregs = A2_add %80:intregs, %81:intregs
  # preds left       : 2
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 1
  Depth              : 10
  Height             : 3
  Predecessors:
    SU(24): Data Latency=2 Reg=%81
    SU(23): Data Latency=2 Reg=%80
  Successors:
    SU(27): Data Latency=1 Reg=%82
    SU(26): Data Latency=2 Reg=%82
SU(26):   %83:predregs = C2_cmpgtui %82:intregs, 255
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 12
  Height             : 1
  Predecessors:
    SU(25): Data Latency=2 Reg=%82
  Successors:
    SU(27): Data Latency=1 Reg=%83
SU(27):   %84:intregs = C2_muxri %83:predregs, -1, %82:intregs
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 13
  Height             : 0
  Predecessors:
    SU(26): Data Latency=1 Reg=%83
    SU(25): Data Latency=1 Reg=%82
  Successors:
    SU(28): Data Latency=0 Reg=%84
SU(28):   %38:intregs = S2_storerb_pi %24:intregs(tied-def 0), 1, %84:intregs :: (store (s8) into %ir.v34, !tbaa !0)
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 13
  Height             : 0
  Predecessors:
    SU(27): Data Latency=0 Reg=%84
    SU(2): Data Latency=0 Reg=%24
    SU(2): Anti Latency=1
ExitSU:   ENDLOOP0 %bb.4, implicit-def $pc, implicit-def $lc0, implicit $sa0, implicit $lc0
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
calculateResMII:
Trying to reserve resource for 1 cycles for 
  %33:intregs, %37:intregs = L2_loadrub_pi %25:intregs(tied-def 1), 1 :: (load (s8) from %ir.v35, !tbaa !0)
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %35:intregs, %39:intregs = L2_loadrub_pi %23:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv3, !tbaa !0)
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %80:intregs = A2_abs %73:intregs
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %81:intregs = A2_abs %79:intregs
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %78:intregs = S2_addasl_rrri %77:intregs, %75:intregs, 1
ReservedCycles:0, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %34:intregs, %40:intregs = L2_loadrub_pi %22:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv9, !tbaa !0)
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %73:intregs = S2_addasl_rrri %72:intregs, %69:intregs, 1
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %38:intregs = S2_storerb_pi %24:intregs(tied-def 0), 1, %84:intregs :: (store (s8) into %ir.v34, !tbaa !0)
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %75:intregs = A2_sub %32:intregs, %34:intregs
ReservedCycles:0, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %84:intregs = C2_muxri %83:predregs, -1, %82:intregs
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %71:intregs = A2_sub %70:intregs, %30:intregs
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %83:predregs = C2_cmpgtui %82:intregs, 255
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %76:intregs = A2_sub %28:intregs, %33:intregs
ReservedCycles:0, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %72:intregs = A2_sub %71:intregs, %35:intregs
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %79:intregs = A2_sub %78:intregs, %35:intregs
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %69:intregs = A2_sub %27:intregs, %29:intregs
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %77:intregs = A2_add %76:intregs, %30:intregs
ReservedCycles:0, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %70:intregs = A2_add %33:intregs, %28:intregs
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %82:intregs = A2_add %80:intregs, %81:intregs
ReservedCycles:1, NumCycles:1
Return Res MII:5
MII = 5 MAX_II = 15 (rec=1, res=5)
SU(4):   %27:intregs = PHI %16:intregs, %bb.3, %33:intregs, %bb.4
SU(3):   %25:intregs = PHI %12:intregs, %bb.3, %37:intregs, %bb.4
SU(10):   %33:intregs, %37:intregs = L2_loadrub_pi %25:intregs(tied-def 1), 1 :: (load (s8) from %ir.v35, !tbaa !0)
SU(5):   %28:intregs = PHI %17:intregs, %bb.3, %27:intregs, %bb.4
SU(19):   %76:intregs = A2_sub %28:intregs, %33:intregs
SU(6):   %29:intregs = PHI %18:intregs, %bb.3, %35:intregs, %bb.4
SU(7):   %30:intregs = PHI %19:intregs, %bb.3, %29:intregs, %bb.4
SU(20):   %77:intregs = A2_add %76:intregs, %30:intregs
SU(8):   %31:intregs = PHI %20:intregs, %bb.3, %34:intregs, %bb.4
SU(0):   %22:intregs = PHI %9:intregs, %bb.3, %40:intregs, %bb.4
SU(11):   %34:intregs, %40:intregs = L2_loadrub_pi %22:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv9, !tbaa !0)
SU(9):   %32:intregs = PHI %21:intregs, %bb.3, %31:intregs, %bb.4
SU(18):   %75:intregs = A2_sub %32:intregs, %34:intregs
SU(21):   %78:intregs = S2_addasl_rrri %77:intregs, %75:intregs, 1
SU(1):   %23:intregs = PHI %10:intregs, %bb.3, %39:intregs, %bb.4
SU(12):   %35:intregs, %39:intregs = L2_loadrub_pi %23:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv3, !tbaa !0)
SU(22):   %79:intregs = A2_sub %78:intregs, %35:intregs
SU(24):   %81:intregs = A2_abs %79:intregs
SU(14):   %70:intregs = A2_add %33:intregs, %28:intregs
SU(15):   %71:intregs = A2_sub %70:intregs, %30:intregs
SU(16):   %72:intregs = A2_sub %71:intregs, %35:intregs
SU(13):   %69:intregs = A2_sub %27:intregs, %29:intregs
SU(17):   %73:intregs = S2_addasl_rrri %72:intregs, %69:intregs, 1
SU(23):   %80:intregs = A2_abs %73:intregs
SU(25):   %82:intregs = A2_add %80:intregs, %81:intregs
SU(26):   %83:predregs = C2_cmpgtui %82:intregs, 255
SU(27):   %84:intregs = C2_muxri %83:predregs, -1, %82:intregs
SU(2):   %24:intregs = PHI %11:intregs, %bb.3, %38:intregs, %bb.4
SU(28):   %38:intregs = S2_storerb_pi %24:intregs(tied-def 0), 1, %84:intregs :: (store (s8) into %ir.v34, !tbaa !0)
	Node 0:
	   ASAP = 0
	   ALAP = 1
	   MOV  = 1
	   D    = 0
	   H    = 12
	   ZLD  = 0
	   ZLH  = 1
	Node 1:
	   ASAP = 0
	   ALAP = 2
	   MOV  = 2
	   D    = 0
	   H    = 11
	   ZLD  = 0
	   ZLH  = 1
	Node 2:
	   ASAP = 0
	   ALAP = 12
	   MOV  = 12
	   D    = 0
	   H    = 1
	   ZLD  = 0
	   ZLH  = 1
	Node 3:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 13
	   ZLD  = 0
	   ZLH  = 1
	Node 4:
	   ASAP = 0
	   ALAP = 2
	   MOV  = 2
	   D    = 0
	   H    = 13
	   ZLD  = 0
	   ZLH  = 2
	Node 5:
	   ASAP = 0
	   ALAP = 2
	   MOV  = 2
	   D    = 0
	   H    = 10
	   ZLD  = 1
	   ZLH  = 1
	Node 6:
	   ASAP = 0
	   ALAP = 3
	   MOV  = 3
	   D    = 0
	   H    = 11
	   ZLD  = 0
	   ZLH  = 2
	Node 7:
	   ASAP = 0
	   ALAP = 3
	   MOV  = 3
	   D    = 0
	   H    = 9
	   ZLD  = 1
	   ZLH  = 1
	Node 8:
	   ASAP = 0
	   ALAP = 3
	   MOV  = 3
	   D    = 0
	   H    = 12
	   ZLD  = 0
	   ZLH  = 2
	Node 9:
	   ASAP = 0
	   ALAP = 3
	   MOV  = 3
	   D    = 0
	   H    = 9
	   ZLD  = 1
	   ZLH  = 1
	Node 10:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 1
	   H    = 12
	   ZLD  = 1
	   ZLH  = 0
	Node 11:
	   ASAP = 0
	   ALAP = 1
	   MOV  = 1
	   D    = 1
	   H    = 11
	   ZLD  = 1
	   ZLH  = 0
	Node 12:
	   ASAP = 0
	   ALAP = 2
	   MOV  = 2
	   D    = 1
	   H    = 10
	   ZLD  = 1
	   ZLH  = 0
	Node 13:
	   ASAP = 0
	   ALAP = 4
	   MOV  = 4
	   D    = 0
	   H    = 8
	   ZLD  = 1
	   ZLH  = 0
	Node 14:
	   ASAP = 2
	   ALAP = 2
	   MOV  = 0
	   D    = 3
	   H    = 10
	   ZLD  = 2
	   ZLH  = 0
	Node 15:
	   ASAP = 3
	   ALAP = 3
	   MOV  = 0
	   D    = 4
	   H    = 9
	   ZLD  = 2
	   ZLH  = 0
	Node 16:
	   ASAP = 4
	   ALAP = 4
	   MOV  = 0
	   D    = 5
	   H    = 8
	   ZLD  = 0
	   ZLH  = 0
	Node 17:
	   ASAP = 5
	   ALAP = 5
	   MOV  = 0
	   D    = 6
	   H    = 7
	   ZLD  = 0
	   ZLH  = 0
	Node 18:
	   ASAP = 2
	   ALAP = 3
	   MOV  = 1
	   D    = 3
	   H    = 9
	   ZLD  = 2
	   ZLH  = 0
	Node 19:
	   ASAP = 2
	   ALAP = 2
	   MOV  = 0
	   D    = 3
	   H    = 10
	   ZLD  = 2
	   ZLH  = 0
	Node 20:
	   ASAP = 3
	   ALAP = 3
	   MOV  = 0
	   D    = 4
	   H    = 9
	   ZLD  = 2
	   ZLH  = 0
	Node 21:
	   ASAP = 4
	   ALAP = 4
	   MOV  = 0
	   D    = 5
	   H    = 8
	   ZLD  = 0
	   ZLH  = 0
	Node 22:
	   ASAP = 6
	   ALAP = 6
	   MOV  = 0
	   D    = 7
	   H    = 6
	   ZLD  = 0
	   ZLH  = 0
	Node 23:
	   ASAP = 7
	   ALAP = 7
	   MOV  = 0
	   D    = 8
	   H    = 5
	   ZLD  = 0
	   ZLH  = 0
	Node 24:
	   ASAP = 7
	   ALAP = 7
	   MOV  = 0
	   D    = 8
	   H    = 5
	   ZLD  = 0
	   ZLH  = 0
	Node 25:
	   ASAP = 9
	   ALAP = 9
	   MOV  = 0
	   D    = 10
	   H    = 3
	   ZLD  = 0
	   ZLH  = 0
	Node 26:
	   ASAP = 11
	   ALAP = 11
	   MOV  = 0
	   D    = 12
	   H    = 1
	   ZLD  = 0
	   ZLH  = 0
	Node 27:
	   ASAP = 12
	   ALAP = 12
	   MOV  = 0
	   D    = 13
	   H    = 0
	   ZLD  = 0
	   ZLH  = 1
	Node 28:
	   ASAP = 12
	   ALAP = 12
	   MOV  = 0
	   D    = 13
	   H    = 0
	   ZLD  = 1
	   ZLH  = 0
  Rec NodeSet Num nodes 2 rec 1 mov 1 depth 1 col 0
   SU(0) %22:intregs = PHI %9:intregs, %bb.3, %40:intregs, %bb.4
   SU(11) %34:intregs, %40:intregs = L2_loadrub_pi %22:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv9, !tbaa !0)

  Rec NodeSet Num nodes 2 rec 1 mov 2 depth 1 col 0
   SU(1) %23:intregs = PHI %10:intregs, %bb.3, %39:intregs, %bb.4
   SU(12) %35:intregs, %39:intregs = L2_loadrub_pi %23:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv3, !tbaa !0)

  Rec NodeSet Num nodes 2 rec 1 mov 12 depth 13 col 0
   SU(2) %24:intregs = PHI %11:intregs, %bb.3, %38:intregs, %bb.4
   SU(28) %38:intregs = S2_storerb_pi %24:intregs(tied-def 0), 1, %84:intregs :: (store (s8) into %ir.v34, !tbaa !0)

  Rec NodeSet Num nodes 2 rec 1 mov 0 depth 1 col 0
   SU(3) %25:intregs = PHI %12:intregs, %bb.3, %37:intregs, %bb.4
   SU(10) %33:intregs, %37:intregs = L2_loadrub_pi %25:intregs(tied-def 1), 1 :: (load (s8) from %ir.v35, !tbaa !0)

  NodeSet Num nodes 2 rec 1 mov 0 depth 1 col 0
   SU(3) %25:intregs = PHI %12:intregs, %bb.3, %37:intregs, %bb.4
   SU(10) %33:intregs, %37:intregs = L2_loadrub_pi %25:intregs(tied-def 1), 1 :: (load (s8) from %ir.v35, !tbaa !0)

  NodeSet Num nodes 2 rec 1 mov 1 depth 1 col 0
   SU(0) %22:intregs = PHI %9:intregs, %bb.3, %40:intregs, %bb.4
   SU(11) %34:intregs, %40:intregs = L2_loadrub_pi %22:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv9, !tbaa !0)

  NodeSet Num nodes 2 rec 1 mov 2 depth 1 col 0
   SU(1) %23:intregs = PHI %10:intregs, %bb.3, %39:intregs, %bb.4
   SU(12) %35:intregs, %39:intregs = L2_loadrub_pi %23:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv3, !tbaa !0)

  NodeSet Num nodes 23 rec 1 mov 12 depth 13 col 0
   SU(2) %24:intregs = PHI %11:intregs, %bb.3, %38:intregs, %bb.4
   SU(28) %38:intregs = S2_storerb_pi %24:intregs(tied-def 0), 1, %84:intregs :: (store (s8) into %ir.v34, !tbaa !0)
   SU(27) %84:intregs = C2_muxri %83:predregs, -1, %82:intregs
   SU(26) %83:predregs = C2_cmpgtui %82:intregs, 255
   SU(25) %82:intregs = A2_add %80:intregs, %81:intregs
   SU(24) %81:intregs = A2_abs %79:intregs
   SU(22) %79:intregs = A2_sub %78:intregs, %35:intregs
   SU(21) %78:intregs = S2_addasl_rrri %77:intregs, %75:intregs, 1
   SU(20) %77:intregs = A2_add %76:intregs, %30:intregs
   SU(19) %76:intregs = A2_sub %28:intregs, %33:intregs
   SU(23) %80:intregs = A2_abs %73:intregs
   SU(17) %73:intregs = S2_addasl_rrri %72:intregs, %69:intregs, 1
   SU(16) %72:intregs = A2_sub %71:intregs, %35:intregs
   SU(15) %71:intregs = A2_sub %70:intregs, %30:intregs
   SU(14) %70:intregs = A2_add %33:intregs, %28:intregs
   SU(13) %69:intregs = A2_sub %27:intregs, %29:intregs
   SU(5) %28:intregs = PHI %17:intregs, %bb.3, %27:intregs, %bb.4
   SU(4) %27:intregs = PHI %16:intregs, %bb.3, %33:intregs, %bb.4
   SU(18) %75:intregs = A2_sub %32:intregs, %34:intregs
   SU(9) %32:intregs = PHI %21:intregs, %bb.3, %31:intregs, %bb.4
   SU(8) %31:intregs = PHI %20:intregs, %bb.3, %34:intregs, %bb.4
   SU(7) %30:intregs = PHI %19:intregs, %bb.3, %29:intregs, %bb.4
   SU(6) %29:intregs = PHI %18:intregs, %bb.3, %35:intregs, %bb.4

NodeSet size 2
  Bottom up (default) 10 3 
   Switching order to top down 
Done with Nodeset
NodeSet size 2
  Bottom up (default) 11 0 
   Switching order to top down 
Done with Nodeset
NodeSet size 2
  Bottom up (default) 12 1 
   Switching order to top down 
Done with Nodeset
NodeSet size 23
  Top down (succs) 4 8 6 5 19 14 9 7 20 15 18 16 21 13 17 22 23 24 25 26 27 28 2 
   Switching order to bottom up 
Done with Nodeset
Node order:  10  3  11  0  12  1  4  8  6  5  19  14  9  7  20  15  18  16  21  13  17  22  23  24  25  26  27  28  2 
Try to schedule with 5

Inst (10)   %33:intregs, %37:intregs = L2_loadrub_pi %25:intregs(tied-def 1), 1 :: (load (s8) from %ir.v35, !tbaa !0)

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 0 and 4 II: 5
	insert at cycle 0   %33:intregs, %37:intregs = L2_loadrub_pi %25:intregs(tied-def 1), 1 :: (load (s8) from %ir.v35, !tbaa !0)

Inst (3)   %25:intregs = PHI %12:intregs, %bb.3, %37:intregs, %bb.4

	es: fffffffc ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between 0 and -4 II: 5
	insert at cycle -1   %25:intregs = PHI %12:intregs, %bb.3, %37:intregs, %bb.4

Inst (11)   %34:intregs, %40:intregs = L2_loadrub_pi %22:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv9, !tbaa !0)

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -1 and 3 II: 5
	insert at cycle -1   %34:intregs, %40:intregs = L2_loadrub_pi %22:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv9, !tbaa !0)

Inst (0)   %22:intregs = PHI %9:intregs, %bb.3, %40:intregs, %bb.4

	es: fffffffb ls: ffffffff me: 7fffffff ms: 80000000
Trying to insert node between -1 and -5 II: 5
	insert at cycle -2   %22:intregs = PHI %9:intregs, %bb.3, %40:intregs, %bb.4

Inst (12)   %35:intregs, %39:intregs = L2_loadrub_pi %23:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv3, !tbaa !0)

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -2 and 2 II: 5
	insert at cycle -2   %35:intregs, %39:intregs = L2_loadrub_pi %23:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv3, !tbaa !0)

Inst (1)   %23:intregs = PHI %10:intregs, %bb.3, %39:intregs, %bb.4

	es: fffffffa ls: fffffffe me: 7fffffff ms: 80000000
Trying to insert node between -2 and -6 II: 5
	insert at cycle -3   %23:intregs = PHI %10:intregs, %bb.3, %39:intregs, %bb.4

Inst (4)   %27:intregs = PHI %16:intregs, %bb.3, %33:intregs, %bb.4

	es: fffffffc ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -4 and 0 II: 5
	insert at cycle -4   %27:intregs = PHI %16:intregs, %bb.3, %33:intregs, %bb.4

Inst (8)   %31:intregs = PHI %20:intregs, %bb.3, %34:intregs, %bb.4

	es: fffffffb ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -5 and -1 II: 5
	insert at cycle -4   %31:intregs = PHI %20:intregs, %bb.3, %34:intregs, %bb.4

Inst (6)   %29:intregs = PHI %18:intregs, %bb.3, %35:intregs, %bb.4

	es: fffffffa ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -6 and -2 II: 5
	insert at cycle -4   %29:intregs = PHI %18:intregs, %bb.3, %35:intregs, %bb.4

Inst (5)   %28:intregs = PHI %17:intregs, %bb.3, %27:intregs, %bb.4

	es: fffffffc ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -4 and 0 II: 5
	insert at cycle -4   %28:intregs = PHI %17:intregs, %bb.3, %27:intregs, %bb.4

Inst (19)   %76:intregs = A2_sub %28:intregs, %33:intregs

	es:        2 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 2 and 6 II: 5
	insert at cycle 2   %76:intregs = A2_sub %28:intregs, %33:intregs

Inst (14)   %70:intregs = A2_add %33:intregs, %28:intregs

	es:        2 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 2 and 6 II: 5
	insert at cycle 6   %70:intregs = A2_add %33:intregs, %28:intregs

Inst (9)   %32:intregs = PHI %21:intregs, %bb.3, %31:intregs, %bb.4

	es: fffffffc ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -4 and 0 II: 5
	insert at cycle -4   %32:intregs = PHI %21:intregs, %bb.3, %31:intregs, %bb.4

Inst (7)   %30:intregs = PHI %19:intregs, %bb.3, %29:intregs, %bb.4

	es: fffffffc ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -4 and 0 II: 5
	insert at cycle -4   %30:intregs = PHI %19:intregs, %bb.3, %29:intregs, %bb.4

Inst (20)   %77:intregs = A2_add %76:intregs, %30:intregs

	es:        3 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 3 and 7 II: 5
	insert at cycle 3   %77:intregs = A2_add %76:intregs, %30:intregs

Inst (15)   %71:intregs = A2_sub %70:intregs, %30:intregs

	es:        7 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 7 and 11 II: 5
	insert at cycle 7   %71:intregs = A2_sub %70:intregs, %30:intregs

Inst (18)   %75:intregs = A2_sub %32:intregs, %34:intregs

	es:        1 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 1 and 5 II: 5
	insert at cycle 1   %75:intregs = A2_sub %32:intregs, %34:intregs

Inst (16)   %72:intregs = A2_sub %71:intregs, %35:intregs

	es:        8 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 8 and 12 II: 5
	insert at cycle 9   %72:intregs = A2_sub %71:intregs, %35:intregs

Inst (21)   %78:intregs = S2_addasl_rrri %77:intregs, %75:intregs, 1

	es:        4 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 4 and 8 II: 5
	insert at cycle 5   %78:intregs = S2_addasl_rrri %77:intregs, %75:intregs, 1

Inst (13)   %69:intregs = A2_sub %27:intregs, %29:intregs

	es: fffffffc ls: fffffffe me: 7fffffff ms: 80000000
Trying to insert node between -4 and -2 II: 5
	insert at cycle -4   %69:intregs = A2_sub %27:intregs, %29:intregs

Inst (17)   %73:intregs = S2_addasl_rrri %72:intregs, %69:intregs, 1

	es:        a ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 10 and 14 II: 5
	insert at cycle 10   %73:intregs = S2_addasl_rrri %72:intregs, %69:intregs, 1

Inst (22)   %79:intregs = A2_sub %78:intregs, %35:intregs

	es:        7 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 7 and 11 II: 5
	insert at cycle 7   %79:intregs = A2_sub %78:intregs, %35:intregs

Inst (23)   %80:intregs = A2_abs %73:intregs

	es:        c ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 12 and 16 II: 5
	insert at cycle 13   %80:intregs = A2_abs %73:intregs

Inst (24)   %81:intregs = A2_abs %79:intregs

	es:        8 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 8 and 12 II: 5
	insert at cycle 9   %81:intregs = A2_abs %79:intregs

Inst (25)   %82:intregs = A2_add %80:intregs, %81:intregs

	es:        f ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 15 and 19 II: 5
	insert at cycle 15   %82:intregs = A2_add %80:intregs, %81:intregs

Inst (26)   %83:predregs = C2_cmpgtui %82:intregs, 255

	es:       11 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 17 and 21 II: 5
	insert at cycle 17   %83:predregs = C2_cmpgtui %82:intregs, 255
	Can't schedule
Try to schedule with 6

Inst (10)   %33:intregs, %37:intregs = L2_loadrub_pi %25:intregs(tied-def 1), 1 :: (load (s8) from %ir.v35, !tbaa !0)

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 0 and 5 II: 6
	insert at cycle 0   %33:intregs, %37:intregs = L2_loadrub_pi %25:intregs(tied-def 1), 1 :: (load (s8) from %ir.v35, !tbaa !0)

Inst (3)   %25:intregs = PHI %12:intregs, %bb.3, %37:intregs, %bb.4

	es: fffffffb ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between 0 and -5 II: 6
	insert at cycle -1   %25:intregs = PHI %12:intregs, %bb.3, %37:intregs, %bb.4

Inst (11)   %34:intregs, %40:intregs = L2_loadrub_pi %22:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv9, !tbaa !0)

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -1 and 4 II: 6
	insert at cycle -1   %34:intregs, %40:intregs = L2_loadrub_pi %22:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv9, !tbaa !0)

Inst (0)   %22:intregs = PHI %9:intregs, %bb.3, %40:intregs, %bb.4

	es: fffffffa ls: ffffffff me: 7fffffff ms: 80000000
Trying to insert node between -1 and -6 II: 6
	insert at cycle -2   %22:intregs = PHI %9:intregs, %bb.3, %40:intregs, %bb.4

Inst (12)   %35:intregs, %39:intregs = L2_loadrub_pi %23:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv3, !tbaa !0)

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -2 and 3 II: 6
	insert at cycle -2   %35:intregs, %39:intregs = L2_loadrub_pi %23:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv3, !tbaa !0)

Inst (1)   %23:intregs = PHI %10:intregs, %bb.3, %39:intregs, %bb.4

	es: fffffff9 ls: fffffffe me: 7fffffff ms: 80000000
Trying to insert node between -2 and -7 II: 6
	insert at cycle -3   %23:intregs = PHI %10:intregs, %bb.3, %39:intregs, %bb.4

Inst (4)   %27:intregs = PHI %16:intregs, %bb.3, %33:intregs, %bb.4

	es: fffffffb ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -5 and 0 II: 6
	insert at cycle -5   %27:intregs = PHI %16:intregs, %bb.3, %33:intregs, %bb.4

Inst (8)   %31:intregs = PHI %20:intregs, %bb.3, %34:intregs, %bb.4

	es: fffffffa ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -6 and -1 II: 6
	insert at cycle -5   %31:intregs = PHI %20:intregs, %bb.3, %34:intregs, %bb.4

Inst (6)   %29:intregs = PHI %18:intregs, %bb.3, %35:intregs, %bb.4

	es: fffffff9 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -7 and -2 II: 6
	insert at cycle -5   %29:intregs = PHI %18:intregs, %bb.3, %35:intregs, %bb.4

Inst (5)   %28:intregs = PHI %17:intregs, %bb.3, %27:intregs, %bb.4

	es: fffffffb ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -5 and 0 II: 6
	insert at cycle -5   %28:intregs = PHI %17:intregs, %bb.3, %27:intregs, %bb.4

Inst (19)   %76:intregs = A2_sub %28:intregs, %33:intregs

	es:        2 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 2 and 7 II: 6
	insert at cycle 2   %76:intregs = A2_sub %28:intregs, %33:intregs

Inst (14)   %70:intregs = A2_add %33:intregs, %28:intregs

	es:        2 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 2 and 7 II: 6
	insert at cycle 3   %70:intregs = A2_add %33:intregs, %28:intregs

Inst (9)   %32:intregs = PHI %21:intregs, %bb.3, %31:intregs, %bb.4

	es: fffffffb ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -5 and 0 II: 6
	insert at cycle -5   %32:intregs = PHI %21:intregs, %bb.3, %31:intregs, %bb.4

Inst (7)   %30:intregs = PHI %19:intregs, %bb.3, %29:intregs, %bb.4

	es: fffffffb ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -5 and 0 II: 6
	insert at cycle -5   %30:intregs = PHI %19:intregs, %bb.3, %29:intregs, %bb.4

Inst (20)   %77:intregs = A2_add %76:intregs, %30:intregs

	es:        3 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 3 and 8 II: 6
	insert at cycle 7   %77:intregs = A2_add %76:intregs, %30:intregs

Inst (15)   %71:intregs = A2_sub %70:intregs, %30:intregs

	es:        4 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 4 and 9 II: 6
	insert at cycle 4   %71:intregs = A2_sub %70:intregs, %30:intregs

Inst (18)   %75:intregs = A2_sub %32:intregs, %34:intregs

	es:        1 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 1 and 6 II: 6
	insert at cycle 1   %75:intregs = A2_sub %32:intregs, %34:intregs

Inst (16)   %72:intregs = A2_sub %71:intregs, %35:intregs

	es:        5 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 5 and 10 II: 6
	insert at cycle 5   %72:intregs = A2_sub %71:intregs, %35:intregs

Inst (21)   %78:intregs = S2_addasl_rrri %77:intregs, %75:intregs, 1

	es:        8 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 8 and 13 II: 6
	insert at cycle 8   %78:intregs = S2_addasl_rrri %77:intregs, %75:intregs, 1

Inst (13)   %69:intregs = A2_sub %27:intregs, %29:intregs

	es: fffffffb ls: fffffffe me: 7fffffff ms: 80000000
Trying to insert node between -5 and -2 II: 6
	insert at cycle -3   %69:intregs = A2_sub %27:intregs, %29:intregs

Inst (17)   %73:intregs = S2_addasl_rrri %72:intregs, %69:intregs, 1

	es:        6 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 6 and 11 II: 6
	insert at cycle 6   %73:intregs = S2_addasl_rrri %72:intregs, %69:intregs, 1

Inst (22)   %79:intregs = A2_sub %78:intregs, %35:intregs

	es:        a ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 10 and 15 II: 6
	insert at cycle 10   %79:intregs = A2_sub %78:intregs, %35:intregs

Inst (23)   %80:intregs = A2_abs %73:intregs

	es:        8 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 8 and 13 II: 6
	insert at cycle 8   %80:intregs = A2_abs %73:intregs

Inst (24)   %81:intregs = A2_abs %79:intregs

	es:        b ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 11 and 16 II: 6
	insert at cycle 11   %81:intregs = A2_abs %79:intregs

Inst (25)   %82:intregs = A2_add %80:intregs, %81:intregs

	es:        d ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 13 and 18 II: 6
	insert at cycle 13   %82:intregs = A2_add %80:intregs, %81:intregs

Inst (26)   %83:predregs = C2_cmpgtui %82:intregs, 255

	es:        f ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 15 and 20 II: 6
	insert at cycle 15   %83:predregs = C2_cmpgtui %82:intregs, 255

Inst (27)   %84:intregs = C2_muxri %83:predregs, -1, %82:intregs

	es:       10 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 16 and 21 II: 6
	insert at cycle 18   %84:intregs = C2_muxri %83:predregs, -1, %82:intregs

Inst (28)   %38:intregs = S2_storerb_pi %24:intregs(tied-def 0), 1, %84:intregs :: (store (s8) into %ir.v34, !tbaa !0)

	es:       12 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 18 and 23 II: 6
	insert at cycle 18   %38:intregs = S2_storerb_pi %24:intregs(tied-def 0), 1, %84:intregs :: (store (s8) into %ir.v34, !tbaa !0)

Inst (2)   %24:intregs = PHI %11:intregs, %bb.3, %38:intregs, %bb.4

	es:        d ls:       12 me: 7fffffff ms: 80000000
Trying to insert node between 18 and 13 II: 6
	insert at cycle 17   %24:intregs = PHI %11:intregs, %bb.3, %38:intregs, %bb.4
Schedule Found? 1 (II=6)
cycle -5 (0) (4) %27:intregs = PHI %16:intregs, %bb.3, %33:intregs, %bb.4

cycle -5 (0) (8) %31:intregs = PHI %20:intregs, %bb.3, %34:intregs, %bb.4

cycle -5 (0) (6) %29:intregs = PHI %18:intregs, %bb.3, %35:intregs, %bb.4

cycle -5 (0) (5) %28:intregs = PHI %17:intregs, %bb.3, %27:intregs, %bb.4

cycle -5 (0) (9) %32:intregs = PHI %21:intregs, %bb.3, %31:intregs, %bb.4

cycle -5 (0) (7) %30:intregs = PHI %19:intregs, %bb.3, %29:intregs, %bb.4

cycle -5 (3) (25) %82:intregs = A2_add %80:intregs, %81:intregs

cycle -5 (2) (20) %77:intregs = A2_add %76:intregs, %30:intregs

cycle -5 (1) (18) %75:intregs = A2_sub %32:intregs, %34:intregs

cycle -4 (2) (21) %78:intregs = S2_addasl_rrri %77:intregs, %75:intregs, 1

cycle -4 (2) (23) %80:intregs = A2_abs %73:intregs

cycle -4 (1) (19) %76:intregs = A2_sub %28:intregs, %33:intregs

cycle -3 (0) (1) %23:intregs = PHI %10:intregs, %bb.3, %39:intregs, %bb.4

cycle -3 (3) (26) %83:predregs = C2_cmpgtui %82:intregs, 255

cycle -3 (1) (14) %70:intregs = A2_add %33:intregs, %28:intregs

cycle -3 (0) (13) %69:intregs = A2_sub %27:intregs, %29:intregs

cycle -2 (0) (0) %22:intregs = PHI %9:intregs, %bb.3, %40:intregs, %bb.4

cycle -2 (2) (22) %79:intregs = A2_sub %78:intregs, %35:intregs

cycle -2 (1) (15) %71:intregs = A2_sub %70:intregs, %30:intregs

cycle -2 (0) (12) %35:intregs, %39:intregs = L2_loadrub_pi %23:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv3, !tbaa !0)

cycle -1 (3) (2) %24:intregs = PHI %11:intregs, %bb.3, %38:intregs, %bb.4

cycle -1 (0) (3) %25:intregs = PHI %12:intregs, %bb.3, %37:intregs, %bb.4

cycle -1 (2) (24) %81:intregs = A2_abs %79:intregs

cycle -1 (1) (16) %72:intregs = A2_sub %71:intregs, %35:intregs

cycle -1 (0) (11) %34:intregs, %40:intregs = L2_loadrub_pi %22:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv9, !tbaa !0)

cycle 0 (3) (27) %84:intregs = C2_muxri %83:predregs, -1, %82:intregs

cycle 0 (3) (28) %38:intregs = S2_storerb_pi %24:intregs(tied-def 0), 1, %84:intregs :: (store (s8) into %ir.v34, !tbaa !0)

cycle 0 (1) (17) %73:intregs = S2_addasl_rrri %72:intregs, %69:intregs, 1

cycle 0 (0) (10) %33:intregs, %37:intregs = L2_loadrub_pi %25:intregs(tied-def 1), 1 :: (load (s8) from %ir.v35, !tbaa !0)

[stage 0 @-5c] %27:intregs = PHI %16:intregs, %bb.3, %33:intregs, %bb.4
[stage 0 @-5c] %31:intregs = PHI %20:intregs, %bb.3, %34:intregs, %bb.4
[stage 0 @-5c] %29:intregs = PHI %18:intregs, %bb.3, %35:intregs, %bb.4
[stage 0 @-5c] %28:intregs = PHI %17:intregs, %bb.3, %27:intregs, %bb.4
[stage 0 @-5c] %32:intregs = PHI %21:intregs, %bb.3, %31:intregs, %bb.4
[stage 0 @-5c] %30:intregs = PHI %19:intregs, %bb.3, %29:intregs, %bb.4
[stage 3 @-5c] %82:intregs = A2_add %80:intregs, %81:intregs
[stage 2 @-5c] %77:intregs = A2_add %76:intregs, %30:intregs
[stage 1 @-5c] %75:intregs = A2_sub %32:intregs, %34:intregs
[stage 2 @-4c] %78:intregs = S2_addasl_rrri %77:intregs, %75:intregs, 1
[stage 2 @-4c] %80:intregs = A2_abs %73:intregs
[stage 1 @-4c] %76:intregs = A2_sub %28:intregs, %33:intregs
[stage 0 @-3c] %23:intregs = PHI %10:intregs, %bb.3, %39:intregs, %bb.4
[stage 3 @-3c] %83:predregs = C2_cmpgtui %82:intregs, 255
[stage 1 @-3c] %70:intregs = A2_add %33:intregs, %28:intregs
[stage 0 @-3c] %69:intregs = A2_sub %27:intregs, %29:intregs
[stage 0 @-2c] %22:intregs = PHI %9:intregs, %bb.3, %40:intregs, %bb.4
[stage 2 @-2c] %79:intregs = A2_sub %78:intregs, %35:intregs
[stage 1 @-2c] %71:intregs = A2_sub %70:intregs, %30:intregs
[stage 0 @-2c] %35:intregs, %39:intregs = L2_loadrub_pi %23:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv3, !tbaa !0)
[stage 3 @-1c] %24:intregs = PHI %11:intregs, %bb.3, %38:intregs, %bb.4
[stage 0 @-1c] %25:intregs = PHI %12:intregs, %bb.3, %37:intregs, %bb.4
[stage 2 @-1c] %81:intregs = A2_abs %79:intregs
[stage 1 @-1c] %72:intregs = A2_sub %71:intregs, %35:intregs
[stage 0 @-1c] %34:intregs, %40:intregs = L2_loadrub_pi %22:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv9, !tbaa !0)
[stage 3 @0c] %84:intregs = C2_muxri %83:predregs, -1, %82:intregs
[stage 3 @0c] %38:intregs = S2_storerb_pi %24:intregs(tied-def 0), 1, %84:intregs :: (store (s8) into %ir.v34, !tbaa !0)
[stage 1 @0c] %73:intregs = S2_addasl_rrri %72:intregs, %69:intregs, 1
[stage 0 @0c] %33:intregs, %37:intregs = L2_loadrub_pi %25:intregs(tied-def 1), 1 :: (load (s8) from %ir.v35, !tbaa !0)
 -- padding defaults array from 2 to 4
 -- padding defaults array from 2 to 3
 -- padding defaults array from 2 to 3
 -- padding defaults array from 2 to 3
 -- padding defaults array from 2 to 3
Dynamic: TC > 3
Dynamic: TC > 2
Dynamic: TC > 1

!!! Can not pipeline loop.
	.text
	.file	"<stdin>"
	.globl	f0                              // -- Begin function f0
	.p2align	4
	.type	f0,@function
f0:                                     // @f0
// %bb.0:                               // %b0
	{
		r2 = add(r2,#-1)
		r29 = add(r29,#-88)
	}
	{
		p0 = cmp.gtu(r2,#1)
		memd(r29+#80) = r17:16
		memd(r29+#72) = r19:18
	}                                       // 8-byte Folded Spill
	{
		memd(r29+#64) = r21:20
		memd(r29+#56) = r23:22
	}                                       // 8-byte Folded Spill
	{
		if (!p0) jump:nt .LBB0_13
		memd(r29+#48) = r25:24
		memd(r29+#40) = r27:26
	}                                       // 8-byte Folded Spill
// %bb.1:                               // %b1
	{
		r0 = asl(r3,#1)
		r8 = r0
		r7 = add(r1,#-1)
		r10 = add(r1,#-2)
	}
	{
		r16 = add(r5,add(r4,#1))
		r17 = add(r3,add(r8,#2))
		r6 = add(r3,#1)
		r2 = add(r2,#-1)
	}
	{
		r9 = add(r0,add(r8,#2))
		r1 = setbit(r0,#0)
		r28 = add(r8,r6)
		p0 = cmp.gtu(r7,#1)
	}
	{
		loop1(.LBB0_2,r2)
		r7 = add(r8,r1)
		r20 = add(r8,#2)
		r27 = #0
	}
	{
		memw(r29+#8) = r3
		memw(r29+#4) = r8
	}                                       // 4-byte Folded Spill
	{
		memw(r29+#0) = r10
		memw(r29+#32) = r28
	}                                       // 4-byte Folded Spill
	{
		jump .LBB0_2
		memw(r29+#28) = r7
	}                                       // 4-byte Folded Spill
	.p2align	4
.LBB0_4:                                //   in Loop: Header=BB0_2 Depth=1
	{
		r15 = r16
	}
.LBB0_11:                               // %b4
                                        //   in Loop: Header=BB0_2 Depth=1
	{
		r6 = sub(r14,r19)
		r4 = add(r19,r14)
		r1 = sub(r12,r18)
	}
	{
		r4 = sub(r4,r11)
		r6 = add(r6,r11)
	}
	{
		r1 = addasl(r6,r1,#1)
		r4 = sub(r4,r2)
	}
	{
		r0 = addasl(r4,r0,#1)
	}
	{
		r1 = sub(r1,r2)
	}
	{
		r0 = abs(r0)
		r1 = abs(r1)
	}
	{
		r0 = add(r0,r1)
	}
	{
		p1 = cmp.gtu(r0,#255)
	}
	{
		r1 = mux(p1,#-1,r0)
		memb(r15++#1) = r1.new
	}
.LBB0_12:                               // %b5
                                        //   in Loop: Header=BB0_2 Depth=1
	{
		r27 = add(r27,#1)
		r9 = add(r9,r3)
		r17 = add(r17,r3)
		r20 = add(r20,r3)
	}
	{
		r16 = add(r16,r5)
		nop
		nop
	} :endloop1
	{
		jump .LBB0_13
	}
.Ltmp0:                                 // Block address taken
.LBB0_2:                                // %b2
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_8 Depth 2
	{
		if (!p0) jump:nt .LBB0_12
	}
// %bb.3:                               // %b3
                                        //   in Loop: Header=BB0_2 Depth=1
	{
		r0 = mpyi(r27,r3)
		r23:22 = combine(r17,r9)
		r24 = r20
		r13 = add(r10,#-3)
	}
	{
		p1 = cmp.gtu(r10,#1)
	}
	{
		r2 = add(r8,r0)
		r18 = memub(r23++#1)
		r19 = memub(r24++#1)
	}
	{
		r11 = memub(r0+r7<<#0)
		r12 = memub(r0+r28<<#0)
	}
	{
		r14 = memub(r2+#1)
		r2 = memub(r22++#1)
	}
	{
		if (!p1) jump:nt .LBB0_4
		r0 = sub(r14,r11)
	}
// %bb.5:                               // %b4
                                        //   in Loop: Header=BB0_2 Depth=1
	{
		r4 = add(r19,r14)
		p1 = cmp.gtu(r10,#2)
		r9 = memub(r22++#1)
		memw(r29+#36) = r9
	}                                       // 4-byte Folded Spill
	{
		r4 = sub(r4,r11)
		r1 = sub(r12,r18)
		r28 = memub(r23++#1)
		r21 = memub(r24++#1)
	}
	{
		r4 = sub(r4,r2)
		r25 = sub(r14,r19)
		r7 = sub(r19,r2)
	}
	{
		r26 = addasl(r4,r0,#1)
		if (!p1) jump:nt .LBB0_6
	}
// %bb.7:                               // %b4
                                        //   in Loop: Header=BB0_2 Depth=1
	{
		r3 = abs(r26)
		r4 = add(r25,r11)
		r6 = add(r21,r14)
		r15 = r16
	}
	{
		r1 = addasl(r4,r1,#1)
		r4 = sub(r6,r11)
		memw(r29+#12) = r27
		memw(r29+#16) = r20
	}                                       // 4-byte Folded Spill
	{
		r26 = sub(r4,r9)
		r20 = sub(r12,r28)
		r0 = memub(r22++#1)
		memw(r29+#20) = r17
	}                                       // 4-byte Folded Spill
	{
		r26 = addasl(r26,r7,#1)
		r4 = sub(r1,r2)
		r16 = sub(r21,r9)
		r17 = memub(r23++#1)
	}
	{
		r4 = abs(r4)
		p1 = cmp.gtu(r10,#3)
		r25 = sub(r14,r21)
		r27 = memub(r24++#1)
	}
	{
		loop0(.LBB0_8,r13)
		r10 = r2
		r13:12 = combine(r11,r18)
		r1 = r20
	}
	{
		if (!p1) jump:nt .LBB0_9
		r14 = r19
		r7 = r16
		memw(r29+#24) = r15
	}                                       // 4-byte Folded Spill
	.p2align	4
.Ltmp1:                                 // Block address taken
.LBB0_8:                                // %b4
                                        //   Parent Loop BB0_2 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	{
		r4 = add(r3,r4)
		r11 = add(r25,r11)
		r1 = sub(r18,r17)
		r18 = add(r27,r19)
	}
	{
		r19 = addasl(r11,r20,#1)
		r25 = sub(r19,r27)
		r10 = r9
		r9 = r0
	}
	{
		p1 = cmp.gtu(r4,#255)
		r18 = sub(r18,r2)
		r13:12 = combine(r2,r28)
		r14 = r21
	}
	{
		r20 = sub(r18,r9)
		r8 = sub(r19,r10)
		r28 = r17
		r6 = mux(p1,#-1,r4)
	}
	{
		r3 = abs(r26)
		r26 = addasl(r20,r16,#1)
		r7 = sub(r27,r9)
		r21 = r27
	}
	{
		r4 = abs(r8)
		r17 = memub(r23++#1)
		r0 = memub(r22++#1)
	}
	{
		r2 = r10
		r11 = r13
		r20 = r1
		r27 = memub(r24++#1)
	}
	{
		r19:18 = combine(r14,r12)
		r16 = r7
		memb(r15++#1) = r6
	} :endloop0
.LBB0_9:                                // %b4
                                        //   in Loop: Header=BB0_2 Depth=1
	{
		r3 = add(r3,r4)
		r2 = r9
		r9 = r0
		r28 = r17
	}
	{
		r11 = r10
		r21 = r27
		r17 = memw(r29+#20)
		r8 = memw(r29+#4)
	}                                       // 4-byte Folded Reload
	{
		p1 = cmp.gtu(r3,#255)
		r10 = memw(r29+#0)
		r16 = memw(r29+#24)
	}                                       // 4-byte Folded Reload
	{
		r0 = mux(p1,#-1,r3)
		r20 = memw(r29+#16)
		r3 = memw(r29+#8)
	}                                       // 4-byte Folded Reload
	{
		jump .LBB0_10
		r27 = memw(r29+#12)
		memb(r15++#1) = r0
	}                                       // 4-byte Folded Reload
.LBB0_6:                                //   in Loop: Header=BB0_2 Depth=1
	{
		r15 = r16
		r13 = r11
	}
.LBB0_10:                               // %b4
                                        //   in Loop: Header=BB0_2 Depth=1
	{
		r4 = abs(r26)
		r0 = add(r25,r13)
		r19:18 = combine(r21,r28)
	}
	{
		r0 = addasl(r0,r1,#1)
	}
	{
		r0 = sub(r0,r2)
		r2 = r9
		r9 = memw(r29+#36)
	}                                       // 4-byte Folded Reload
	{
		r0 = abs(r0)
		r28 = memw(r29+#32)
	}                                       // 4-byte Folded Reload
	{
		r1 = add(r4,r0)
		r0 = r7
		r7 = memw(r29+#28)
	}                                       // 4-byte Folded Reload
	{
		p1 = cmp.gtu(r1,#255)
	}
	{
		jump .LBB0_11
		r4 = mux(p1,#-1,r1)
		memb(r15++#1) = r4.new
	}
.LBB0_13:                               // %b6
	{
		r17:16 = memd(r29+#80)
		r19:18 = memd(r29+#72)
	}                                       // 8-byte Folded Reload
	{
		r21:20 = memd(r29+#64)
		r23:22 = memd(r29+#56)
	}                                       // 8-byte Folded Reload
	{
		r29 = add(r29,#88)
		jumpr r31
		r25:24 = memd(r29+#48)
		r27:26 = memd(r29+#40)
	}                                       // 8-byte Folded Reload
.Lfunc_end0:
	.size	f0, .Lfunc_end0-f0
                                        // -- End function
	.section	".note.GNU-stack","",@progbits
