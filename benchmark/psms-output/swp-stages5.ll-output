SU(0):   %9:intregs = PHI %8:intregs, %bb.1, %22:intregs, %bb.2
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 5
  Successors:
    SU(8): Data Latency=0 Reg=%9
    SU(8): Anti Latency=1
SU(1):   %10:intregs = PHI %7:intregs, %bb.1, %21:intregs, %bb.2
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 4
  Successors:
    SU(10): Data Latency=0 Reg=%10
    SU(10): Anti Latency=1
SU(2):   %12:intregs = PHI %6:intregs, %bb.1, %20:intregs, %bb.2
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 1
  Successors:
    SU(14): Data Latency=0 Reg=%12
    SU(14): Anti Latency=1
SU(3):   %13:intregs = PHI %2:intregs, %bb.1, %18:intregs, %bb.2
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 4
  Successors:
    SU(11): Data Latency=0 Reg=%13
    SU(4): Data Latency=0 Reg=%13
    SU(10): Anti Latency=1
SU(4):   %14:intregs = PHI %3:intregs, %bb.1, %13:intregs, %bb.2
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 3
  Predecessors:
    SU(3): Data Latency=0 Reg=%13
  Successors:
    SU(9): Data Latency=0 Reg=%14
SU(5):   %15:intregs = PHI %2:intregs, %bb.1, %17:intregs, %bb.2
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 5
  Successors:
    SU(7): Data Latency=0 Reg=%15
    SU(6): Data Latency=0 Reg=%15
    SU(8): Anti Latency=1
SU(6):   %16:intregs = PHI %3:intregs, %bb.1, %15:intregs, %bb.2
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 4
  Predecessors:
    SU(5): Data Latency=0 Reg=%15
  Successors:
    SU(7): Data Latency=0 Reg=%16
SU(7):   %35:intregs = nsw A2_add %15:intregs, %16:intregs
  # preds left       : 2
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 4
  Predecessors:
    SU(6): Data Latency=0 Reg=%16
    SU(5): Data Latency=0 Reg=%15
  Successors:
    SU(9): Data Latency=1 Reg=%35
SU(8):   %17:intregs, %22:intregs = L2_loadrub_pi %9:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv7, !tbaa !0)
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 4
  Predecessors:
    SU(0): Data Latency=0 Reg=%9
    SU(5): Anti Latency=1
    SU(0): Anti Latency=1
  Successors:
    SU(9): Data Latency=1 Reg=%17
SU(9):   %37:intregs = nsw M2_acci %14:intregs(tied-def 0), %35:intregs, %17:intregs
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 3
  Predecessors:
    SU(8): Data Latency=1 Reg=%17
    SU(7): Data Latency=1 Reg=%35
    SU(4): Data Latency=0 Reg=%14
  Successors:
    SU(11): Data Latency=1 Reg=%37
SU(10):   %18:intregs, %21:intregs = L2_loadrub_pi %10:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv4, !tbaa !0)
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 3
  Predecessors:
    SU(1): Data Latency=0 Reg=%10
    SU(3): Anti Latency=1
    SU(1): Anti Latency=1
  Successors:
    SU(11): Data Latency=1 Reg=%18
SU(11):   %39:intregs = nsw M2_acci %18:intregs(tied-def 0), %37:intregs, %13:intregs
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 3
  Height             : 2
  Predecessors:
    SU(10): Data Latency=1 Reg=%18
    SU(9): Data Latency=1 Reg=%37
    SU(3): Data Latency=0 Reg=%13
  Successors:
    SU(12): Data Latency=1 Reg=%39
SU(12):   %41:intregs = nsw M4_mpyrr_addi 32768, %39:intregs, %40:intregs
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 1
  Predecessors:
    SU(11): Data Latency=1 Reg=%39
  Successors:
    SU(13): Data Latency=1 Reg=%41
SU(13):   %42:intregs = S2_lsr_i_r %41:intregs, 16
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(12): Data Latency=1 Reg=%41
  Successors:
    SU(14): Data Latency=0 Reg=%42
SU(14):   %20:intregs = S2_storerb_pi %12:intregs(tied-def 0), 1, %42:intregs :: (store (s8) into %ir.lsr.iv, !tbaa !0)
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 5
  Height             : 0
  Predecessors:
    SU(13): Data Latency=0 Reg=%42
    SU(2): Data Latency=0 Reg=%12
    SU(2): Anti Latency=1
ExitSU:   ENDLOOP0 %bb.2, implicit-def $pc, implicit-def $lc0, implicit $sa0, implicit $lc0
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
calculateResMII:
Trying to reserve resource for 1 cycles for 
  %17:intregs, %22:intregs = L2_loadrub_pi %9:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv7, !tbaa !0)
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %37:intregs = nsw M2_acci %14:intregs(tied-def 0), %35:intregs, %17:intregs
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %42:intregs = S2_lsr_i_r %41:intregs, 16
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %41:intregs = nsw M4_mpyrr_addi 32768, %39:intregs, %40:intregs
ReservedCycles:0, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %18:intregs, %21:intregs = L2_loadrub_pi %10:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv4, !tbaa !0)
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %20:intregs = S2_storerb_pi %12:intregs(tied-def 0), 1, %42:intregs :: (store (s8) into %ir.lsr.iv, !tbaa !0)
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %39:intregs = nsw M2_acci %18:intregs(tied-def 0), %37:intregs, %13:intregs
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %35:intregs = nsw A2_add %15:intregs, %16:intregs
ReservedCycles:1, NumCycles:1
Return Res MII:2
MII = 2 MAX_II = 12 (rec=1, res=2)
SU(3):   %13:intregs = PHI %2:intregs, %bb.1, %18:intregs, %bb.2
SU(1):   %10:intregs = PHI %7:intregs, %bb.1, %21:intregs, %bb.2
SU(10):   %18:intregs, %21:intregs = L2_loadrub_pi %10:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv4, !tbaa !0)
SU(5):   %15:intregs = PHI %2:intregs, %bb.1, %17:intregs, %bb.2
SU(0):   %9:intregs = PHI %8:intregs, %bb.1, %22:intregs, %bb.2
SU(8):   %17:intregs, %22:intregs = L2_loadrub_pi %9:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv7, !tbaa !0)
SU(6):   %16:intregs = PHI %3:intregs, %bb.1, %15:intregs, %bb.2
SU(7):   %35:intregs = nsw A2_add %15:intregs, %16:intregs
SU(4):   %14:intregs = PHI %3:intregs, %bb.1, %13:intregs, %bb.2
SU(9):   %37:intregs = nsw M2_acci %14:intregs(tied-def 0), %35:intregs, %17:intregs
SU(11):   %39:intregs = nsw M2_acci %18:intregs(tied-def 0), %37:intregs, %13:intregs
SU(12):   %41:intregs = nsw M4_mpyrr_addi 32768, %39:intregs, %40:intregs
SU(13):   %42:intregs = S2_lsr_i_r %41:intregs, 16
SU(2):   %12:intregs = PHI %6:intregs, %bb.1, %20:intregs, %bb.2
SU(14):   %20:intregs = S2_storerb_pi %12:intregs(tied-def 0), 1, %42:intregs :: (store (s8) into %ir.lsr.iv, !tbaa !0)
	Node 0:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 5
	   ZLD  = 0
	   ZLH  = 1
	Node 1:
	   ASAP = 0
	   ALAP = 1
	   MOV  = 1
	   D    = 0
	   H    = 4
	   ZLD  = 0
	   ZLH  = 1
	Node 2:
	   ASAP = 0
	   ALAP = 4
	   MOV  = 4
	   D    = 0
	   H    = 1
	   ZLD  = 0
	   ZLH  = 1
	Node 3:
	   ASAP = 0
	   ALAP = 1
	   MOV  = 1
	   D    = 0
	   H    = 4
	   ZLD  = 0
	   ZLH  = 2
	Node 4:
	   ASAP = 0
	   ALAP = 1
	   MOV  = 1
	   D    = 0
	   H    = 3
	   ZLD  = 1
	   ZLH  = 1
	Node 5:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 5
	   ZLD  = 0
	   ZLH  = 2
	Node 6:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 4
	   ZLD  = 1
	   ZLH  = 1
	Node 7:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 4
	   ZLD  = 2
	   ZLH  = 0
	Node 8:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 1
	   H    = 4
	   ZLD  = 1
	   ZLH  = 0
	Node 9:
	   ASAP = 1
	   ALAP = 1
	   MOV  = 0
	   D    = 2
	   H    = 3
	   ZLD  = 2
	   ZLH  = 0
	Node 10:
	   ASAP = 0
	   ALAP = 1
	   MOV  = 1
	   D    = 1
	   H    = 3
	   ZLD  = 1
	   ZLH  = 0
	Node 11:
	   ASAP = 2
	   ALAP = 2
	   MOV  = 0
	   D    = 3
	   H    = 2
	   ZLD  = 1
	   ZLH  = 0
	Node 12:
	   ASAP = 3
	   ALAP = 3
	   MOV  = 0
	   D    = 4
	   H    = 1
	   ZLD  = 0
	   ZLH  = 0
	Node 13:
	   ASAP = 4
	   ALAP = 4
	   MOV  = 0
	   D    = 5
	   H    = 0
	   ZLD  = 0
	   ZLH  = 1
	Node 14:
	   ASAP = 4
	   ALAP = 4
	   MOV  = 0
	   D    = 5
	   H    = 0
	   ZLD  = 1
	   ZLH  = 0
  Rec NodeSet Num nodes 2 rec 1 mov 0 depth 1 col 0
   SU(0) %9:intregs = PHI %8:intregs, %bb.1, %22:intregs, %bb.2
   SU(8) %17:intregs, %22:intregs = L2_loadrub_pi %9:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv7, !tbaa !0)

  Rec NodeSet Num nodes 2 rec 1 mov 1 depth 1 col 0
   SU(1) %10:intregs = PHI %7:intregs, %bb.1, %21:intregs, %bb.2
   SU(10) %18:intregs, %21:intregs = L2_loadrub_pi %10:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv4, !tbaa !0)

  Rec NodeSet Num nodes 2 rec 1 mov 4 depth 5 col 0
   SU(2) %12:intregs = PHI %6:intregs, %bb.1, %20:intregs, %bb.2
   SU(14) %20:intregs = S2_storerb_pi %12:intregs(tied-def 0), 1, %42:intregs :: (store (s8) into %ir.lsr.iv, !tbaa !0)

  NodeSet Num nodes 2 rec 1 mov 0 depth 1 col 0
   SU(0) %9:intregs = PHI %8:intregs, %bb.1, %22:intregs, %bb.2
   SU(8) %17:intregs, %22:intregs = L2_loadrub_pi %9:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv7, !tbaa !0)

  NodeSet Num nodes 2 rec 1 mov 1 depth 1 col 0
   SU(1) %10:intregs = PHI %7:intregs, %bb.1, %21:intregs, %bb.2
   SU(10) %18:intregs, %21:intregs = L2_loadrub_pi %10:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv4, !tbaa !0)

  NodeSet Num nodes 11 rec 1 mov 4 depth 5 col 0
   SU(2) %12:intregs = PHI %6:intregs, %bb.1, %20:intregs, %bb.2
   SU(14) %20:intregs = S2_storerb_pi %12:intregs(tied-def 0), 1, %42:intregs :: (store (s8) into %ir.lsr.iv, !tbaa !0)
   SU(13) %42:intregs = S2_lsr_i_r %41:intregs, 16
   SU(12) %41:intregs = nsw M4_mpyrr_addi 32768, %39:intregs, %40:intregs
   SU(11) %39:intregs = nsw M2_acci %18:intregs(tied-def 0), %37:intregs, %13:intregs
   SU(9) %37:intregs = nsw M2_acci %14:intregs(tied-def 0), %35:intregs, %17:intregs
   SU(7) %35:intregs = nsw A2_add %15:intregs, %16:intregs
   SU(6) %16:intregs = PHI %3:intregs, %bb.1, %15:intregs, %bb.2
   SU(5) %15:intregs = PHI %2:intregs, %bb.1, %17:intregs, %bb.2
   SU(4) %14:intregs = PHI %3:intregs, %bb.1, %13:intregs, %bb.2
   SU(3) %13:intregs = PHI %2:intregs, %bb.1, %18:intregs, %bb.2

NodeSet size 2
  Bottom up (default) 8 0 
   Switching order to top down 
Done with Nodeset
NodeSet size 2
  Bottom up (default) 10 1 
   Switching order to top down 
Done with Nodeset
NodeSet size 11
  Top down (succs) 5 3 6 7 4 9 11 12 13 14 2 
   Switching order to bottom up 
Done with Nodeset
Node order:  8  0  10  1  5  3  6  7  4  9  11  12  13  14  2 
Try to schedule with 2

Inst (8)   %17:intregs, %22:intregs = L2_loadrub_pi %9:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv7, !tbaa !0)

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 0 and 1 II: 2
	insert at cycle 0   %17:intregs, %22:intregs = L2_loadrub_pi %9:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv7, !tbaa !0)

Inst (0)   %9:intregs = PHI %8:intregs, %bb.1, %22:intregs, %bb.2

	es: ffffffff ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between 0 and -1 II: 2
	insert at cycle -1   %9:intregs = PHI %8:intregs, %bb.1, %22:intregs, %bb.2

Inst (10)   %18:intregs, %21:intregs = L2_loadrub_pi %10:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv4, !tbaa !0)

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -1 and 0 II: 2
	insert at cycle -1   %18:intregs, %21:intregs = L2_loadrub_pi %10:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv4, !tbaa !0)

Inst (1)   %10:intregs = PHI %7:intregs, %bb.1, %21:intregs, %bb.2

	es: fffffffe ls: ffffffff me: 7fffffff ms: 80000000
Trying to insert node between -1 and -2 II: 2
	insert at cycle -1   %10:intregs = PHI %7:intregs, %bb.1, %21:intregs, %bb.2

Inst (5)   %15:intregs = PHI %2:intregs, %bb.1, %17:intregs, %bb.2

	es: ffffffff ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -1 and 0 II: 2
	insert at cycle -1   %15:intregs = PHI %2:intregs, %bb.1, %17:intregs, %bb.2

Inst (3)   %13:intregs = PHI %2:intregs, %bb.1, %18:intregs, %bb.2

	es: fffffffe ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -2 and -1 II: 2
	insert at cycle -2   %13:intregs = PHI %2:intregs, %bb.1, %18:intregs, %bb.2

Inst (6)   %16:intregs = PHI %3:intregs, %bb.1, %15:intregs, %bb.2

	es: ffffffff ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -1 and 0 II: 2
	insert at cycle -1   %16:intregs = PHI %3:intregs, %bb.1, %15:intregs, %bb.2

Inst (7)   %35:intregs = nsw A2_add %15:intregs, %16:intregs

	es: ffffffff ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between -1 and 0 II: 2
	insert at cycle -1   %35:intregs = nsw A2_add %15:intregs, %16:intregs

Inst (4)   %14:intregs = PHI %3:intregs, %bb.1, %13:intregs, %bb.2

	es: fffffffe ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -2 and -1 II: 2
	insert at cycle -2   %14:intregs = PHI %3:intregs, %bb.1, %13:intregs, %bb.2

Inst (9)   %37:intregs = nsw M2_acci %14:intregs(tied-def 0), %35:intregs, %17:intregs

	es:        1 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 1 and 2 II: 2
	insert at cycle 2   %37:intregs = nsw M2_acci %14:intregs(tied-def 0), %35:intregs, %17:intregs

Inst (11)   %39:intregs = nsw M2_acci %18:intregs(tied-def 0), %37:intregs, %13:intregs

	es:        3 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 3 and 4 II: 2
	insert at cycle 3   %39:intregs = nsw M2_acci %18:intregs(tied-def 0), %37:intregs, %13:intregs

Inst (12)   %41:intregs = nsw M4_mpyrr_addi 32768, %39:intregs, %40:intregs

	es:        4 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 4 and 5 II: 2
	insert at cycle 4   %41:intregs = nsw M4_mpyrr_addi 32768, %39:intregs, %40:intregs

Inst (13)   %42:intregs = S2_lsr_i_r %41:intregs, 16

	es:        5 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 5 and 6 II: 2
	insert at cycle 5   %42:intregs = S2_lsr_i_r %41:intregs, 16

Inst (14)   %20:intregs = S2_storerb_pi %12:intregs(tied-def 0), 1, %42:intregs :: (store (s8) into %ir.lsr.iv, !tbaa !0)

	es:        5 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 5 and 6 II: 2
	insert at cycle 6   %20:intregs = S2_storerb_pi %12:intregs(tied-def 0), 1, %42:intregs :: (store (s8) into %ir.lsr.iv, !tbaa !0)
	Can't schedule
Try to schedule with 3

Inst (8)   %17:intregs, %22:intregs = L2_loadrub_pi %9:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv7, !tbaa !0)

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 0 and 2 II: 3
	insert at cycle 0   %17:intregs, %22:intregs = L2_loadrub_pi %9:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv7, !tbaa !0)

Inst (0)   %9:intregs = PHI %8:intregs, %bb.1, %22:intregs, %bb.2

	es: fffffffe ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between 0 and -2 II: 3
	insert at cycle -1   %9:intregs = PHI %8:intregs, %bb.1, %22:intregs, %bb.2

Inst (10)   %18:intregs, %21:intregs = L2_loadrub_pi %10:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv4, !tbaa !0)

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -1 and 1 II: 3
	insert at cycle -1   %18:intregs, %21:intregs = L2_loadrub_pi %10:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv4, !tbaa !0)

Inst (1)   %10:intregs = PHI %7:intregs, %bb.1, %21:intregs, %bb.2

	es: fffffffd ls: ffffffff me: 7fffffff ms: 80000000
Trying to insert node between -1 and -3 II: 3
	insert at cycle -2   %10:intregs = PHI %7:intregs, %bb.1, %21:intregs, %bb.2

Inst (5)   %15:intregs = PHI %2:intregs, %bb.1, %17:intregs, %bb.2

	es: fffffffe ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -2 and 0 II: 3
	insert at cycle -2   %15:intregs = PHI %2:intregs, %bb.1, %17:intregs, %bb.2

Inst (3)   %13:intregs = PHI %2:intregs, %bb.1, %18:intregs, %bb.2

	es: fffffffd ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -3 and -1 II: 3
	insert at cycle -2   %13:intregs = PHI %2:intregs, %bb.1, %18:intregs, %bb.2

Inst (6)   %16:intregs = PHI %3:intregs, %bb.1, %15:intregs, %bb.2

	es: fffffffe ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -2 and 0 II: 3
	insert at cycle -2   %16:intregs = PHI %3:intregs, %bb.1, %15:intregs, %bb.2

Inst (7)   %35:intregs = nsw A2_add %15:intregs, %16:intregs

	es: fffffffe ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between -2 and 0 II: 3
	insert at cycle -2   %35:intregs = nsw A2_add %15:intregs, %16:intregs

Inst (4)   %14:intregs = PHI %3:intregs, %bb.1, %13:intregs, %bb.2

	es: fffffffe ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between -2 and 0 II: 3
	insert at cycle -2   %14:intregs = PHI %3:intregs, %bb.1, %13:intregs, %bb.2

Inst (9)   %37:intregs = nsw M2_acci %14:intregs(tied-def 0), %35:intregs, %17:intregs

	es:        1 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 1 and 3 II: 3
	insert at cycle 1   %37:intregs = nsw M2_acci %14:intregs(tied-def 0), %35:intregs, %17:intregs

Inst (11)   %39:intregs = nsw M2_acci %18:intregs(tied-def 0), %37:intregs, %13:intregs

	es:        2 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 2 and 4 II: 3
	insert at cycle 2   %39:intregs = nsw M2_acci %18:intregs(tied-def 0), %37:intregs, %13:intregs

Inst (12)   %41:intregs = nsw M4_mpyrr_addi 32768, %39:intregs, %40:intregs

	es:        3 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 3 and 5 II: 3
	insert at cycle 3   %41:intregs = nsw M4_mpyrr_addi 32768, %39:intregs, %40:intregs

Inst (13)   %42:intregs = S2_lsr_i_r %41:intregs, 16

	es:        4 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 4 and 6 II: 3
	insert at cycle 4   %42:intregs = S2_lsr_i_r %41:intregs, 16

Inst (14)   %20:intregs = S2_storerb_pi %12:intregs(tied-def 0), 1, %42:intregs :: (store (s8) into %ir.lsr.iv, !tbaa !0)

	es:        4 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 4 and 6 II: 3
	insert at cycle 5   %20:intregs = S2_storerb_pi %12:intregs(tied-def 0), 1, %42:intregs :: (store (s8) into %ir.lsr.iv, !tbaa !0)

Inst (2)   %12:intregs = PHI %6:intregs, %bb.1, %20:intregs, %bb.2

	es:        3 ls:        5 me: 7fffffff ms: 80000000
Trying to insert node between 5 and 3 II: 3
	insert at cycle 3   %12:intregs = PHI %6:intregs, %bb.1, %20:intregs, %bb.2
Schedule Found? 1 (II=3)
cycle -2 (0) (1) %10:intregs = PHI %7:intregs, %bb.1, %21:intregs, %bb.2

cycle -2 (0) (5) %15:intregs = PHI %2:intregs, %bb.1, %17:intregs, %bb.2

cycle -2 (0) (3) %13:intregs = PHI %2:intregs, %bb.1, %18:intregs, %bb.2

cycle -2 (0) (6) %16:intregs = PHI %3:intregs, %bb.1, %15:intregs, %bb.2

cycle -2 (0) (4) %14:intregs = PHI %3:intregs, %bb.1, %13:intregs, %bb.2

cycle -2 (2) (13) %42:intregs = S2_lsr_i_r %41:intregs, 16

cycle -2 (1) (9) %37:intregs = nsw M2_acci %14:intregs(tied-def 0), %35:intregs, %17:intregs

cycle -2 (0) (7) %35:intregs = nsw A2_add %15:intregs, %16:intregs

cycle -1 (0) (0) %9:intregs = PHI %8:intregs, %bb.1, %22:intregs, %bb.2

cycle -1 (2) (14) %20:intregs = S2_storerb_pi %12:intregs(tied-def 0), 1, %42:intregs :: (store (s8) into %ir.lsr.iv, !tbaa !0)

cycle -1 (1) (11) %39:intregs = nsw M2_acci %18:intregs(tied-def 0), %37:intregs, %13:intregs

cycle -1 (0) (10) %18:intregs, %21:intregs = L2_loadrub_pi %10:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv4, !tbaa !0)

cycle 0 (1) (2) %12:intregs = PHI %6:intregs, %bb.1, %20:intregs, %bb.2

cycle 0 (1) (12) %41:intregs = nsw M4_mpyrr_addi 32768, %39:intregs, %40:intregs

cycle 0 (0) (8) %17:intregs, %22:intregs = L2_loadrub_pi %9:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv7, !tbaa !0)

[stage 0 @-2c] %10:intregs = PHI %7:intregs, %bb.1, %21:intregs, %bb.2
[stage 0 @-2c] %15:intregs = PHI %2:intregs, %bb.1, %17:intregs, %bb.2
[stage 0 @-2c] %13:intregs = PHI %2:intregs, %bb.1, %18:intregs, %bb.2
[stage 0 @-2c] %16:intregs = PHI %3:intregs, %bb.1, %15:intregs, %bb.2
[stage 0 @-2c] %14:intregs = PHI %3:intregs, %bb.1, %13:intregs, %bb.2
[stage 2 @-2c] %42:intregs = S2_lsr_i_r %41:intregs, 16
[stage 1 @-2c] %37:intregs = nsw M2_acci %14:intregs(tied-def 0), %35:intregs, %17:intregs
[stage 0 @-2c] %35:intregs = nsw A2_add %15:intregs, %16:intregs
[stage 0 @-1c] %9:intregs = PHI %8:intregs, %bb.1, %22:intregs, %bb.2
[stage 2 @-1c] %20:intregs = S2_storerb_pi %12:intregs(tied-def 0), 1, %42:intregs :: (store (s8) into %ir.lsr.iv, !tbaa !0)
[stage 1 @-1c] %39:intregs = nsw M2_acci %18:intregs(tied-def 0), %37:intregs, %13:intregs
[stage 0 @-1c] %18:intregs, %21:intregs = L2_loadrub_pi %10:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv4, !tbaa !0)
[stage 1 @0c] %12:intregs = PHI %6:intregs, %bb.1, %20:intregs, %bb.2
[stage 1 @0c] %41:intregs = nsw M4_mpyrr_addi 32768, %39:intregs, %40:intregs
[stage 0 @0c] %17:intregs, %22:intregs = L2_loadrub_pi %9:intregs(tied-def 1), 1 :: (load (s8) from %ir.lsr.iv7, !tbaa !0)
 -- padding defaults array from 2 to 3
 -- padding defaults array from 1 to 2
Dynamic: TC > 2
Dynamic: TC > 1
	.text
	.file	"<stdin>"
	.globl	fred                            // -- Begin function fred
	.p2align	4
	.type	fred,@function
fred:                                   // @fred
// %bb.0:                               // %entry
	{
		r2 = add(r2,#-1)
	}
	{
		p0 = cmp.gtu(r2,#1)
		if (!p0.new) jumpr:nt r31
	}
.LBB0_1:                                // %for.body74.preheader
	{
		r1 = add(r5,add(r4,#1))
		r2 = add(r0,r3)
		r8 = add(r1,#-2)
		r5 = add(r0,#2)
	}
	{
		r0 = #7282
		r12 = add(r8,#-2)
		r4 = r2
		r3 = memub(r2+#1)
	}
	{
		p0 = cmp.gtu(r8,#1)
		r2 = memub(r4++#2)
		r7 = memub(r5++#1)
	}
	{
		if (!p0) jump:nt .LBB0_2
		r6 = add(r3,r2)
		r2 = memub(r4++#1)
	}
// %bb.3:                               // %for.body74
	{
		loop0(.LBB0_4,r12)
		r9 = r3
		r13 = r2
		p0 = cmp.gtu(r8,#2)
	}
	{
		r9 += add(r6,r7)
		r12 = r3
		r6 = add(r7,r3)
		r8 = memub(r4++#1)
	}
	{
		r13 += add(r9,r3)
		r9 = memub(r5++#1)
	}
	{
		r13 = add(##32768,mpyi(r13,r0))
		if (!p0) jump:nt .LBB0_5
	}
	.p2align	4
.Ltmp0:                                 // Block address taken
.LBB0_4:                                // %for.body74
                                        // =>This Inner Loop Header: Depth=1
	{
		r3 += add(r6,r9)
		r12 = r2
		r14 = r8
		r6 = add(r9,r7)
	}
	{
		r14 += add(r3,r12)
		r7 = lsr(r13,#16)
		r2 = r8
		memb(r1++#1) = r7.new
	}
	{
		r7 = r9
		r3 = r12
		r8 = memub(r4++#1)
		r9 = memub(r5++#1)
	}
	{
		r13 = add(##32768,mpyi(r14,r0))
	} :endloop0
.LBB0_5:                                // %for.body74
	{
		r2 = lsr(r13,#16)
		r4 = r2
		r7 = r9
		memb(r1++#1) = r2.new
	}
	{
		jump .LBB0_6
		r3:2 = combine(r12,r8)
	}
.LBB0_2:
	{
		r4 = r3
	}
.LBB0_6:                                // %for.body74
	{
		r3 += add(r6,r7)
	}
	{
		r2 += add(r3,r4)
	}
	{
		r0 = add(##32768,mpyi(r2,r0))
	}
	{
		r0 = lsr(r0,#16)
		jumpr r31
		memb(r1++#1) = r0.new
	}
.Lfunc_end0:
	.size	fred, .Lfunc_end0-fred
                                        // -- End function
	.section	".note.GNU-stack","",@progbits
