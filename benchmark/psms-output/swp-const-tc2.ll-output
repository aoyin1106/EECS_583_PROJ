SU(0):   %1:intregs = PHI %6:intregs, %bb.0, %2:intregs, %bb.1
  # preds left       : 0
  # succs left       : 2
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 1
  Successors:
    SU(2): Data Latency=0 Reg=%1
    SU(7): Anti Latency=1
SU(1):   %7:intregs = L2_loadri_io %4:intregs, 0 :: (load (s32) from %ir.a0)
  # preds left       : 0
  # succs left       : 3
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 4
  Successors:
    SU(6): Data Latency=1 Reg=%7
    SU(5): Data Latency=1 Reg=%7
    SU(3): Data Latency=1 Reg=%7
SU(2):   %8:intregs = nsw A2_addi %1:intregs, 1
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 0
  Height             : 1
  Predecessors:
    SU(0): Data Latency=0 Reg=%1
  Successors:
    SU(7): Data Latency=1 Reg=%8
SU(3):   %10:intregs = M4_mpyrr_addi 715827882, %7:intregs, %9:intregs
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 3
  Predecessors:
    SU(1): Data Latency=1 Reg=%7
  Successors:
    SU(4): Data Latency=1 Reg=%10
SU(4):   %11:predregs = C2_cmpgtui %10:intregs, 1431655764
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 2
  Height             : 2
  Predecessors:
    SU(3): Data Latency=1 Reg=%10
  Successors:
    SU(6): Data Latency=1 Reg=%11
SU(5):   %12:intregs = nsw A2_subri 0, %7:intregs
  # preds left       : 1
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 1
  Height             : 2
  Predecessors:
    SU(1): Data Latency=1 Reg=%7
  Successors:
    SU(6): Data Latency=1 Reg=%12
SU(6):   %13:intregs = C2_mux %11:predregs, %12:intregs, %7:intregs
  # preds left       : 3
  # succs left       : 1
  # rdefs left       : 0
  Latency            : 1
  Depth              : 3
  Height             : 1
  Predecessors:
    SU(5): Data Latency=1 Reg=%12
    SU(4): Data Latency=1 Reg=%11
    SU(1): Data Latency=1 Reg=%7
  Successors:
    SU(7): Data Latency=1 Reg=%13
SU(7):   %2:intregs = nsw M2_mpyi %8:intregs, %13:intregs
  # preds left       : 3
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 1
  Depth              : 4
  Height             : 0
  Predecessors:
    SU(6): Data Latency=1 Reg=%13
    SU(2): Data Latency=1 Reg=%8
    SU(0): Anti Latency=1
ExitSU:   ENDLOOP0 %bb.1, implicit-def $pc, implicit-def $lc0, implicit $sa0, implicit $lc0
  # preds left       : 0
  # succs left       : 0
  # rdefs left       : 0
  Latency            : 0
  Depth              : 0
  Height             : 0
calculateResMII:
Trying to reserve resource for 1 cycles for 
  %7:intregs = L2_loadri_io %4:intregs, 0 :: (load (s32) from %ir.a0)
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %10:intregs = M4_mpyrr_addi 715827882, %7:intregs, %9:intregs
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %2:intregs = nsw M2_mpyi %8:intregs, %13:intregs
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %13:intregs = C2_mux %11:predregs, %12:intregs, %7:intregs
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %12:intregs = nsw A2_subri 0, %7:intregs
ReservedCycles:0, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %8:intregs = nsw A2_addi %1:intregs, 1
ReservedCycles:1, NumCycles:1
Trying to reserve resource for 1 cycles for 
  %11:predregs = C2_cmpgtui %10:intregs, 1431655764
ReservedCycles:1, NumCycles:1
Return Res MII:2
MII = 2 MAX_II = 12 (rec=2, res=2)
SU(1):   %7:intregs = L2_loadri_io %4:intregs, 0 :: (load (s32) from %ir.a0)
SU(5):   %12:intregs = nsw A2_subri 0, %7:intregs
SU(3):   %10:intregs = M4_mpyrr_addi 715827882, %7:intregs, %9:intregs
SU(4):   %11:predregs = C2_cmpgtui %10:intregs, 1431655764
SU(6):   %13:intregs = C2_mux %11:predregs, %12:intregs, %7:intregs
SU(0):   %1:intregs = PHI %6:intregs, %bb.0, %2:intregs, %bb.1
SU(2):   %8:intregs = nsw A2_addi %1:intregs, 1
SU(7):   %2:intregs = nsw M2_mpyi %8:intregs, %13:intregs
	Node 0:
	   ASAP = 0
	   ALAP = 3
	   MOV  = 3
	   D    = 0
	   H    = 1
	   ZLD  = 0
	   ZLH  = 1
	Node 1:
	   ASAP = 0
	   ALAP = 0
	   MOV  = 0
	   D    = 0
	   H    = 4
	   ZLD  = 0
	   ZLH  = 0
	Node 2:
	   ASAP = 0
	   ALAP = 3
	   MOV  = 3
	   D    = 0
	   H    = 1
	   ZLD  = 1
	   ZLH  = 0
	Node 3:
	   ASAP = 1
	   ALAP = 1
	   MOV  = 0
	   D    = 1
	   H    = 3
	   ZLD  = 0
	   ZLH  = 0
	Node 4:
	   ASAP = 2
	   ALAP = 2
	   MOV  = 0
	   D    = 2
	   H    = 2
	   ZLD  = 0
	   ZLH  = 0
	Node 5:
	   ASAP = 1
	   ALAP = 2
	   MOV  = 1
	   D    = 1
	   H    = 2
	   ZLD  = 0
	   ZLH  = 0
	Node 6:
	   ASAP = 3
	   ALAP = 3
	   MOV  = 0
	   D    = 3
	   H    = 1
	   ZLD  = 0
	   ZLH  = 0
	Node 7:
	   ASAP = 4
	   ALAP = 4
	   MOV  = 0
	   D    = 4
	   H    = 0
	   ZLD  = 0
	   ZLH  = 0
  Rec NodeSet Num nodes 3 rec 2 mov 3 depth 4 col 0
   SU(0) %1:intregs = PHI %6:intregs, %bb.0, %2:intregs, %bb.1
   SU(2) %8:intregs = nsw A2_addi %1:intregs, 1
   SU(7) %2:intregs = nsw M2_mpyi %8:intregs, %13:intregs

  NodeSet Num nodes 3 rec 2 mov 3 depth 4 col 0
   SU(0) %1:intregs = PHI %6:intregs, %bb.0, %2:intregs, %bb.1
   SU(2) %8:intregs = nsw A2_addi %1:intregs, 1
   SU(7) %2:intregs = nsw M2_mpyi %8:intregs, %13:intregs

  NodeSet Num nodes 5 rec 0 mov 0 depth 0 col 0
   SU(6) %13:intregs = C2_mux %11:predregs, %12:intregs, %7:intregs
   SU(5) %12:intregs = nsw A2_subri 0, %7:intregs
   SU(1) %7:intregs = L2_loadri_io %4:intregs, 0 :: (load (s32) from %ir.a0)
   SU(3) %10:intregs = M4_mpyrr_addi 715827882, %7:intregs, %9:intregs
   SU(4) %11:predregs = C2_cmpgtui %10:intregs, 1431655764

NodeSet size 3
  Bottom up (default) 7 2 0 
   Switching order to top down 
Done with Nodeset
NodeSet size 5
  Bottom up (preds) 6 4 3 5 1 
   Switching order to top down 
Done with Nodeset
Node order:  7  2  0  6  4  3  5  1 
Try to schedule with 2

Inst (7)   %2:intregs = nsw M2_mpyi %8:intregs, %13:intregs

	es: 80000000 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 4 and 5 II: 2
	insert at cycle 4   %2:intregs = nsw M2_mpyi %8:intregs, %13:intregs

Inst (2)   %8:intregs = nsw A2_addi %1:intregs, 1

	es: 80000000 ls:        3 me: 7fffffff ms: 80000000
Trying to insert node between 3 and 2 II: 2
	insert at cycle 3   %8:intregs = nsw A2_addi %1:intregs, 1

Inst (0)   %1:intregs = PHI %6:intregs, %bb.0, %2:intregs, %bb.1

	es:        3 ls:        3 me: 7fffffff ms: 80000000
Trying to insert node between 3 and 3 II: 2
	insert at cycle 3   %1:intregs = PHI %6:intregs, %bb.0, %2:intregs, %bb.1

Inst (6)   %13:intregs = C2_mux %11:predregs, %12:intregs, %7:intregs

	es: 80000000 ls:        3 me: 7fffffff ms: 80000000
Trying to insert node between 3 and 2 II: 2
	insert at cycle 3   %13:intregs = C2_mux %11:predregs, %12:intregs, %7:intregs

Inst (4)   %11:predregs = C2_cmpgtui %10:intregs, 1431655764

	es: 80000000 ls:        2 me: 7fffffff ms: 80000000
Trying to insert node between 2 and 1 II: 2
	insert at cycle 2   %11:predregs = C2_cmpgtui %10:intregs, 1431655764

Inst (3)   %10:intregs = M4_mpyrr_addi 715827882, %7:intregs, %9:intregs

	es: 80000000 ls:        1 me: 7fffffff ms: 80000000
Trying to insert node between 1 and 0 II: 2
	insert at cycle 1   %10:intregs = M4_mpyrr_addi 715827882, %7:intregs, %9:intregs

Inst (5)   %12:intregs = nsw A2_subri 0, %7:intregs

	es: 80000000 ls:        2 me: 7fffffff ms: 80000000
Trying to insert node between 2 and 1 II: 2
	insert at cycle 2   %12:intregs = nsw A2_subri 0, %7:intregs

Inst (1)   %7:intregs = L2_loadri_io %4:intregs, 0 :: (load (s32) from %ir.a0)

	es: 80000000 ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between 0 and -1 II: 2
	insert at cycle 0   %7:intregs = L2_loadri_io %4:intregs, 0 :: (load (s32) from %ir.a0)
Schedule Found? 1 (II=2)
cycle 0 (2) (7) %2:intregs = nsw M2_mpyi %8:intregs, %13:intregs

cycle 0 (1) (4) %11:predregs = C2_cmpgtui %10:intregs, 1431655764

cycle 0 (1) (5) %12:intregs = nsw A2_subri 0, %7:intregs

cycle 0 (0) (1) %7:intregs = L2_loadri_io %4:intregs, 0 :: (load (s32) from %ir.a0)

cycle 1 (1) (0) %1:intregs = PHI %6:intregs, %bb.0, %2:intregs, %bb.1

cycle 1 (1) (2) %8:intregs = nsw A2_addi %1:intregs, 1

cycle 1 (1) (6) %13:intregs = C2_mux %11:predregs, %12:intregs, %7:intregs

cycle 1 (0) (3) %10:intregs = M4_mpyrr_addi 715827882, %7:intregs, %9:intregs

[stage 2 @0c] %2:intregs = nsw M2_mpyi %8:intregs, %13:intregs
[stage 1 @0c] %11:predregs = C2_cmpgtui %10:intregs, 1431655764
[stage 1 @0c] %12:intregs = nsw A2_subri 0, %7:intregs
[stage 0 @0c] %7:intregs = L2_loadri_io %4:intregs, 0 :: (load (s32) from %ir.a0)
[stage 1 @1c] %1:intregs = PHI %6:intregs, %bb.0, %2:intregs, %bb.1
[stage 1 @1c] %8:intregs = nsw A2_addi %1:intregs, 1
[stage 1 @1c] %13:intregs = C2_mux %11:predregs, %12:intregs, %7:intregs
[stage 0 @1c] %10:intregs = M4_mpyrr_addi 715827882, %7:intregs, %9:intregs
Static-false: TC > 2
Static-false: TC > 1
	.text
	.file	"<stdin>"
	.globl	f0                              // -- Begin function f0
	.p2align	4
	.type	f0,@function
f0:                                     // @f0
	.cfi_startproc
// %bb.0:                               // %b0
	{
		r1 = #0
		r2 = ##-1431655765
		r0 = memw(r0+#0)
	}
	{
		r2 = add(##715827882,mpyi(r0,r2))
		r1 = add(r1,#1)
	}
	{
		p0 = cmp.gtu(r2,##1431655764)
		r2 = sub(#0,r0)
	}
	{
		if (!p0) r2 = add(r0,#0)
	}
	{
		r0 = mpyi(r1,r2)
		jumpr r31
	}
.Ltmp0:                                 // Address of block that was removed by CodeGen
.Lfunc_end0:
	.size	f0, .Lfunc_end0-f0
	.cfi_endproc
                                        // -- End function
	.section	".note.GNU-stack","",@progbits
