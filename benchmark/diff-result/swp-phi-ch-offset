SU(2):   %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs( |	SU(2):   %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs(
SU(3):   %12:doubleregs = L2_loadrd_io %2:intregs, 0 :: (load |	SU(3):   %12:doubleregs = L2_loadrd_io %2:intregs, 0 :: (load
SU(11):   %5:intregs = S2_storerd_pi %2:intregs(tied-def 0),  |	SU(11):   %5:intregs = S2_storerd_pi %2:intregs(tied-def 0), 
  %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs(tied-de |	  %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs(tied-de
  %5:intregs = S2_storerd_pi %2:intregs(tied-def 0), 8, %27:d |	  %5:intregs = S2_storerd_pi %2:intregs(tied-def 0), 8, %27:d
  %12:doubleregs = L2_loadrd_io %2:intregs, 0 :: (load 8 from |	  %12:doubleregs = L2_loadrd_io %2:intregs, 0 :: (load (s64) 
SU(3):   %12:doubleregs = L2_loadrd_io %2:intregs, 0 :: (load |	SU(3):   %12:doubleregs = L2_loadrd_io %2:intregs, 0 :: (load
SU(2):   %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs( |	SU(2):   %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs(
SU(11):   %5:intregs = S2_storerd_pi %2:intregs(tied-def 0),  |	SU(11):   %5:intregs = S2_storerd_pi %2:intregs(tied-def 0), 
   SU(2) %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs( |	   SU(2) %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs(
   SU(11) %5:intregs = S2_storerd_pi %2:intregs(tied-def 0),  |	   SU(11) %5:intregs = S2_storerd_pi %2:intregs(tied-def 0), 
   SU(2) %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs( |	   SU(2) %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs(
   SU(11) %5:intregs = S2_storerd_pi %2:intregs(tied-def 0),  |	   SU(11) %5:intregs = S2_storerd_pi %2:intregs(tied-def 0), 
   SU(3) %12:doubleregs = L2_loadrd_io %2:intregs, 0 :: (load |	   SU(3) %12:doubleregs = L2_loadrd_io %2:intregs, 0 :: (load
Inst (2)   %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intreg |	Inst (2)   %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intreg
	insert at cycle 0   %9:doubleregs, %4:intregs = L2_lo |		insert at cycle 0   %9:doubleregs, %4:intregs = L2_lo
	insert at cycle 0   %1:intregs = PHI %7:intregs, %bb. |		insert at cycle -1   %1:intregs = PHI %7:intregs, %bb
	insert at cycle 1   %18:doubleregs = M5_vmacbsu %15:d |		insert at cycle 2   %18:doubleregs = M5_vmacbsu %15:d
	es:        2 ls: 7fffffff me: 7fffffff ms: 80000000   <
Trying to insert node between 2 and 4 II: 3		      <
	insert at cycle 2   %20:intregs = S2_vtrunehb %18:dou <
							      <
Inst (10)   %27:doubleregs = REG_SEQUENCE %20:intregs, %subre <
							      <
	insert at cycle 3   %27:doubleregs = REG_SEQUENCE %20 |		insert at cycle 3   %20:intregs = S2_vtrunehb %18:dou
Inst (11)   %5:intregs = S2_storerd_pi %2:intregs(tied-def 0) |	Inst (10)   %27:doubleregs = REG_SEQUENCE %20:intregs, %subre
	es:        3 ls: 7fffffff me: 7fffffff ms: 80000000   |		es:        4 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 3 and 5 II: 3		      |	Trying to insert node between 4 and 6 II: 3
	insert at cycle 3   %5:intregs = S2_storerd_pi %2:int |		insert at cycle 4   %27:doubleregs = REG_SEQUENCE %20
							      >
							      >	Inst (11)   %5:intregs = S2_storerd_pi %2:intregs(tied-def 0)
							      >
							      >		es:        4 ls: 7fffffff me: 7fffffff ms: 80000000
							      >	Trying to insert node between 4 and 6 II: 3
							      >		insert at cycle 4   %5:intregs = S2_storerd_pi %2:int
	es:        1 ls:        3 me: 7fffffff ms: 80000000   |		es:        2 ls:        4 me: 7fffffff ms: 80000000
Trying to insert node between 3 and 1 II: 3		      |	Trying to insert node between 4 and 2 II: 3
	insert at cycle 3   %2:intregs = PHI %8:intregs, %bb. |		insert at cycle 4   %2:intregs = PHI %8:intregs, %bb.
	es: 80000000 ls:        0 me: 7fffffff ms: 80000000   |		es: 80000000 ls:        1 me: 7fffffff ms: 80000000
Trying to insert node between 0 and -2 II: 3		      |	Trying to insert node between 1 and -1 II: 3
	insert at cycle 0   %15:doubleregs = S2_vzxtbh %12.is |		insert at cycle 1   %15:doubleregs = S2_vzxtbh %12.is
Inst (3)   %12:doubleregs = L2_loadrd_io %2:intregs, 0 :: (lo |	Inst (3)   %12:doubleregs = L2_loadrd_io %2:intregs, 0 :: (lo
	insert at cycle -1   %12:doubleregs = L2_loadrd_io %2 |		insert at cycle -1   %12:doubleregs = L2_loadrd_io %2
Schedule Found? 1 (II=4)				      |	Schedule Found? 1 (II=3)
cycle -1 (1) (9) %21:intregs = S2_vtrunehb %19:doubleregs     |	cycle -1 (0) (0) %1:intregs = PHI %7:intregs, %bb.0, %4:intre
cycle -1 (1) (8) %20:intregs = S2_vtrunehb %18:doubleregs     |	cycle -1 (1) (6) %18:doubleregs = M5_vmacbsu %15:doubleregs(t
cycle -1 (0) (3) %12 = UNKNOWN %2, 8 :: (load 8 from %ir.v110 |	cycle -1 (1) (9) %21:intregs = S2_vtrunehb %19:doubleregs
cycle 0 (1) (1) %2:intregs = PHI %8:intregs, %bb.0, %5:intreg |	cycle -1 (0) (3) %12 = UNKNOWN %2, 8 :: (load (s64) from %ir.
cycle 0 (0) (0) %1:intregs = PHI %7:intregs, %bb.0, %4:intreg |	cycle 0 (1) (8) %20:intregs = S2_vtrunehb %18:doubleregs
cycle 0 (1) (10) %27:doubleregs = REG_SEQUENCE %20:intregs, % |	cycle 0 (0) (2) %9:doubleregs, %4:intregs = L2_loadrd_pi %1:i
cycle 0 (1) (11) %5:intregs = S2_storerd_pi %2:intregs(tied-d |	cycle 0 (0) (5) %16:doubleregs = S2_vzxtbh %12.isub_hi:double
cycle 0 (0) (2) %9:doubleregs, %4:intregs = L2_loadrd_pi %1:i |	cycle 1 (1) (1) %2:intregs = PHI %8:intregs, %bb.0, %5:intreg
cycle 0 (0) (5) %16:doubleregs = S2_vzxtbh %12.isub_hi:double |	cycle 1 (1) (10) %27:doubleregs = REG_SEQUENCE %20:intregs, %
cycle 0 (0) (4) %15:doubleregs = S2_vzxtbh %12.isub_lo:double |	cycle 1 (1) (11) %5:intregs = S2_storerd_pi %2:intregs(tied-d
cycle 1 (0) (6) %18:doubleregs = M5_vmacbsu %15:doubleregs(ti |	cycle 1 (0) (4) %15:doubleregs = S2_vzxtbh %12.isub_lo:double
  %28:doubleregs, %29:intregs = L2_loadrd_pi %7:intregs(tied- |	  %28:doubleregs, %29:intregs = L2_loadrd_pi %7:intregs(tied-
  %30:doubleregs = L2_loadrd_io %8:intregs, 0 :: (load 8 from |	  %30:doubleregs = L2_loadrd_io %8:intregs, 0 :: (load (s64) 
  %33:doubleregs = M5_vmacbsu %31:doubleregs(tied-def 0), %28 |	  %33:doubleregs = M5_vmacbsu %32:doubleregs(tied-def 0), %28
  %34:doubleregs = M5_vmacbsu %32:doubleregs(tied-def 0), %28 <
  %46:intregs = PHI %29:intregs, %bb.3, %41:intregs, %bb.4    |	  %45:intregs = PHI %29:intregs, %bb.3, %39:intregs, %bb.4
  %47:intregs = PHI %8:intregs, %bb.3, %39:intregs, %bb.4     |	  %46:intregs = PHI %8:intregs, %bb.3, %42:intregs, %bb.4
  %48:doubleregs = PHI %33:doubleregs, %bb.3, %45:doubleregs, |	  %47:doubleregs = PHI %28:doubleregs, %bb.3, %38:doubleregs,
  %49:doubleregs = PHI %34:doubleregs, %bb.3, %44:doubleregs, |	  %48:doubleregs = PHI %31:doubleregs, %bb.3, %44:doubleregs,
							      >	  %49:doubleregs = PHI %33:doubleregs, %bb.3, %43:doubleregs,
							      >	  %34:doubleregs = M5_vmacbsu %48:doubleregs(tied-def 0), %47
  %36:intregs = S2_vtrunehb %48:doubleregs		      |	  %36:doubleregs = L2_loadrd_io %46:intregs, 8 :: (load unkno
  %37:doubleregs = L2_loadrd_io %47:intregs, 8 :: (load unkno |	  %37:intregs = S2_vtrunehb %34:doubleregs
  %38:doubleregs = REG_SEQUENCE %36:intregs, %subreg.isub_lo, |	  %38:doubleregs, %39:intregs = L2_loadrd_pi %45:intregs(tied
  %39:intregs = S2_storerd_pi %47:intregs(tied-def 0), 8, %38 |	  %40:doubleregs = S2_vzxtbh %36.isub_hi:doubleregs
  %40:doubleregs, %41:intregs = L2_loadrd_pi %46:intregs(tied |	  %41:doubleregs = REG_SEQUENCE %37:intregs, %subreg.isub_lo,
  %42:doubleregs = S2_vzxtbh %37.isub_hi:doubleregs	      |	  %42:intregs = S2_storerd_pi %46:intregs(tied-def 0), 8, %41
  %43:doubleregs = S2_vzxtbh %37.isub_lo:doubleregs	      |	  %43:doubleregs = M5_vmacbsu %40:doubleregs(tied-def 0), %38
  %44:doubleregs = M5_vmacbsu %42:doubleregs(tied-def 0), %40 |	  %44:doubleregs = S2_vzxtbh %36.isub_lo:doubleregs
  %45:doubleregs = M5_vmacbsu %43:doubleregs(tied-def 0), %40 <
  %54:intregs = PHI %7:intregs, %bb.3, %46:intregs, %bb.4     |	  %55:intregs = PHI %7:intregs, %bb.3, %45:intregs, %bb.4
  %55:intregs = PHI %8:intregs, %bb.3, %39:intregs, %bb.4     |	  %56:intregs = PHI %8:intregs, %bb.3, %42:intregs, %bb.4
  %56:doubleregs = PHI %33:doubleregs, %bb.3, %45:doubleregs, |	  %57:doubleregs = PHI %28:doubleregs, %bb.3, %38:doubleregs,
  %57:doubleregs = PHI %34:doubleregs, %bb.3, %44:doubleregs, |	  %58:doubleregs = PHI %31:doubleregs, %bb.3, %44:doubleregs,
  %50:intregs = S2_vtrunehb %56:doubleregs		      |	  %59:doubleregs = PHI %33:doubleregs, %bb.3, %43:doubleregs,
  %51:intregs = S2_vtrunehb %57:doubleregs		      |	  %50:doubleregs = M5_vmacbsu %58:doubleregs(tied-def 0), %57
  %52:doubleregs = REG_SEQUENCE %50:intregs, %subreg.isub_lo, |	  %51:intregs = S2_vtrunehb %50:doubleregs
  %53:intregs = S2_storerd_pi %55:intregs(tied-def 0), 8, %52 |	  %52:intregs = S2_vtrunehb %59:doubleregs
							      >	  %53:doubleregs = REG_SEQUENCE %51:intregs, %subreg.isub_lo,
							      >	  %54:intregs = S2_storerd_pi %56:intregs(tied-def 0), 8, %53
		r1 = ##g0				      |			r2 = ##g0
		r2 = ##117901063			      |			r1 = ##117901063
		r5:4 = memd(r0+#0)			      |			r9:8 = memd(r0+#0)
		r7:6 = vzxtbh(r4)			      |			r7:6 = vzxtbh(r9)
		r5:4 = vzxtbh(r5)			      |			r9:8 = vzxtbh(r8)
		r9:8 = memd(r1++#8)			      |			r5:4 = memd(r2++#8)
		r7:6 += vmpybsu(r8,r2)			      |			r7:6 += vmpybsu(r5,r1)
		r5:4 += vmpybsu(r9,r2)			      <
		r9 = vtrunehb(r5:4)			      |			r9:8 += vmpybsu(r4,r1)
		r8 = vtrunehb(r7:6)			      |			r13 = vtrunehb(r7:6)
		r13:12 = memd(r0+#8)			      |			r15:14 = memd(r0+#8)
		r15:14 = memd(r1++#8)			      |			r5:4 = memd(r2++#8)
		r5:4 = vzxtbh(r13)			      |			r12 = vtrunehb(r9:8)
		r7:6 = vzxtbh(r12)			      |			r7:6 = vzxtbh(r15)
		memd(r0++#8) = r9:8			      <
		r5:4 += vmpybsu(r15,r2)			      |			r7:6 += vmpybsu(r5,r1)
		r7:6 += vmpybsu(r14,r2)			      |			r9:8 = vzxtbh(r14)
							      >			memd(r0++#8) = r13:12
		r2 = vtrunehb(r7:6)			      |			r9:8 += vmpybsu(r4,r1)
		r3 = vtrunehb(r5:4)			      |			r3 = vtrunehb(r7:6)
							      >		}
							      >		{
							      >			r2 = vtrunehb(r9:8)
