SU(5):   %17:intregs = L2_loadrh_io %1:intregs, 0 :: (load 2  |	SU(5):   %17:intregs = L2_loadrh_io %1:intregs, 0 :: (load (s
SU(8):   S2_storeri_io %3:intregs, 0, %19:intregs :: (store 4 |	SU(8):   S2_storeri_io %3:intregs, 0, %19:intregs :: (store (
  %17:intregs = L2_loadrh_io %1:intregs, 0 :: (load 2 from %i |	  %17:intregs = L2_loadrh_io %1:intregs, 0 :: (load (s16) fro
  S2_storeri_io %3:intregs, 0, %19:intregs :: (store 4 into % |	  S2_storeri_io %3:intregs, 0, %19:intregs :: (store (s32) in
SU(5):   %17:intregs = L2_loadrh_io %1:intregs, 0 :: (load 2  |	SU(5):   %17:intregs = L2_loadrh_io %1:intregs, 0 :: (load (s
SU(8):   S2_storeri_io %3:intregs, 0, %19:intregs :: (store 4 |	SU(8):   S2_storeri_io %3:intregs, 0, %19:intregs :: (store (
   SU(5) %17:intregs = L2_loadrh_io %1:intregs, 0 :: (load 2  |	   SU(5) %17:intregs = L2_loadrh_io %1:intregs, 0 :: (load (s
   SU(8) S2_storeri_io %3:intregs, 0, %19:intregs :: (store 4 |	   SU(8) S2_storeri_io %3:intregs, 0, %19:intregs :: (store (
	insert at cycle 0   %5:intregs = PHI %13:intregs, %bb |		insert at cycle -1   %5:intregs = PHI %13:intregs, %b
Inst (8)   S2_storeri_io %3:intregs, 0, %19:intregs :: (store |	Inst (8)   S2_storeri_io %3:intregs, 0, %19:intregs :: (store
Trying to insert node between 3 and 4 II: 2		      |	Trying to insert node between 2 and 3 II: 2
	insert at cycle 3   S2_storeri_io %3:intregs, 0, %19: |		insert at cycle 3   S2_storeri_io %3:intregs, 0, %19:
Inst (5)   %17:intregs = L2_loadrh_io %1:intregs, 0 :: (load  |	Inst (5)   %17:intregs = L2_loadrh_io %1:intregs, 0 :: (load 
	insert at cycle 0   %17:intregs = L2_loadrh_io %1:int |		insert at cycle 0   %17:intregs = L2_loadrh_io %1:int
	insert at cycle 0   %1:intregs = PHI %13:intregs, %bb |		insert at cycle -1   %1:intregs = PHI %13:intregs, %b
	es: 80000000 ls:        1 me: 7fffffff ms: 80000000   |		es: 80000000 ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between 1 and 0 II: 2		      |	Trying to insert node between 0 and -1 II: 2
	insert at cycle 1   %9:intregs = nuw A2_addi %0:intre |		insert at cycle -1   %9:intregs = nuw A2_addi %0:intr
	es: 80000000 ls:        0 me: 7fffffff ms: 80000000   |		es: 80000000 ls: ffffffff me: 7fffffff ms: 80000000
Trying to insert node between 0 and -1 II: 2		      |	Trying to insert node between -1 and -2 II: 2
	insert at cycle 0   %0:intregs = PHI %11:intregs, %bb |		insert at cycle -1   %0:intregs = PHI %11:intregs, %b
Schedule Found? 1 (II=3)				      |	Schedule Found? 1 (II=2)
cycle 0 (0) (4) %5:intregs = PHI %13:intregs, %bb.3, %7:intre |	cycle -1 (2) (3) %3:intregs = PHI %23:intregs, %bb.3, %8:intr
cycle 0 (0) (1) %1:intregs = PHI %13:intregs, %bb.3, %9:intre |	cycle -1 (2) (2) %2:intregs = PHI %23:intregs, %bb.3, %3:intr
cycle 0 (0) (0) %0:intregs = PHI %11:intregs, %bb.3, %1:intre |	cycle -1 (0) (4) %5:intregs = PHI %13:intregs, %bb.3, %7:intr
cycle 0 (2) (10) %8:intregs = nuw A2_addi %2:intregs, 8	      |	cycle -1 (0) (1) %1:intregs = PHI %13:intregs, %bb.3, %9:intr
cycle 0 (1) (6) %18:intregs = M2_mpy_ll_s0 %17:intregs, %17:i |	cycle -1 (0) (0) %0:intregs = PHI %11:intregs, %bb.3, %1:intr
cycle 0 (0) (9) %7:intregs = A2_addi %5:intregs, -2	      |	cycle -1 (2) (7) %19:intregs = M2_mpy_acc_sat_ll_s0 %18:intre
cycle 0 (0) (5) %17:intregs = L2_loadrh_io %1:intregs, 0 :: ( |	cycle -1 (2) (8) S2_storeri_io %3:intregs, 0, %19:intregs :: 
cycle 1 (1) (3) %3:intregs = PHI %23:intregs, %bb.3, %8:intre |	cycle -1 (0) (11) %9:intregs = nuw A2_addi %0:intregs, 4
cycle 1 (1) (2) %2:intregs = PHI %23:intregs, %bb.3, %3:intre |	cycle 0 (2) (10) %8:intregs = nuw A2_addi %2:intregs, 8
cycle 1 (1) (7) %19:intregs = M2_mpy_acc_sat_ll_s0 %18:intreg |	cycle 0 (1) (6) %18:intregs = M2_mpy_ll_s0 %17:intregs, %17:i
cycle 1 (1) (8) S2_storeri_io %3:intregs, 0, %19:intregs :: ( |	cycle 0 (0) (9) %7:intregs = A2_addi %5:intregs, -2
cycle 1 (0) (11) %9:intregs = nuw A2_addi %0:intregs, 4	      |	cycle 0 (0) (5) %17:intregs = L2_loadrh_io %1:intregs, 0 :: (
[stage 0 @0c] %5:intregs = PHI %13:intregs, %bb.3, %7:intregs |	[stage 2 @-1c] %3:intregs = PHI %23:intregs, %bb.3, %8:intreg
[stage 0 @0c] %1:intregs = PHI %13:intregs, %bb.3, %9:intregs |	[stage 2 @-1c] %2:intregs = PHI %23:intregs, %bb.3, %3:intreg
[stage 0 @0c] %0:intregs = PHI %11:intregs, %bb.3, %1:intregs |	[stage 0 @-1c] %5:intregs = PHI %13:intregs, %bb.3, %7:intreg
							      >	[stage 0 @-1c] %1:intregs = PHI %13:intregs, %bb.3, %9:intreg
							      >	[stage 0 @-1c] %0:intregs = PHI %11:intregs, %bb.3, %1:intreg
							      >	[stage 2 @-1c] %19:intregs = M2_mpy_acc_sat_ll_s0 %18:intregs
							      >	[stage 2 @-1c] S2_storeri_io %3:intregs, 0, %19:intregs :: (s
							      >	[stage 0 @-1c] %9:intregs = nuw A2_addi %0:intregs, 4
[stage 0 @0c] %17:intregs = L2_loadrh_io %1:intregs, 0 :: (lo |	[stage 0 @0c] %17:intregs = L2_loadrh_io %1:intregs, 0 :: (lo
[stage 1 @1c] %3:intregs = PHI %23:intregs, %bb.3, %8:intregs <
[stage 1 @1c] %2:intregs = PHI %23:intregs, %bb.3, %3:intregs <
[stage 1 @1c] %19:intregs = M2_mpy_acc_sat_ll_s0 %18:intregs( <
[stage 1 @1c] S2_storeri_io %3:intregs, 0, %19:intregs :: (st <
[stage 0 @1c] %9:intregs = nuw A2_addi %0:intregs, 4	      <
		r5 = add(r1,#-2)			      |			r3 = add(r2,#4)
							      >			r6 = add(r1,#-2)
		r2 = add(r2,#4)				      |			r2 = memh(r0+#0)
		r3 = memh(r0+#0)			      <
		r6 = mpy(r3.l,r3.l)			      |			loop0(.LBB0_4,r6)
							      >			r1 = mpy(r2.l,r2.l)
		r4 = add(r0,#4)				      |			r5 = add(r0,#4)
		r3 = memh(r2+#0)			      <
	}						      <
	{						      <
		r6 += mpy(r0.l,r0.l):sat		      <
		memw(r0+#0) = r6.new			      <
		loop0(.LBB0_4,r5)			      <
		r6 = #0					      |			r7:6 = combine(#0,#0)
		r5 = #0					      |			r2 = memh(r3+#0)
		r7 = mpy(r3.l,r3.l)			      |			r1 += mpy(r0.l,r0.l):sat
		r5 = r0					      |			r8 = r5
		r8 = r4					      |			r7 = r0
		r0 = add(r6,#8)				      |			r5 = add(r3,#4)
		r4 = add(r2,#4)				      |			r1 = mpy(r2.l,r2.l)
		r2 = r8					      |			r0 = add(r6,#8)
		r6 = r5					      |			r3 = r8
		r3 = memh(r4+#0)			      |			memw(r7+#0) = r1
		r7 += mpy(r0.l,r0.l):sat		      |			r6 = r7
		memw(r0+#0) = r7.new			      |			r2 = memh(r8+#0)
							      >			r3 = r0
							      >			r0 = add(r7,#8)
							      >		}
							      >		{
							      >			r1 += mpy(r0.l,r0.l):sat
		r1 = add(r5,#8)				      |			memw(r3+#0) = r1.new
		r1 = #0					      |			r3 = #0
		r2 = mpy(r3.l,r3.l)			      |			r1 = mpy(r2.l,r2.l)
		r0 = add(r0,#8)				      <
		r2 += mpy(r0.l,r0.l):sat		      |			r1 += mpy(r0.l,r0.l):sat
		memw(r1+#0) = r2.new			      |			r0 = add(r3,#8)
							      >			memw(r0+#0) = r1.new
