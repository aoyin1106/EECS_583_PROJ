SU(2):   %10:intregs = L2_loadri_io %1:intregs, -4 :: (load 4 |	SU(2):   %10:intregs = L2_loadri_io %1:intregs, -4 :: (load (
SU(4):   %13:intregs = L2_loadri_io %1:intregs, 0 :: (load 4  |	SU(4):   %13:intregs = L2_loadri_io %1:intregs, 0 :: (load (s
SU(7):   %17:intregs = L2_loadri_io %1:intregs, 4 :: (load 4  |	SU(7):   %17:intregs = L2_loadri_io %1:intregs, 4 :: (load (s
SU(10):   %5:intregs = S2_storeri_pi %2:intregs(tied-def 0),  |	SU(10):   %5:intregs = S2_storeri_pi %2:intregs(tied-def 0), 
  %10:intregs = L2_loadri_io %1:intregs, -4 :: (load 4 from % |	  %10:intregs = L2_loadri_io %1:intregs, -4 :: (load (s32) fr
  %13:intregs = L2_loadri_io %1:intregs, 0 :: (load 4 from %i |	  %13:intregs = L2_loadri_io %1:intregs, 0 :: (load (s32) fro
  %17:intregs = L2_loadri_io %1:intregs, 4 :: (load 4 from %i |	  %17:intregs = L2_loadri_io %1:intregs, 4 :: (load (s32) fro
  %5:intregs = S2_storeri_pi %2:intregs(tied-def 0), 4, %20:i |	  %5:intregs = S2_storeri_pi %2:intregs(tied-def 0), 4, %20:i
SU(7):   %17:intregs = L2_loadri_io %1:intregs, 4 :: (load 4  |	SU(7):   %17:intregs = L2_loadri_io %1:intregs, 4 :: (load (s
SU(4):   %13:intregs = L2_loadri_io %1:intregs, 0 :: (load 4  |	SU(4):   %13:intregs = L2_loadri_io %1:intregs, 0 :: (load (s
SU(2):   %10:intregs = L2_loadri_io %1:intregs, -4 :: (load 4 |	SU(2):   %10:intregs = L2_loadri_io %1:intregs, -4 :: (load (
SU(10):   %5:intregs = S2_storeri_pi %2:intregs(tied-def 0),  |	SU(10):   %5:intregs = S2_storeri_pi %2:intregs(tied-def 0), 
   SU(10) %5:intregs = S2_storeri_pi %2:intregs(tied-def 0),  |	   SU(10) %5:intregs = S2_storeri_pi %2:intregs(tied-def 0), 
   SU(10) %5:intregs = S2_storeri_pi %2:intregs(tied-def 0),  |	   SU(10) %5:intregs = S2_storeri_pi %2:intregs(tied-def 0), 
   SU(7) %17:intregs = L2_loadri_io %1:intregs, 4 :: (load 4  |	   SU(7) %17:intregs = L2_loadri_io %1:intregs, 4 :: (load (s
   SU(4) %13:intregs = L2_loadri_io %1:intregs, 0 :: (load 4  |	   SU(4) %13:intregs = L2_loadri_io %1:intregs, 0 :: (load (s
   SU(2) %10:intregs = L2_loadri_io %1:intregs, -4 :: (load 4 |	   SU(2) %10:intregs = L2_loadri_io %1:intregs, -4 :: (load (
Inst (10)   %5:intregs = S2_storeri_pi %2:intregs(tied-def 0) |	Inst (10)   %5:intregs = S2_storeri_pi %2:intregs(tied-def 0)
	insert at cycle 3   %5:intregs = S2_storeri_pi %2:int |		insert at cycle 3   %5:intregs = S2_storeri_pi %2:int
	insert at cycle 3   %2:intregs = PHI %7:intregs, %bb. |		insert at cycle 2   %2:intregs = PHI %7:intregs, %bb.
	insert at cycle 3   %20:intregs = F2_sfadd %16:intreg |		insert at cycle 2   %20:intregs = F2_sfadd %16:intreg
	es: 80000000 ls:        2 me: 7fffffff ms: 80000000   |		es: 80000000 ls:        1 me: 7fffffff ms: 80000000
Trying to insert node between 2 and 0 II: 3		      |	Trying to insert node between 1 and -1 II: 3
	insert at cycle 2   %16:intregs = F2_sfadd %15:intreg |		insert at cycle 1   %16:intregs = F2_sfadd %15:intreg
	es: 80000000 ls:        1 me: 7fffffff ms: 80000000   |		es: 80000000 ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between 1 and -1 II: 3		      |	Trying to insert node between 0 and -2 II: 3
	insert at cycle 1   %15:intregs = F2_sfmpy %13:intreg |		insert at cycle 0   %15:intregs = F2_sfmpy %13:intreg
							      >		es: 80000000 ls:        0 me: 7fffffff ms: 80000000
							      >	Trying to insert node between 0 and -2 II: 3
							      >		insert at cycle -1   %12:intregs = F2_sfmpy %10:intre
							      >
							      >	Inst (8)   %19:intregs = F2_sfmpy %17:intregs, %18:intregs, i
							      >
	insert at cycle 1   %12:intregs = F2_sfmpy %10:intreg |		insert at cycle 1   %19:intregs = F2_sfmpy %17:intreg
Inst (8)   %19:intregs = F2_sfmpy %17:intregs, %18:intregs, i |	Inst (4)   %13:intregs = L2_loadri_io %1:intregs, 0 :: (load 
	es: 80000000 ls:        2 me: 7fffffff ms: 80000000   |		es: 80000000 ls: ffffffff me: 7fffffff ms: 80000000
Trying to insert node between 2 and 0 II: 3		      |	Trying to insert node between -1 and -3 II: 3
	insert at cycle 2   %19:intregs = F2_sfmpy %17:intreg |		insert at cycle -1   %13:intregs = L2_loadri_io %1:in
Inst (4)   %13:intregs = L2_loadri_io %1:intregs, 0 :: (load  |	Inst (2)   %10:intregs = L2_loadri_io %1:intregs, -4 :: (load
	es: 80000000 ls:        0 me: 7fffffff ms: 80000000   |		es: 80000000 ls: fffffffe me: 7fffffff ms: 80000000
Trying to insert node between 0 and -2 II: 3		      |	Trying to insert node between -2 and -4 II: 3
	insert at cycle 0   %13:intregs = L2_loadri_io %1:int |		insert at cycle -2   %10:intregs = L2_loadri_io %1:in
Inst (2)   %10:intregs = L2_loadri_io %1:intregs, -4 :: (load |	Inst (7)   %17:intregs = L2_loadri_io %1:intregs, 4 :: (load 
	failed to insert at cycle 0   %10:intregs = L2_loadri |		insert at cycle 0   %17:intregs = L2_loadri_io %1:int
	insert at cycle -1   %10:intregs = L2_loadri_io %1:in <
							      <
Inst (7)   %17:intregs = L2_loadri_io %1:intregs, 4 :: (load  <
							      <
	es: 80000000 ls:        1 me: 7fffffff ms: 80000000   <
Trying to insert node between 1 and -1 II: 3		      <
	insert at cycle 1   %17:intregs = L2_loadri_io %1:int <
	es: 80000000 ls: ffffffff me: 7fffffff ms: 80000000   |		es: 80000000 ls: fffffffe me: 7fffffff ms: 80000000
Trying to insert node between -1 and -3 II: 3		      |	Trying to insert node between -2 and -4 II: 3
	insert at cycle -1   %1:intregs = PHI %0:intregs, %bb |		insert at cycle -2   %1:intregs = PHI %0:intregs, %bb
	es: ffffffff ls:        1 me: 7fffffff ms: 80000000   |		es: fffffffe ls:        0 me: 7fffffff ms: 80000000
Trying to insert node between -1 and 1 II: 3		      |	Trying to insert node between -2 and 0 II: 3
	insert at cycle -1   %6:intregs = A2_addi %1:intregs, |		insert at cycle -2   %6:intregs = A2_addi %1:intregs,
Schedule Found? 1 (II=4)				      |	Schedule Found? 1 (II=3)
cycle -1 (0) (0) %1:intregs = PHI %0:intregs, %bb.0, %6:intre |	cycle -2 (0) (0) %1:intregs = PHI %0:intregs, %bb.0, %6:intre
cycle -1 (1) (6) %16:intregs = F2_sfadd %15:intregs, %12:intr |	cycle -2 (1) (6) %16:intregs = F2_sfadd %15:intregs, %12:intr
cycle -1 (1) (8) %19:intregs = F2_sfmpy %17:intregs, %18:intr |	cycle -2 (1) (8) %19:intregs = F2_sfmpy %17:intregs, %18:intr
cycle -1 (0) (2) %10:intregs = L2_loadri_io %1:intregs, -4 :: |	cycle -2 (0) (2) %10:intregs = L2_loadri_io %1:intregs, -4 ::
cycle -1 (0) (11) %6:intregs = A2_addi %1:intregs, 12	      |	cycle -2 (0) (11) %6:intregs = A2_addi %1:intregs, 12
cycle 0 (1) (1) %2:intregs = PHI %7:intregs, %bb.0, %5:intreg |	cycle -1 (1) (1) %2:intregs = PHI %7:intregs, %bb.0, %5:intre
cycle 0 (1) (9) %20:intregs = F2_sfadd %16:intregs, %19:intre |	cycle -1 (1) (9) %20:intregs = F2_sfadd %16:intregs, %19:intr
cycle 0 (1) (10) %5:intregs = S2_storeri_pi %2:intregs(tied-d |	cycle -1 (0) (3) %12:intregs = F2_sfmpy %10:intregs, %11:intr
cycle 0 (0) (4) %13:intregs = L2_loadri_io %1:intregs, 0 :: ( |	cycle -1 (0) (4) %13:intregs = L2_loadri_io %1:intregs, 0 :: 
cycle 1 (0) (5) %15:intregs = F2_sfmpy %13:intregs, %14:intre |	cycle 0 (1) (10) %5:intregs = S2_storeri_pi %2:intregs(tied-d
cycle 1 (0) (3) %12:intregs = F2_sfmpy %10:intregs, %11:intre |	cycle 0 (0) (5) %15:intregs = F2_sfmpy %13:intregs, %14:intre
cycle 1 (0) (7) %17:intregs = L2_loadri_io %1:intregs, 4 :: ( |	cycle 0 (0) (7) %17:intregs = L2_loadri_io %1:intregs, 4 :: (
[stage 0 @-1c] %1:intregs = PHI %0:intregs, %bb.0, %6:intregs |	[stage 0 @-2c] %1:intregs = PHI %0:intregs, %bb.0, %6:intregs
[stage 1 @-1c] %16:intregs = F2_sfadd %15:intregs, %12:intreg |	[stage 1 @-2c] %16:intregs = F2_sfadd %15:intregs, %12:intreg
[stage 1 @-1c] %19:intregs = F2_sfmpy %17:intregs, %18:intreg |	[stage 1 @-2c] %19:intregs = F2_sfmpy %17:intregs, %18:intreg
[stage 0 @-1c] %10:intregs = L2_loadri_io %1:intregs, -4 :: ( |	[stage 0 @-2c] %10:intregs = L2_loadri_io %1:intregs, -4 :: (
[stage 0 @-1c] %6:intregs = A2_addi %1:intregs, 12	      |	[stage 0 @-2c] %6:intregs = A2_addi %1:intregs, 12
[stage 1 @0c] %2:intregs = PHI %7:intregs, %bb.0, %5:intregs, |	[stage 1 @-1c] %2:intregs = PHI %7:intregs, %bb.0, %5:intregs
[stage 1 @0c] %20:intregs = F2_sfadd %16:intregs, %19:intregs |	[stage 1 @-1c] %20:intregs = F2_sfadd %16:intregs, %19:intreg
[stage 1 @0c] %5:intregs = S2_storeri_pi %2:intregs(tied-def  |	[stage 0 @-1c] %12:intregs = F2_sfmpy %10:intregs, %11:intreg
[stage 0 @0c] %13:intregs = L2_loadri_io %1:intregs, 0 :: (lo |	[stage 0 @-1c] %13:intregs = L2_loadri_io %1:intregs, 0 :: (l
[stage 0 @1c] %15:intregs = F2_sfmpy %13:intregs, %14:intregs |	[stage 1 @0c] %5:intregs = S2_storeri_pi %2:intregs(tied-def 
[stage 0 @1c] %12:intregs = F2_sfmpy %10:intregs, %11:intregs |	[stage 0 @0c] %15:intregs = F2_sfmpy %13:intregs, %14:intregs
[stage 0 @1c] %17:intregs = L2_loadri_io %1:intregs, 4 :: (lo |	[stage 0 @0c] %17:intregs = L2_loadri_io %1:intregs, 4 :: (lo
		r5 = memw(r6+#0)			      |			r5 = memw(r6+#-4)
		r8 = memw(r6+#-4)			      |			r8 = memw(r6+#0)
		r5 = sfmpy(r5,r3)			      |			r5 = sfmpy(r5,r2)
		r6 = sfmpy(r8,r2)			      |			r6 = sfmpy(r8,r3)
		r9 = sfadd(r5,r6)			      |			r9 = sfadd(r6,r5)
		r5 = memw(r4+#0)			      |			r6 = memw(r4+#0)
		r6 = memw(r4+#-4)			      |			r5 = memw(r4+#-4)
		r8 = sfadd(r9,r8)			      |			r4 = sfadd(r9,r8)
		r5 = sfmpy(r5,r3)			      |			r12 = add(r4,#12)
		r4 = add(r4,#12)			      <
							      >			memw(r0++#4) = r4.new
		r6 = sfmpy(r6,r2)			      |			r5 = sfmpy(r5,r2)
		memw(r0++#4) = r8			      |			r6 = sfmpy(r6,r3)
							      >			r4 = r12
		r2 = sfadd(r5,r6)			      |			r2 = sfadd(r6,r5)
