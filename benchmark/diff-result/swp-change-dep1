SU(2):   %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs( |	SU(2):   %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs(
SU(3):   %11:doubleregs = L2_loadrd_io %2:intregs, 0 :: (load |	SU(3):   %11:doubleregs = L2_loadrd_io %2:intregs, 0 :: (load
SU(5):   %5:intregs = S2_storerd_pi %2:intregs(tied-def 0), 8 |	SU(5):   %5:intregs = S2_storerd_pi %2:intregs(tied-def 0), 8
  %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs(tied-de |	  %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs(tied-de
  %11:doubleregs = L2_loadrd_io %2:intregs, 0 :: (load 8 from |	  %11:doubleregs = L2_loadrd_io %2:intregs, 0 :: (load (s64) 
  %5:intregs = S2_storerd_pi %2:intregs(tied-def 0), 8, %12:d |	  %5:intregs = S2_storerd_pi %2:intregs(tied-def 0), 8, %12:d
SU(3):   %11:doubleregs = L2_loadrd_io %2:intregs, 0 :: (load |	SU(3):   %11:doubleregs = L2_loadrd_io %2:intregs, 0 :: (load
SU(2):   %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs( |	SU(2):   %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs(
SU(5):   %5:intregs = S2_storerd_pi %2:intregs(tied-def 0), 8 |	SU(5):   %5:intregs = S2_storerd_pi %2:intregs(tied-def 0), 8
   SU(2) %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs( |	   SU(2) %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs(
   SU(5) %5:intregs = S2_storerd_pi %2:intregs(tied-def 0), 8 |	   SU(5) %5:intregs = S2_storerd_pi %2:intregs(tied-def 0), 8
   SU(2) %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs( |	   SU(2) %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intregs(
   SU(5) %5:intregs = S2_storerd_pi %2:intregs(tied-def 0), 8 |	   SU(5) %5:intregs = S2_storerd_pi %2:intregs(tied-def 0), 8
   SU(3) %11:doubleregs = L2_loadrd_io %2:intregs, 0 :: (load |	   SU(3) %11:doubleregs = L2_loadrd_io %2:intregs, 0 :: (load
Inst (2)   %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intreg |	Inst (2)   %9:doubleregs, %4:intregs = L2_loadrd_pi %1:intreg
	insert at cycle 0   %9:doubleregs, %4:intregs = L2_lo |		insert at cycle 0   %9:doubleregs, %4:intregs = L2_lo
	insert at cycle 0   %1:intregs = PHI %7:intregs, %bb. |		insert at cycle -1   %1:intregs = PHI %7:intregs, %bb
	insert at cycle 4   %12:doubleregs = PS_vmulw_acc %11 |		insert at cycle 5   %12:doubleregs = PS_vmulw_acc %11
Inst (5)   %5:intregs = S2_storerd_pi %2:intregs(tied-def 0), |	Inst (5)   %5:intregs = S2_storerd_pi %2:intregs(tied-def 0),
	es:        5 ls: 7fffffff me: 7fffffff ms: 80000000   |		es:        6 ls: 7fffffff me: 7fffffff ms: 80000000
Trying to insert node between 5 and 6 II: 2		      |	Trying to insert node between 6 and 7 II: 2
	insert at cycle 5   %5:intregs = S2_storerd_pi %2:int |		insert at cycle 6   %5:intregs = S2_storerd_pi %2:int
	es:        4 ls:        5 me: 7fffffff ms: 80000000   |		es:        5 ls:        6 me: 7fffffff ms: 80000000
Trying to insert node between 5 and 4 II: 2		      |	Trying to insert node between 6 and 5 II: 2
Inst (3)   %11:doubleregs = L2_loadrd_io %2:intregs, 0 :: (lo |	Inst (3)   %11:doubleregs = L2_loadrd_io %2:intregs, 0 :: (lo
	es: 80000000 ls:        0 me: 7fffffff ms: 80000000   |		es: 80000000 ls:        1 me: 7fffffff ms: 80000000
Trying to insert node between 0 and -1 II: 2		      |	Trying to insert node between 1 and 0 II: 2
	insert at cycle 0   %11:doubleregs = L2_loadrd_io %2: |		insert at cycle 1   %11:doubleregs = L2_loadrd_io %2:
Schedule Found? 1 (II=3)				      |	Schedule Found? 1 (II=2)
cycle 0 (0) (0) %1:intregs = PHI %7:intregs, %bb.0, %4:intreg |	cycle -1 (3) (1) %2:intregs = PHI %8:intregs, %bb.0, %5:intre
cycle 0 (2) (4) %12:doubleregs = PS_vmulw_acc %11:doubleregs( |	cycle -1 (0) (0) %1:intregs = PHI %7:intregs, %bb.0, %4:intre
cycle 0 (0) (2) %9:doubleregs, %4:intregs = L2_loadrd_pi %1:i |	cycle -1 (3) (4) %12:doubleregs = PS_vmulw_acc %11:doubleregs
cycle 0 (0) (3) %11 = UNKNOWN %2, 16 :: (load 8 from %ir.v13) |	cycle -1 (1) (3) %11 = UNKNOWN %2, 16 :: (load (s64) from %ir
cycle 1 (2) (1) %2:intregs = PHI %8:intregs, %bb.0, %5:intreg |	cycle 0 (3) (5) %5:intregs = S2_storerd_pi %2:intregs(tied-de
cycle 1 (2) (5) %5:intregs = S2_storerd_pi %2:intregs(tied-de |	cycle 0 (0) (2) %9:doubleregs, %4:intregs = L2_loadrd_pi %1:i
  %16:doubleregs, %17:intregs = L2_loadrd_pi %7:intregs(tied- |	  %16:doubleregs, %17:intregs = L2_loadrd_pi %7:intregs(tied-
  %18:doubleregs = L2_loadrd_io %8:intregs, 0 :: (load 8 from <
  %19:doubleregs, %20:intregs = L2_loadrd_pi %17:intregs(tied |	  %18:doubleregs = L2_loadrd_io %8:intregs, 0 :: (load (s64) 
  %21:doubleregs = L2_loadrd_io %8:intregs, 8 :: (load 8 from |	  %19:doubleregs, %20:intregs = L2_loadrd_pi %17:intregs(tied
New block						      |	prolog:
; predecessors: %bb.4, %bb.5				      |	; predecessors: %bb.4
  successors: %bb.5(0x7c000000), %bb.1(0x04000000); %bb.5(96. |	  successors: %bb.2(0x80000000); %bb.2(100.00%)
  %27:intregs = PHI %20:intregs, %bb.4, %24:intregs, %bb.5    |	  %21:doubleregs = L2_loadrd_io %8:intregs, 8 :: (load (s64) 
  %28:intregs = PHI %8:intregs, %bb.4, %26:intregs, %bb.5     |	  %22:doubleregs, %23:intregs = L2_loadrd_pi %20:intregs(tied
  %29:doubleregs = PHI %19:doubleregs, %bb.4, %23:doubleregs, |	New block
  %30:doubleregs = PHI %16:doubleregs, %bb.4, %29:doubleregs, |	bb.6.b2:
  %31:doubleregs = PHI %21:doubleregs, %bb.4, %25:doubleregs, |	; predecessors: %bb.5, %bb.6
  %32:doubleregs = PHI %18:doubleregs, %bb.4, %31:doubleregs, |	  successors: %bb.6(0x7c000000), %bb.1(0x04000000); %bb.6(96.
  %22:doubleregs = PS_vmulw_acc %32:doubleregs(tied-def 0), % |
  %23:doubleregs, %24:intregs = L2_loadrd_pi %27:intregs(tied |	  %29:intregs = PHI %23:intregs, %bb.5, %28:intregs, %bb.6
  %25:doubleregs = L2_loadrd_io %28:intregs, 16 :: (load unkn |	  %30:intregs = PHI %8:intregs, %bb.5, %26:intregs, %bb.6
  %26:intregs = S2_storerd_pi %28:intregs(tied-def 0), 8, %22 |	  %31:doubleregs = PHI %22:doubleregs, %bb.5, %27:doubleregs,
							      >	  %32:doubleregs = PHI %19:doubleregs, %bb.5, %31:doubleregs,
							      >	  %33:doubleregs = PHI %16:doubleregs, %bb.5, %32:doubleregs,
							      >	  %34:doubleregs = PHI %21:doubleregs, %bb.5, %25:doubleregs,
							      >	  %35:doubleregs = PHI %18:doubleregs, %bb.5, %34:doubleregs,
							      >	  %24:doubleregs = PS_vmulw_acc %35:doubleregs(tied-def 0), %
							      >	  %25:doubleregs = L2_loadrd_io %30:intregs, 16 :: (load unkn
							      >	  %26:intregs = S2_storerd_pi %30:intregs(tied-def 0), 8, %24
							      >	  %27:doubleregs, %28:intregs = L2_loadrd_pi %29:intregs(tied
bb.6:							      |	bb.7:
; predecessors: %bb.5					      |	; predecessors: %bb.6
  %35:intregs = PHI %17:intregs, %bb.4, %27:intregs, %bb.5    |	  %38:intregs = PHI %20:intregs, %bb.5, %29:intregs, %bb.6
  %36:intregs = PHI %8:intregs, %bb.4, %26:intregs, %bb.5     |	  %39:intregs = PHI %8:intregs, %bb.5, %26:intregs, %bb.6
  %37:doubleregs = PHI %19:doubleregs, %bb.4, %23:doubleregs, |	  %40:doubleregs = PHI %22:doubleregs, %bb.5, %27:doubleregs,
  %38:doubleregs = PHI %16:doubleregs, %bb.4, %29:doubleregs, |	  %41:doubleregs = PHI %19:doubleregs, %bb.5, %31:doubleregs,
  %39:doubleregs = PHI %21:doubleregs, %bb.4, %25:doubleregs, |	  %42:doubleregs = PHI %16:doubleregs, %bb.5, %32:doubleregs,
  %40:doubleregs = PHI %18:doubleregs, %bb.4, %31:doubleregs, |	  %43:doubleregs = PHI %21:doubleregs, %bb.5, %25:doubleregs,
  %33:doubleregs = PS_vmulw_acc %40:doubleregs(tied-def 0), % |	  %44:doubleregs = PHI %18:doubleregs, %bb.5, %34:doubleregs,
  %34:intregs = S2_storerd_pi %36:intregs(tied-def 0), 8, %33 |	  %36:doubleregs = PS_vmulw_acc %44:doubleregs(tied-def 0), %
							      >	  %37:intregs = S2_storerd_pi %39:intregs(tied-def 0), 8, %36
bb.7:							      |	bb.8:
; predecessors: %bb.6					      |	; predecessors: %bb.7
							      >	  successors: %bb.1(0x80000000); %bb.1(100.00%)
							      >
							      >	  %47:intregs = PHI %17:intregs, %bb.4, %38:intregs, %bb.7
							      >	  %48:intregs = PHI %8:intregs, %bb.4, %37:intregs, %bb.7
							      >	  %49:doubleregs = PHI %19:doubleregs, %bb.4, %40:doubleregs,
							      >	  %50:doubleregs = PHI %16:doubleregs, %bb.4, %41:doubleregs,
							      >	  %51:doubleregs = PHI %18:doubleregs, %bb.4, %43:doubleregs,
							      >	  %45:doubleregs = PS_vmulw_acc %51:doubleregs(tied-def 0), %
							      >	  %46:intregs = S2_storerd_pi %48:intregs(tied-def 0), 8, %45
							      >	epilog:
							      >	bb.9:
							      >	; predecessors: %bb.8
  %43:intregs = PHI %7:intregs, %bb.3, %35:intregs, %bb.6     |	  %55:intregs = PHI %7:intregs, %bb.3, %47:intregs, %bb.8
  %44:intregs = PHI %8:intregs, %bb.3, %34:intregs, %bb.6     |	  %56:intregs = PHI %8:intregs, %bb.3, %46:intregs, %bb.8
  %45:doubleregs = PHI %16:doubleregs, %bb.3, %37:doubleregs, |	  %57:doubleregs = PHI %16:doubleregs, %bb.3, %49:doubleregs,
  %46:doubleregs = PHI %18:doubleregs, %bb.3, %39:doubleregs, |	  %52:doubleregs = L2_loadrd_io %56:intregs, 0 :: (load unkno
  %41:doubleregs = PS_vmulw_acc %46:doubleregs(tied-def 0), % |	  %53:doubleregs = PS_vmulw_acc %52:doubleregs(tied-def 0), %
  %42:intregs = S2_storerd_pi %44:intregs(tied-def 0), 8, %41 |	  %54:intregs = S2_storerd_pi %56:intregs(tied-def 0), 8, %53
		loop0(.LBB0_1,#198)			      |			loop0(.LBB0_1,#197)
		r13:12 = memd(r1++#8)			      |			r15:14 = memd(r1++#8)
		r7:6 = memd(r0+#0)			      |			r9:8 = memd(r0+#0)
							      >		}
							      >		{
							      >			r7:6 = memd(r0+#8)
		r5:4 = memd(r0+#8)			      |			r5:4 = memd(r1++#8)
		r9:8 = memd(r1++#8)			      |			r13:12 = memd(r1++#8)
		r15:14 = combine(r7,r6)			      |			r11:10 = combine(r9,r8)
		r7:6 = combine(r5,r4)			      |			r9:8 = combine(r7,r6)
		r5:4 = memd(r0+#16)			      |			r7:6 = memd(r0+#16)
							      >		}
							      >		{
							      >			r11 += mpyi(r15,r3)
							      >			r10 += mpyi(r14,r2)
							      >			r15:14 = combine(r5,r4)
							      >			r5:4 = combine(r13,r12)
		r15 += mpyi(r13,r3)			      |			r13:12 = memd(r1++#8)
		r14 += mpyi(r12,r2)			      <
		r13:12 = combine(r9,r8)			      <
		r9:8 = memd(r1++#8)			      <
		memd(r0++#8) = r15:14			      |			memd(r0++#8) = r11:10
		r7 += mpyi(r13,r3)			      |			r9 += mpyi(r15,r3)
		r6 += mpyi(r12,r2)			      |			r8 += mpyi(r14,r2)
							      >		}
							      >		{
							      >			r7 += mpyi(r5,r3)
							      >			r6 += mpyi(r4,r2)
		r5 += mpyi(r9,r3)			      |			memd(r0++#8) = r9:8
		r4 += mpyi(r8,r2)			      <
							      >			r7:6 = memd(r0+#0)
							      >		}
							      >		{
							      >			r7 += mpyi(r13,r3)
							      >			r6 += mpyi(r12,r2)
							      >		}
							      >		{
		memd(r0++#8) = r5:4			      |			memd(r0++#8) = r7:6
